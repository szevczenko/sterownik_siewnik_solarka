
nowy_sterownik.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000435a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000292  00800060  0000435a  000043ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000029c  008002f2  008002f2  00004680  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004680  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000046dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000628  00000000  00000000  00004718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005c85  00000000  00000000  00004d40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001f67  00000000  00000000  0000a9c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003bb4  00000000  00000000  0000c92c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e88  00000000  00000000  000104e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bd2  00000000  00000000  00011368  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002aa9  00000000  00000000  00012f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000560  00000000  00000000  000159e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__ctors_end>
       4:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
       8:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
       c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      10:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      14:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      18:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      1c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      20:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      24:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      28:	0c 94 9d 16 	jmp	0x2d3a	; 0x2d3a <__vector_10>
      2c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      30:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      34:	0c 94 97 17 	jmp	0x2f2e	; 0x2f2e <__vector_13>
      38:	0c 94 c8 17 	jmp	0x2f90	; 0x2f90 <__vector_14>
      3c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      40:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      44:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      48:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      4c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      50:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
      54:	27 08       	sbc	r2, r7
      56:	2e 08       	sbc	r2, r14
      58:	31 08       	sbc	r3, r1
      5a:	37 08       	sbc	r3, r7
      5c:	3d 08       	sbc	r3, r13
      5e:	42 08       	sbc	r4, r2
      60:	48 08       	sbc	r4, r8
      62:	4f 08       	sbc	r4, r15
      64:	53 08       	sbc	r5, r3
      66:	5b 08       	sbc	r5, r11
      68:	aa 08       	sbc	r10, r10
      6a:	aa 08       	sbc	r10, r10
      6c:	aa 08       	sbc	r10, r10
      6e:	aa 08       	sbc	r10, r10
      70:	aa 08       	sbc	r10, r10
      72:	aa 08       	sbc	r10, r10
      74:	aa 08       	sbc	r10, r10
      76:	aa 08       	sbc	r10, r10
      78:	aa 08       	sbc	r10, r10
      7a:	aa 08       	sbc	r10, r10
      7c:	aa 08       	sbc	r10, r10
      7e:	aa 08       	sbc	r10, r10
      80:	aa 08       	sbc	r10, r10
      82:	aa 08       	sbc	r10, r10
      84:	aa 08       	sbc	r10, r10
      86:	aa 08       	sbc	r10, r10
      88:	aa 08       	sbc	r10, r10
      8a:	aa 08       	sbc	r10, r10
      8c:	aa 08       	sbc	r10, r10
      8e:	aa 08       	sbc	r10, r10
      90:	aa 08       	sbc	r10, r10
      92:	aa 08       	sbc	r10, r10
      94:	aa 08       	sbc	r10, r10
      96:	aa 08       	sbc	r10, r10
      98:	aa 08       	sbc	r10, r10
      9a:	aa 08       	sbc	r10, r10
      9c:	aa 08       	sbc	r10, r10
      9e:	aa 08       	sbc	r10, r10
      a0:	aa 08       	sbc	r10, r10
      a2:	aa 08       	sbc	r10, r10
      a4:	aa 08       	sbc	r10, r10
      a6:	aa 08       	sbc	r10, r10
      a8:	aa 08       	sbc	r10, r10
      aa:	aa 08       	sbc	r10, r10
      ac:	aa 08       	sbc	r10, r10
      ae:	aa 08       	sbc	r10, r10
      b0:	aa 08       	sbc	r10, r10
      b2:	aa 08       	sbc	r10, r10
      b4:	aa 08       	sbc	r10, r10
      b6:	aa 08       	sbc	r10, r10
      b8:	aa 08       	sbc	r10, r10
      ba:	aa 08       	sbc	r10, r10
      bc:	aa 08       	sbc	r10, r10
      be:	aa 08       	sbc	r10, r10
      c0:	aa 08       	sbc	r10, r10
      c2:	aa 08       	sbc	r10, r10
      c4:	aa 08       	sbc	r10, r10
      c6:	aa 08       	sbc	r10, r10
      c8:	aa 08       	sbc	r10, r10
      ca:	aa 08       	sbc	r10, r10
      cc:	aa 08       	sbc	r10, r10
      ce:	aa 08       	sbc	r10, r10
      d0:	aa 08       	sbc	r10, r10
      d2:	aa 08       	sbc	r10, r10
      d4:	aa 08       	sbc	r10, r10
      d6:	aa 08       	sbc	r10, r10
      d8:	aa 08       	sbc	r10, r10
      da:	aa 08       	sbc	r10, r10
      dc:	aa 08       	sbc	r10, r10
      de:	aa 08       	sbc	r10, r10
      e0:	aa 08       	sbc	r10, r10
      e2:	aa 08       	sbc	r10, r10
      e4:	aa 08       	sbc	r10, r10
      e6:	aa 08       	sbc	r10, r10
      e8:	aa 08       	sbc	r10, r10
      ea:	aa 08       	sbc	r10, r10
      ec:	aa 08       	sbc	r10, r10
      ee:	aa 08       	sbc	r10, r10
      f0:	aa 08       	sbc	r10, r10
      f2:	aa 08       	sbc	r10, r10
      f4:	aa 08       	sbc	r10, r10
      f6:	aa 08       	sbc	r10, r10
      f8:	aa 08       	sbc	r10, r10
      fa:	aa 08       	sbc	r10, r10
      fc:	aa 08       	sbc	r10, r10
      fe:	aa 08       	sbc	r10, r10
     100:	aa 08       	sbc	r10, r10
     102:	aa 08       	sbc	r10, r10
     104:	aa 08       	sbc	r10, r10
     106:	aa 08       	sbc	r10, r10
     108:	aa 08       	sbc	r10, r10
     10a:	aa 08       	sbc	r10, r10
     10c:	aa 08       	sbc	r10, r10
     10e:	aa 08       	sbc	r10, r10
     110:	aa 08       	sbc	r10, r10
     112:	aa 08       	sbc	r10, r10
     114:	aa 08       	sbc	r10, r10
     116:	62 08       	sbc	r6, r2
     118:	69 08       	sbc	r6, r9
     11a:	6f 08       	sbc	r6, r15
     11c:	74 08       	sbc	r7, r4
     11e:	7a 08       	sbc	r7, r10
     120:	80 08       	sbc	r8, r0
     122:	aa 08       	sbc	r10, r10
     124:	aa 08       	sbc	r10, r10
     126:	aa 08       	sbc	r10, r10
     128:	aa 08       	sbc	r10, r10
     12a:	aa 08       	sbc	r10, r10
     12c:	99 08       	sbc	r9, r9
     12e:	aa 08       	sbc	r10, r10
     130:	aa 08       	sbc	r10, r10
     132:	88 08       	sbc	r8, r8
     134:	8d 08       	sbc	r8, r13
     136:	aa 08       	sbc	r10, r10
     138:	85 08       	sbc	r8, r5
     13a:	93 08       	sbc	r9, r3
     13c:	aa 08       	sbc	r10, r10
     13e:	aa 08       	sbc	r10, r10
     140:	aa 08       	sbc	r10, r10
     142:	aa 08       	sbc	r10, r10
     144:	aa 08       	sbc	r10, r10
     146:	aa 08       	sbc	r10, r10
     148:	aa 08       	sbc	r10, r10
     14a:	aa 08       	sbc	r10, r10
     14c:	aa 08       	sbc	r10, r10
     14e:	aa 08       	sbc	r10, r10
     150:	aa 08       	sbc	r10, r10
     152:	aa 08       	sbc	r10, r10
     154:	aa 08       	sbc	r10, r10
     156:	aa 08       	sbc	r10, r10
     158:	aa 08       	sbc	r10, r10
     15a:	aa 08       	sbc	r10, r10
     15c:	aa 08       	sbc	r10, r10
     15e:	aa 08       	sbc	r10, r10
     160:	aa 08       	sbc	r10, r10
     162:	aa 08       	sbc	r10, r10
     164:	aa 08       	sbc	r10, r10
     166:	aa 08       	sbc	r10, r10
     168:	aa 08       	sbc	r10, r10
     16a:	aa 08       	sbc	r10, r10
     16c:	aa 08       	sbc	r10, r10
     16e:	aa 08       	sbc	r10, r10
     170:	aa 08       	sbc	r10, r10
     172:	aa 08       	sbc	r10, r10
     174:	aa 08       	sbc	r10, r10
     176:	aa 08       	sbc	r10, r10
     178:	aa 08       	sbc	r10, r10
     17a:	aa 08       	sbc	r10, r10
     17c:	aa 08       	sbc	r10, r10
     17e:	aa 08       	sbc	r10, r10
     180:	aa 08       	sbc	r10, r10
     182:	aa 08       	sbc	r10, r10
     184:	aa 08       	sbc	r10, r10
     186:	aa 08       	sbc	r10, r10
     188:	aa 08       	sbc	r10, r10
     18a:	aa 08       	sbc	r10, r10
     18c:	aa 08       	sbc	r10, r10
     18e:	aa 08       	sbc	r10, r10
     190:	aa 08       	sbc	r10, r10
     192:	aa 08       	sbc	r10, r10
     194:	aa 08       	sbc	r10, r10
     196:	aa 08       	sbc	r10, r10
     198:	aa 08       	sbc	r10, r10
     19a:	aa 08       	sbc	r10, r10
     19c:	aa 08       	sbc	r10, r10
     19e:	aa 08       	sbc	r10, r10
     1a0:	aa 08       	sbc	r10, r10
     1a2:	aa 08       	sbc	r10, r10
     1a4:	aa 08       	sbc	r10, r10
     1a6:	aa 08       	sbc	r10, r10
     1a8:	aa 08       	sbc	r10, r10
     1aa:	aa 08       	sbc	r10, r10
     1ac:	aa 08       	sbc	r10, r10
     1ae:	aa 08       	sbc	r10, r10
     1b0:	aa 08       	sbc	r10, r10
     1b2:	aa 08       	sbc	r10, r10
     1b4:	aa 08       	sbc	r10, r10
     1b6:	aa 08       	sbc	r10, r10
     1b8:	aa 08       	sbc	r10, r10
     1ba:	aa 08       	sbc	r10, r10
     1bc:	aa 08       	sbc	r10, r10
     1be:	aa 08       	sbc	r10, r10
     1c0:	aa 08       	sbc	r10, r10
     1c2:	aa 08       	sbc	r10, r10
     1c4:	aa 08       	sbc	r10, r10
     1c6:	aa 08       	sbc	r10, r10
     1c8:	aa 08       	sbc	r10, r10
     1ca:	aa 08       	sbc	r10, r10
     1cc:	aa 08       	sbc	r10, r10
     1ce:	aa 08       	sbc	r10, r10
     1d0:	aa 08       	sbc	r10, r10
     1d2:	aa 08       	sbc	r10, r10
     1d4:	aa 08       	sbc	r10, r10
     1d6:	aa 08       	sbc	r10, r10
     1d8:	aa 08       	sbc	r10, r10
     1da:	aa 08       	sbc	r10, r10
     1dc:	aa 08       	sbc	r10, r10
     1de:	aa 08       	sbc	r10, r10
     1e0:	aa 08       	sbc	r10, r10
     1e2:	aa 08       	sbc	r10, r10
     1e4:	aa 08       	sbc	r10, r10
     1e6:	aa 08       	sbc	r10, r10
     1e8:	aa 08       	sbc	r10, r10
     1ea:	aa 08       	sbc	r10, r10
     1ec:	aa 08       	sbc	r10, r10
     1ee:	aa 08       	sbc	r10, r10
     1f0:	aa 08       	sbc	r10, r10
     1f2:	aa 08       	sbc	r10, r10
     1f4:	aa 08       	sbc	r10, r10
     1f6:	aa 08       	sbc	r10, r10
     1f8:	aa 08       	sbc	r10, r10
     1fa:	aa 08       	sbc	r10, r10
     1fc:	aa 08       	sbc	r10, r10
     1fe:	aa 08       	sbc	r10, r10
     200:	aa 08       	sbc	r10, r10
     202:	aa 08       	sbc	r10, r10
     204:	aa 08       	sbc	r10, r10
     206:	aa 08       	sbc	r10, r10
     208:	aa 08       	sbc	r10, r10
     20a:	aa 08       	sbc	r10, r10
     20c:	aa 08       	sbc	r10, r10
     20e:	aa 08       	sbc	r10, r10
     210:	aa 08       	sbc	r10, r10
     212:	aa 08       	sbc	r10, r10
     214:	aa 08       	sbc	r10, r10
     216:	aa 08       	sbc	r10, r10
     218:	aa 08       	sbc	r10, r10
     21a:	aa 08       	sbc	r10, r10
     21c:	aa 08       	sbc	r10, r10
     21e:	aa 08       	sbc	r10, r10
     220:	aa 08       	sbc	r10, r10
     222:	aa 08       	sbc	r10, r10
     224:	aa 08       	sbc	r10, r10
     226:	aa 08       	sbc	r10, r10
     228:	aa 08       	sbc	r10, r10
     22a:	aa 08       	sbc	r10, r10
     22c:	aa 08       	sbc	r10, r10
     22e:	aa 08       	sbc	r10, r10
     230:	aa 08       	sbc	r10, r10
     232:	aa 08       	sbc	r10, r10
     234:	aa 08       	sbc	r10, r10
     236:	aa 08       	sbc	r10, r10
     238:	aa 08       	sbc	r10, r10
     23a:	aa 08       	sbc	r10, r10
     23c:	aa 08       	sbc	r10, r10
     23e:	aa 08       	sbc	r10, r10
     240:	aa 08       	sbc	r10, r10
     242:	aa 08       	sbc	r10, r10
     244:	9d 08       	sbc	r9, r13
     246:	a9 08       	sbc	r10, r9
     248:	a7 08       	sbc	r10, r7
     24a:	a5 08       	sbc	r10, r5
     24c:	a3 08       	sbc	r10, r3
     24e:	a1 08       	sbc	r10, r1
     250:	9f 08       	sbc	r9, r15
     252:	07 63       	ori	r16, 0x37	; 55
     254:	42 36       	cpi	r20, 0x62	; 98
     256:	b7 9b       	sbis	0x16, 7	; 22
     258:	d8 a7       	std	Y+40, r29	; 0x28
     25a:	1a 39       	cpi	r17, 0x9A	; 154
     25c:	68 56       	subi	r22, 0x68	; 104
     25e:	18 ae       	std	Y+56, r1	; 0x38
     260:	ba ab       	std	Y+50, r27	; 0x32
     262:	55 8c       	ldd	r5, Z+29	; 0x1d
     264:	1d 3c       	cpi	r17, 0xCD	; 205
     266:	b7 cc       	rjmp	.-1682   	; 0xfffffbd6 <__eeprom_end+0xff7efbd6>
     268:	57 63       	ori	r21, 0x37	; 55
     26a:	bd 6d       	ori	r27, 0xDD	; 221
     26c:	ed fd       	.word	0xfded	; ????
     26e:	75 3e       	cpi	r23, 0xE5	; 229
     270:	f6 17       	cp	r31, r22
     272:	72 31       	cpi	r23, 0x12	; 18
     274:	bf 00       	.word	0x00bf	; ????
     276:	00 00       	nop
     278:	80 3f       	cpi	r24, 0xF0	; 240
     27a:	08 00       	.word	0x0008	; ????
     27c:	00 00       	nop
     27e:	be 92       	st	-X, r11
     280:	24 49       	sbci	r18, 0x94	; 148
     282:	12 3e       	cpi	r17, 0xE2	; 226
     284:	ab aa       	std	Y+51, r10	; 0x33
     286:	aa 2a       	or	r10, r26
     288:	be cd       	rjmp	.-1156   	; 0xfffffe06 <__eeprom_end+0xff7efe06>
     28a:	cc cc       	rjmp	.-1640   	; 0xfffffc24 <__eeprom_end+0xff7efc24>
     28c:	4c 3e       	cpi	r20, 0xEC	; 236
     28e:	00 00       	nop
     290:	00 80       	ld	r0, Z
     292:	be ab       	std	Y+54, r27	; 0x36
     294:	aa aa       	std	Y+50, r10	; 0x32
     296:	aa 3e       	cpi	r26, 0xEA	; 234
     298:	00 00       	nop
     29a:	00 00       	nop
     29c:	bf 00       	.word	0x00bf	; ????
     29e:	00 00       	nop
     2a0:	80 3f       	cpi	r24, 0xF0	; 240
     2a2:	00 00       	nop
     2a4:	00 00       	nop
     2a6:	00 08       	sbc	r0, r0
     2a8:	41 78       	andi	r20, 0x81	; 129
     2aa:	d3 bb       	out	0x13, r29	; 19
     2ac:	43 87       	std	Z+11, r20	; 0x0b
     2ae:	d1 13       	cpse	r29, r17
     2b0:	3d 19       	sub	r19, r13
     2b2:	0e 3c       	cpi	r16, 0xCE	; 206
     2b4:	c3 bd       	out	0x23, r28	; 35
     2b6:	42 82       	std	Z+2, r4	; 0x02
     2b8:	ad 2b       	or	r26, r29
     2ba:	3e 68       	ori	r19, 0x8E	; 142
     2bc:	ec 82       	std	Y+4, r14	; 0x04
     2be:	76 be       	out	0x36, r7	; 54
     2c0:	d9 8f       	std	Y+25, r29	; 0x19
     2c2:	e1 a9       	ldd	r30, Z+49	; 0x31
     2c4:	3e 4c       	sbci	r19, 0xCE	; 206
     2c6:	80 ef       	ldi	r24, 0xF0	; 240
     2c8:	ff be       	out	0x3f, r15	; 63
     2ca:	01 c4       	rjmp	.+2050   	; 0xace <button_5_menu+0x2>
     2cc:	ff 7f       	andi	r31, 0xFF	; 255
     2ce:	3f 00       	.word	0x003f	; ????
     2d0:	00 00       	nop
	...

000002d4 <__trampolines_end>:
     2d4:	6e 61       	ori	r22, 0x1E	; 30
     2d6:	6e 00       	.word	0x006e	; ????

000002d8 <__c.2332>:
     2d8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     2e8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     2f8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     308:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     318:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     328:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     338:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     348:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     358:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     368:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     378:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     388:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     398:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     3a8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     3b8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     3c8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000003d6 <__ctors_end>:
     3d6:	11 24       	eor	r1, r1
     3d8:	1f be       	out	0x3f, r1	; 63
     3da:	cf e5       	ldi	r28, 0x5F	; 95
     3dc:	d8 e0       	ldi	r29, 0x08	; 8
     3de:	de bf       	out	0x3e, r29	; 62
     3e0:	cd bf       	out	0x3d, r28	; 61

000003e2 <__do_copy_data>:
     3e2:	12 e0       	ldi	r17, 0x02	; 2
     3e4:	a0 e6       	ldi	r26, 0x60	; 96
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	ea e5       	ldi	r30, 0x5A	; 90
     3ea:	f3 e4       	ldi	r31, 0x43	; 67
     3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <__do_copy_data+0x10>
     3ee:	05 90       	lpm	r0, Z+
     3f0:	0d 92       	st	X+, r0
     3f2:	a2 3f       	cpi	r26, 0xF2	; 242
     3f4:	b1 07       	cpc	r27, r17
     3f6:	d9 f7       	brne	.-10     	; 0x3ee <__do_copy_data+0xc>

000003f8 <__do_clear_bss>:
     3f8:	25 e0       	ldi	r18, 0x05	; 5
     3fa:	a2 ef       	ldi	r26, 0xF2	; 242
     3fc:	b2 e0       	ldi	r27, 0x02	; 2
     3fe:	01 c0       	rjmp	.+2      	; 0x402 <.do_clear_bss_start>

00000400 <.do_clear_bss_loop>:
     400:	1d 92       	st	X+, r1

00000402 <.do_clear_bss_start>:
     402:	ae 38       	cpi	r26, 0x8E	; 142
     404:	b2 07       	cpc	r27, r18
     406:	e1 f7       	brne	.-8      	; 0x400 <.do_clear_bss_loop>
     408:	0e 94 3b 02 	call	0x476	; 0x476 <main>
     40c:	0c 94 ab 21 	jmp	0x4356	; 0x4356 <_exit>

00000410 <__bad_interrupt>:
     410:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000414 <debug_msg>:

#if L_DEBUG
#include <stdio.h>
char debug_buff[64];
void debug_msg( const char* format, ... )
{
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	cd b7       	in	r28, 0x3d	; 61
     41a:	de b7       	in	r29, 0x3e	; 62
     41c:	ae 01       	movw	r20, r28
     41e:	4b 5f       	subi	r20, 0xFB	; 251
     420:	5f 4f       	sbci	r21, 0xFF	; 255
     422:	fa 01       	movw	r30, r20
     424:	61 91       	ld	r22, Z+
     426:	71 91       	ld	r23, Z+
     428:	af 01       	movw	r20, r30
	va_list arglist;
	va_start( arglist, format );
	vsprintf(debug_buff, format, arglist );
     42a:	88 e6       	ldi	r24, 0x68	; 104
     42c:	94 e0       	ldi	r25, 0x04	; 4
     42e:	0e 94 31 21 	call	0x4262	; 0x4262 <vsprintf>
	va_end( arglist );
	#if USE_USART
	uart_puts(debug_buff);
     432:	88 e6       	ldi	r24, 0x68	; 104
     434:	94 e0       	ldi	r25, 0x04	; 4
     436:	0e 94 1a 18 	call	0x3034	; 0x3034 <uart0_puts>
	#endif
}
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	08 95       	ret

00000440 <init_pin>:
uint8_t motor_value;
uint8_t servo_vibro_value;

void init_pin(void)
{
	SET_PIN(LED_MOTOR_DDR, LED_MOTOR_PIN);
     440:	8c 9a       	sbi	0x11, 4	; 17
	SET_PIN(LED_SERVO_DDR, LED_SERVO_PIN);
     442:	8e 9a       	sbi	0x11, 6	; 17
	SET_PIN(LED_ACUM_DDR, LED_ACUM_PIN);
     444:	bd 9a       	sbi	0x17, 5	; 23
	//UART_TX_PIN
	DDRD |= (1<<1);
     446:	89 9a       	sbi	0x11, 1	; 17
     448:	08 95       	ret

0000044a <init_driver>:
}

void init_driver(void)
{
	#if CONFIG_DEVICE_SIEWNIK
	init_menu();
     44a:	0e 94 a2 06 	call	0xd44	; 0xd44 <init_menu>
	#endif
	timer0_init(TIM0_PRESCALER, TIM0_ARR);
     44e:	62 e3       	ldi	r22, 0x32	; 50
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <timer0_init>
	init_display_drv();
     456:	0e 94 de 07 	call	0xfbc	; 0xfbc <init_display_drv>
	init_buttons();
     45a:	0e 94 cc 04 	call	0x998	; 0x998 <init_buttons>
	#if USE_USART
	uart_init(UART_BAUD_SELECT(57600, F_CPU));
     45e:	88 e0       	ldi	r24, 0x08	; 8
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 ef 17 	call	0x2fde	; 0x2fde <uart0_init>
	#endif
	init_system();
     466:	0e 94 c3 14 	call	0x2986	; 0x2986 <init_system>
	init_measure();
     46a:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <init_measure>
	CLEAR_PIN(SFIOR, PUD);
     46e:	80 b7       	in	r24, 0x30	; 48
     470:	8b 7f       	andi	r24, 0xFB	; 251
     472:	80 bf       	out	0x30, r24	; 48
     474:	08 95       	ret

00000476 <main>:
}

int main(void)
{
	init_pin();
     476:	0e 94 20 02 	call	0x440	; 0x440 <init_pin>
	sei();
     47a:	78 94       	sei
	init_driver();
     47c:	0e 94 25 02 	call	0x44a	; 0x44a <init_driver>
	debug_msg("/-----------START SYSTEM------------/\n");
     480:	8f e7       	ldi	r24, 0x7F	; 127
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	9f 93       	push	r25
     486:	8f 93       	push	r24
     488:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
	#if CONFIG_DEVICE_SIEWNIK
	measure_get_servo_calibration();
     48c:	0e 94 2a 10 	call	0x2054	; 0x2054 <measure_get_servo_calibration>
     490:	0f 90       	pop	r0
     492:	0f 90       	pop	r0
	#endif
    /* Replace with your application code */
    while (1) 
    {
		disp_process();
     494:	0e 94 da 09 	call	0x13b4	; 0x13b4 <disp_process>
		animation();
     498:	0e 94 36 0b 	call	0x166c	; 0x166c <animation>
		process_button();
     49c:	0e 94 22 04 	call	0x844	; 0x844 <process_button>
		disp_fast_process();
     4a0:	0e 94 7f 15 	call	0x2afe	; 0x2afe <disp_fast_process>
		disp_very_fast_process();
     4a4:	0e 94 32 16 	call	0x2c64	; 0x2c64 <disp_very_fast_process>
		dcmotor_process(motor_value);
     4a8:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <motor_value>
     4ac:	0e 94 62 07 	call	0xec4	; 0xec4 <dcmotor_process>
		#if CONFIG_DEVICE_SIEWNIK
		servo_process(servo_vibro_value);
     4b0:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
     4b4:	0e 94 49 12 	call	0x2492	; 0x2492 <servo_process>
		menu_process();
     4b8:	0e 94 33 06 	call	0xc66	; 0xc66 <menu_process>
		#endif
		#if CONFIG_DEVICE_SOLARKA
		vibro_process();
		#endif
		error_event();
     4bc:	0e 94 09 0c 	call	0x1812	; 0x1812 <error_event>
		error_led_blink();
     4c0:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <error_led_blink>
		measure_process();
     4c4:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <measure_process>
		accumulator_process();
     4c8:	0e 94 87 02 	call	0x50e	; 0x50e <accumulator_process>
		accum_led_process();
     4cc:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <accum_led_process>
		buzzer_process();
     4d0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <buzzer_process>
     4d4:	df cf       	rjmp	.-66     	; 0x494 <main+0x1e>

000004d6 <accum_get_voltage>:
float accum_get_voltage(void)
{
	#if CONFIG_DEVICE_SOLARKA
    voltage = measure_get_filtered_value(MEAS_ACCUM)*5*5.7/1024 + 0.7;
	#else
	voltage = measure_get_filtered_value(MEAS_ACCUM)*5*5.7/1024;
     4d6:	83 e0       	ldi	r24, 0x03	; 3
     4d8:	0e 94 66 10 	call	0x20cc	; 0x20cc <measure_get_filtered_value>
	#endif
    return voltage;
     4dc:	bc 01       	movw	r22, r24
     4de:	66 0f       	add	r22, r22
     4e0:	77 1f       	adc	r23, r23
     4e2:	66 0f       	add	r22, r22
     4e4:	77 1f       	adc	r23, r23
     4e6:	86 0f       	add	r24, r22
     4e8:	97 1f       	adc	r25, r23
     4ea:	bc 01       	movw	r22, r24
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	0e 94 3e 19 	call	0x327c	; 0x327c <__floatunsisf>
     4f4:	26 e6       	ldi	r18, 0x66	; 102
     4f6:	36 e6       	ldi	r19, 0x66	; 102
     4f8:	46 eb       	ldi	r20, 0xB6	; 182
     4fa:	50 e4       	ldi	r21, 0x40	; 64
     4fc:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e8       	ldi	r20, 0x80	; 128
     506:	5a e3       	ldi	r21, 0x3A	; 58
     508:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
}
     50c:	08 95       	ret

0000050e <accumulator_process>:
void accumulator_process(void)
{
	
	static timer_t accumulator_timer;
	
	if(accumulator_timer < mktime.ms)
     50e:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
     512:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
     516:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
     51a:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
     51e:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <accumulator_timer.1914>
     522:	90 91 f8 02 	lds	r25, 0x02F8	; 0x8002f8 <accumulator_timer.1914+0x1>
     526:	a0 91 f9 02 	lds	r26, 0x02F9	; 0x8002f9 <accumulator_timer.1914+0x2>
     52a:	b0 91 fa 02 	lds	r27, 0x02FA	; 0x8002fa <accumulator_timer.1914+0x3>
     52e:	84 17       	cp	r24, r20
     530:	95 07       	cpc	r25, r21
     532:	a6 07       	cpc	r26, r22
     534:	b7 07       	cpc	r27, r23
     536:	98 f5       	brcc	.+102    	; 0x59e <accumulator_process+0x90>
	{
		filtered_accum_adc_val = measure_get_filtered_value(MEAS_ACCUM);
     538:	83 e0       	ldi	r24, 0x03	; 3
     53a:	0e 94 66 10 	call	0x20cc	; 0x20cc <measure_get_filtered_value>
		if (filtered_accum_adc_val > ACCUMULATOR_HIGH_VOLTAGE)
     53e:	89 35       	cpi	r24, 0x59	; 89
     540:	22 e0       	ldi	r18, 0x02	; 2
     542:	92 07       	cpc	r25, r18
     544:	18 f0       	brcs	.+6      	; 0x54c <accumulator_process+0x3e>
		{
			accumulator_state = ACCUM_HIGH_VOLTAGE;
     546:	21 e0       	ldi	r18, 0x01	; 1
     548:	20 93 fb 02 	sts	0x02FB, r18	; 0x8002fb <accumulator_state>
		}
		
		if (filtered_accum_adc_val < ACCUMULATOR_LOW_VOLTAGE)
     54c:	8b 38       	cpi	r24, 0x8B	; 139
     54e:	21 e0       	ldi	r18, 0x01	; 1
     550:	92 07       	cpc	r25, r18
     552:	18 f4       	brcc	.+6      	; 0x55a <accumulator_process+0x4c>
		{
			accumulator_state =  ACCUM_LOW_VOLTAGE;
     554:	22 e0       	ldi	r18, 0x02	; 2
     556:	20 93 fb 02 	sts	0x02FB, r18	; 0x8002fb <accumulator_state>
		}
		
		if (filtered_accum_adc_val < ACCUMULATOR_VERY_LOW_VOLTAGE)
     55a:	8e 35       	cpi	r24, 0x5E	; 94
     55c:	21 e0       	ldi	r18, 0x01	; 1
     55e:	92 07       	cpc	r25, r18
     560:	18 f4       	brcc	.+6      	; 0x568 <accumulator_process+0x5a>
		{   
			accumulator_state = ACCUM_VERY_LOW_VOLTAGE;
     562:	23 e0       	ldi	r18, 0x03	; 3
     564:	20 93 fb 02 	sts	0x02FB, r18	; 0x8002fb <accumulator_state>
		}
		
		if (filtered_accum_adc_val < ACCUMULATOR_HIGH_VOLTAGE && filtered_accum_adc_val > ACCUMULATOR_LOW_VOLTAGE)
     568:	8c 58       	subi	r24, 0x8C	; 140
     56a:	91 40       	sbci	r25, 0x01	; 1
     56c:	8c 3c       	cpi	r24, 0xCC	; 204
     56e:	91 05       	cpc	r25, r1
     570:	10 f4       	brcc	.+4      	; 0x576 <accumulator_process+0x68>
		{
			accumulator_state = ACCUM_NORMAL_VOLTAGE;
     572:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <accumulator_state>
		}
		accumulator_timer = mktime.ms + 100;
     576:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
     57a:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
     57e:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
     582:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
     586:	8c 59       	subi	r24, 0x9C	; 156
     588:	9f 4f       	sbci	r25, 0xFF	; 255
     58a:	af 4f       	sbci	r26, 0xFF	; 255
     58c:	bf 4f       	sbci	r27, 0xFF	; 255
     58e:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <accumulator_timer.1914>
     592:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <accumulator_timer.1914+0x1>
     596:	a0 93 f9 02 	sts	0x02F9, r26	; 0x8002f9 <accumulator_timer.1914+0x2>
     59a:	b0 93 fa 02 	sts	0x02FA, r27	; 0x8002fa <accumulator_timer.1914+0x3>
     59e:	08 95       	ret

000005a0 <accum_led_process>:

void accum_led_process(void)
{
    static timer_t process_timer;
    static uint8_t state_led;
    if(process_timer < mktime.ms)
     5a0:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
     5a4:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
     5a8:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
     5ac:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
     5b0:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     5b4:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     5b8:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     5bc:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     5c0:	84 17       	cp	r24, r20
     5c2:	95 07       	cpc	r25, r21
     5c4:	a6 07       	cpc	r26, r22
     5c6:	b7 07       	cpc	r27, r23
     5c8:	08 f0       	brcs	.+2      	; 0x5cc <accum_led_process+0x2c>
     5ca:	86 c0       	rjmp	.+268    	; 0x6d8 <accum_led_process+0x138>
	{
        switch (accumulator_state)
     5cc:	80 91 fb 02 	lds	r24, 0x02FB	; 0x8002fb <accumulator_state>
     5d0:	81 30       	cpi	r24, 0x01	; 1
     5d2:	e9 f0       	breq	.+58     	; 0x60e <accum_led_process+0x6e>
     5d4:	30 f0       	brcs	.+12     	; 0x5e2 <accum_led_process+0x42>
     5d6:	82 30       	cpi	r24, 0x02	; 2
     5d8:	99 f1       	breq	.+102    	; 0x640 <accum_led_process+0xa0>
     5da:	83 30       	cpi	r24, 0x03	; 3
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <accum_led_process+0x40>
     5de:	67 c0       	rjmp	.+206    	; 0x6ae <accum_led_process+0x10e>
     5e0:	08 95       	ret
        {
        case ACCUM_NORMAL_VOLTAGE:
            LED_ACUM_OFF;
     5e2:	c5 98       	cbi	0x18, 5	; 24
            process_timer +=200;
     5e4:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     5e8:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     5ec:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     5f0:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     5f4:	88 53       	subi	r24, 0x38	; 56
     5f6:	9f 4f       	sbci	r25, 0xFF	; 255
     5f8:	af 4f       	sbci	r26, 0xFF	; 255
     5fa:	bf 4f       	sbci	r27, 0xFF	; 255
     5fc:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <process_timer.1918>
     600:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <process_timer.1918+0x1>
     604:	a0 93 f5 02 	sts	0x02F5, r26	; 0x8002f5 <process_timer.1918+0x2>
     608:	b0 93 f6 02 	sts	0x02F6, r27	; 0x8002f6 <process_timer.1918+0x3>
            break;
     60c:	08 95       	ret

        case ACCUM_HIGH_VOLTAGE:
            LED_ACUM_TOGGLE;
     60e:	98 b3       	in	r25, 0x18	; 24
     610:	80 e2       	ldi	r24, 0x20	; 32
     612:	89 27       	eor	r24, r25
     614:	88 bb       	out	0x18, r24	; 24
		    process_timer += 250;
     616:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     61a:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     61e:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     622:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     626:	86 50       	subi	r24, 0x06	; 6
     628:	9f 4f       	sbci	r25, 0xFF	; 255
     62a:	af 4f       	sbci	r26, 0xFF	; 255
     62c:	bf 4f       	sbci	r27, 0xFF	; 255
     62e:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <process_timer.1918>
     632:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <process_timer.1918+0x1>
     636:	a0 93 f5 02 	sts	0x02F5, r26	; 0x8002f5 <process_timer.1918+0x2>
     63a:	b0 93 f6 02 	sts	0x02F6, r27	; 0x8002f6 <process_timer.1918+0x3>
            break;
     63e:	08 95       	ret
        
        case ACCUM_LOW_VOLTAGE:
            if (state_led == 0)
     640:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <__data_end>
     644:	81 11       	cpse	r24, r1
     646:	19 c0       	rjmp	.+50     	; 0x67a <accum_led_process+0xda>
            {
                state_led = 1;
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <__data_end>
                LED_ACUM_ON;
     64e:	c5 9a       	sbi	0x18, 5	; 24
                process_timer += 500;
     650:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     654:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     658:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     65c:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     660:	8c 50       	subi	r24, 0x0C	; 12
     662:	9e 4f       	sbci	r25, 0xFE	; 254
     664:	af 4f       	sbci	r26, 0xFF	; 255
     666:	bf 4f       	sbci	r27, 0xFF	; 255
     668:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <process_timer.1918>
     66c:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <process_timer.1918+0x1>
     670:	a0 93 f5 02 	sts	0x02F5, r26	; 0x8002f5 <process_timer.1918+0x2>
     674:	b0 93 f6 02 	sts	0x02F6, r27	; 0x8002f6 <process_timer.1918+0x3>
     678:	08 95       	ret
            }
            else if (state_led == 1)
     67a:	81 30       	cpi	r24, 0x01	; 1
     67c:	69 f5       	brne	.+90     	; 0x6d8 <accum_led_process+0x138>
            {
                state_led = 0;
     67e:	10 92 f2 02 	sts	0x02F2, r1	; 0x8002f2 <__data_end>
                LED_ACUM_OFF;
     682:	c5 98       	cbi	0x18, 5	; 24
                process_timer += 1500;
     684:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     688:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     68c:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     690:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     694:	84 52       	subi	r24, 0x24	; 36
     696:	9a 4f       	sbci	r25, 0xFA	; 250
     698:	af 4f       	sbci	r26, 0xFF	; 255
     69a:	bf 4f       	sbci	r27, 0xFF	; 255
     69c:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <process_timer.1918>
     6a0:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <process_timer.1918+0x1>
     6a4:	a0 93 f5 02 	sts	0x02F5, r26	; 0x8002f5 <process_timer.1918+0x2>
     6a8:	b0 93 f6 02 	sts	0x02F6, r27	; 0x8002f6 <process_timer.1918+0x3>
     6ac:	08 95       	ret
            }
            break;

            case ACCUM_VERY_LOW_VOLTAGE:
                LED_ACUM_ON;
     6ae:	c5 9a       	sbi	0x18, 5	; 24
		        process_timer +=1000;
     6b0:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <process_timer.1918>
     6b4:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <process_timer.1918+0x1>
     6b8:	a0 91 f5 02 	lds	r26, 0x02F5	; 0x8002f5 <process_timer.1918+0x2>
     6bc:	b0 91 f6 02 	lds	r27, 0x02F6	; 0x8002f6 <process_timer.1918+0x3>
     6c0:	88 51       	subi	r24, 0x18	; 24
     6c2:	9c 4f       	sbci	r25, 0xFC	; 252
     6c4:	af 4f       	sbci	r26, 0xFF	; 255
     6c6:	bf 4f       	sbci	r27, 0xFF	; 255
     6c8:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <process_timer.1918>
     6cc:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <process_timer.1918+0x1>
     6d0:	a0 93 f5 02 	sts	0x02F5, r26	; 0x8002f5 <process_timer.1918+0x2>
     6d4:	b0 93 f6 02 	sts	0x02F6, r27	; 0x8002f6 <process_timer.1918+0x3>
     6d8:	08 95       	ret

000006da <adc_setchannel>:
/*
 * set an adc channel
 */
void adc_setchannel(uint8_t channel)
{
	ADCSRA &= ~(1 << ADEN);
     6da:	37 98       	cbi	0x06, 7	; 6
	ADMUX = (ADMUX & 0xf8) | (channel & 0x07); //set channel
     6dc:	97 b1       	in	r25, 0x07	; 7
     6de:	98 7f       	andi	r25, 0xF8	; 248
     6e0:	87 70       	andi	r24, 0x07	; 7
     6e2:	89 2b       	or	r24, r25
     6e4:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1 << ADEN);
     6e6:	37 9a       	sbi	0x06, 7	; 6
     6e8:	08 95       	ret

000006ea <adc_readsel>:
/*
 * read from selected adc channel
 */
uint16_t adc_readsel(void)
{
	ADCSRA |= (1 << ADSC); // Start conversion
     6ea:	36 9a       	sbi	0x06, 6	; 6
	while(ADCSRA & _BV(ADSC)); 
     6ec:	36 99       	sbic	0x06, 6	; 6
     6ee:	fe cf       	rjmp	.-4      	; 0x6ec <adc_readsel+0x2>
	//while( !(ADCSRA & (1<<ADIF)) ); // Wait for conversion to complete
	uint16_t adc = ADC;
     6f0:	84 b1       	in	r24, 0x04	; 4
     6f2:	95 b1       	in	r25, 0x05	; 5
	//ADCSRA |= (1 << ADIF); // Clear ADIF by writing one to it
	return(adc);
}
     6f4:	08 95       	ret

000006f6 <adc_read>:
/*
 * read from adc channel
 */
uint16_t adc_read(uint8_t channel)
{
	adc_setchannel(channel);
     6f6:	0e 94 6d 03 	call	0x6da	; 0x6da <adc_setchannel>
	return adc_readsel();
     6fa:	0e 94 75 03 	call	0x6ea	; 0x6ea <adc_readsel>
}
     6fe:	08 95       	ret

00000700 <read_button>:
		return 0;
}

extern uint8_t test_button;
void test_fnc(void * pv)
{
     700:	dc 01       	movw	r26, r24
     702:	16 96       	adiw	r26, 0x06	; 6
     704:	ed 91       	ld	r30, X+
     706:	fc 91       	ld	r31, X
     708:	17 97       	sbiw	r26, 0x07	; 7
     70a:	20 81       	ld	r18, Z
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	f9 01       	movw	r30, r18
     710:	18 96       	adiw	r26, 0x08	; 8
     712:	0c 90       	ld	r0, X
     714:	02 c0       	rjmp	.+4      	; 0x71a <read_button+0x1a>
     716:	f5 95       	asr	r31
     718:	e7 95       	ror	r30
     71a:	0a 94       	dec	r0
     71c:	e2 f7       	brpl	.-8      	; 0x716 <read_button+0x16>
     71e:	cf 01       	movw	r24, r30
     720:	81 70       	andi	r24, 0x01	; 1
     722:	08 95       	ret

00000724 <init_but_struct>:
}

void init_but_struct(void)
{
	
	button1.state = 0;
     724:	e5 e1       	ldi	r30, 0x15	; 21
     726:	f5 e0       	ldi	r31, 0x05	; 5
     728:	14 82       	std	Z+4, r1	; 0x04
	button1.value = 1;
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	85 83       	std	Z+5, r24	; 0x05
	button1.fall_callback = 0;
     72e:	14 86       	std	Z+12, r1	; 0x0c
     730:	13 86       	std	Z+11, r1	; 0x0b
	button1.rise_callback = 0;
     732:	12 86       	std	Z+10, r1	; 0x0a
     734:	11 86       	std	Z+9, r1	; 0x09
	button1.timer_callback = 0;//test_fnc;
     736:	16 86       	std	Z+14, r1	; 0x0e
     738:	15 86       	std	Z+13, r1	; 0x0d
	button1.port = &BUT1_RPORT;
     73a:	26 e3       	ldi	r18, 0x36	; 54
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	37 83       	std	Z+7, r19	; 0x07
     740:	26 83       	std	Z+6, r18	; 0x06
	button1.pin = BUT1_PIN;
     742:	92 e0       	ldi	r25, 0x02	; 2
     744:	90 87       	std	Z+8, r25	; 0x08
	
	button2.state = 0;
     746:	e8 ee       	ldi	r30, 0xE8	; 232
     748:	f4 e0       	ldi	r31, 0x04	; 4
     74a:	14 82       	std	Z+4, r1	; 0x04
	button2.value = 1;
     74c:	85 83       	std	Z+5, r24	; 0x05
	button2.fall_callback = 0;
     74e:	14 86       	std	Z+12, r1	; 0x0c
     750:	13 86       	std	Z+11, r1	; 0x0b
	button2.rise_callback = 0;
     752:	12 86       	std	Z+10, r1	; 0x0a
     754:	11 86       	std	Z+9, r1	; 0x09
	button2.timer_callback = 0;
     756:	16 86       	std	Z+14, r1	; 0x0e
     758:	15 86       	std	Z+13, r1	; 0x0d
	button2.port = &BUT2_RPORT;
     75a:	37 83       	std	Z+7, r19	; 0x07
     75c:	26 83       	std	Z+6, r18	; 0x06
	button2.pin = BUT2_PIN;
     75e:	80 87       	std	Z+8, r24	; 0x08
	
	button3.state = 0;
     760:	e7 ef       	ldi	r30, 0xF7	; 247
     762:	f4 e0       	ldi	r31, 0x04	; 4
     764:	14 82       	std	Z+4, r1	; 0x04
	button3.value = 1;
     766:	85 83       	std	Z+5, r24	; 0x05
	button3.fall_callback = 0;
     768:	14 86       	std	Z+12, r1	; 0x0c
     76a:	13 86       	std	Z+11, r1	; 0x0b
	button3.rise_callback = 0;
     76c:	12 86       	std	Z+10, r1	; 0x0a
     76e:	11 86       	std	Z+9, r1	; 0x09
	button3.timer_callback = 0;
     770:	16 86       	std	Z+14, r1	; 0x0e
     772:	15 86       	std	Z+13, r1	; 0x0d
	button3.port = &BUT3_RPORT;
     774:	37 83       	std	Z+7, r19	; 0x07
     776:	26 83       	std	Z+6, r18	; 0x06
	button3.pin = BUT3_PIN;
     778:	96 e0       	ldi	r25, 0x06	; 6
     77a:	90 87       	std	Z+8, r25	; 0x08
	
	button4.state = 0;
     77c:	e5 ed       	ldi	r30, 0xD5	; 213
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	14 82       	std	Z+4, r1	; 0x04
	button4.value = 1;
     782:	85 83       	std	Z+5, r24	; 0x05
	button4.fall_callback = 0;
     784:	14 86       	std	Z+12, r1	; 0x0c
     786:	13 86       	std	Z+11, r1	; 0x0b
	button4.rise_callback = 0;
     788:	12 86       	std	Z+10, r1	; 0x0a
     78a:	11 86       	std	Z+9, r1	; 0x09
	button4.timer_callback = 0;
     78c:	16 86       	std	Z+14, r1	; 0x0e
     78e:	15 86       	std	Z+13, r1	; 0x0d
	button4.port = &BUT4_RPORT;
     790:	40 e3       	ldi	r20, 0x30	; 48
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	57 83       	std	Z+7, r21	; 0x07
     796:	46 83       	std	Z+6, r20	; 0x06
	button4.pin = BUT4_PIN;
     798:	93 e0       	ldi	r25, 0x03	; 3
     79a:	90 87       	std	Z+8, r25	; 0x08
	
	button5.state = 0;
     79c:	e6 ec       	ldi	r30, 0xC6	; 198
     79e:	f4 e0       	ldi	r31, 0x04	; 4
     7a0:	14 82       	std	Z+4, r1	; 0x04
	button5.value = 1;
     7a2:	85 83       	std	Z+5, r24	; 0x05
	button5.fall_callback = 0;
     7a4:	14 86       	std	Z+12, r1	; 0x0c
     7a6:	13 86       	std	Z+11, r1	; 0x0b
	button5.rise_callback = 0;
     7a8:	12 86       	std	Z+10, r1	; 0x0a
     7aa:	11 86       	std	Z+9, r1	; 0x09
	button5.timer_callback = 0;
     7ac:	16 86       	std	Z+14, r1	; 0x0e
     7ae:	15 86       	std	Z+13, r1	; 0x0d
	button5.port = &BUT5_RPORT;
     7b0:	37 83       	std	Z+7, r19	; 0x07
     7b2:	26 83       	std	Z+6, r18	; 0x06
	button5.pin = BUT5_PIN;
     7b4:	90 87       	std	Z+8, r25	; 0x08
	
	button6.state = 0;
     7b6:	e6 e0       	ldi	r30, 0x06	; 6
     7b8:	f5 e0       	ldi	r31, 0x05	; 5
     7ba:	14 82       	std	Z+4, r1	; 0x04
	button6.value = 1;
     7bc:	85 83       	std	Z+5, r24	; 0x05
	button6.fall_callback = 0;
     7be:	14 86       	std	Z+12, r1	; 0x0c
     7c0:	13 86       	std	Z+11, r1	; 0x0b
	button6.rise_callback = 0;
     7c2:	12 86       	std	Z+10, r1	; 0x0a
     7c4:	11 86       	std	Z+9, r1	; 0x09
	button6.timer_callback = 0;
     7c6:	16 86       	std	Z+14, r1	; 0x0e
     7c8:	15 86       	std	Z+13, r1	; 0x0d
	button6.port = &BUT6_RPORT;
     7ca:	69 e3       	ldi	r22, 0x39	; 57
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	77 83       	std	Z+7, r23	; 0x07
     7d0:	66 83       	std	Z+6, r22	; 0x06
	button6.pin = BUT6_PIN;
     7d2:	a4 e0       	ldi	r26, 0x04	; 4
     7d4:	a0 87       	std	Z+8, r26	; 0x08
	
	button7.state = 0;
     7d6:	e4 e2       	ldi	r30, 0x24	; 36
     7d8:	f5 e0       	ldi	r31, 0x05	; 5
     7da:	14 82       	std	Z+4, r1	; 0x04
	button7.value = 1;
     7dc:	85 83       	std	Z+5, r24	; 0x05
	button7.fall_callback = 0;
     7de:	14 86       	std	Z+12, r1	; 0x0c
     7e0:	13 86       	std	Z+11, r1	; 0x0b
	button7.rise_callback = 0;
     7e2:	12 86       	std	Z+10, r1	; 0x0a
     7e4:	11 86       	std	Z+9, r1	; 0x09
	button7.timer_callback = 0;
     7e6:	16 86       	std	Z+14, r1	; 0x0e
     7e8:	15 86       	std	Z+13, r1	; 0x0d
	button7.port = &BUT7_RPORT;
     7ea:	43 e3       	ldi	r20, 0x33	; 51
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	57 83       	std	Z+7, r21	; 0x07
     7f0:	46 83       	std	Z+6, r20	; 0x06
	button7.pin = BUT7_PIN;
     7f2:	80 87       	std	Z+8, r24	; 0x08
	
	button8.state = 0;
     7f4:	e3 e3       	ldi	r30, 0x33	; 51
     7f6:	f5 e0       	ldi	r31, 0x05	; 5
     7f8:	14 82       	std	Z+4, r1	; 0x04
	button8.value = 1;
     7fa:	85 83       	std	Z+5, r24	; 0x05
	button8.fall_callback = 0;
     7fc:	14 86       	std	Z+12, r1	; 0x0c
     7fe:	13 86       	std	Z+11, r1	; 0x0b
	button8.rise_callback = 0;
     800:	12 86       	std	Z+10, r1	; 0x0a
     802:	11 86       	std	Z+9, r1	; 0x09
	button8.timer_callback = 0;
     804:	16 86       	std	Z+14, r1	; 0x0e
     806:	15 86       	std	Z+13, r1	; 0x0d
	button8.port = &BUT8_RPORT;
     808:	37 83       	std	Z+7, r19	; 0x07
     80a:	26 83       	std	Z+6, r18	; 0x06
	button8.pin = BUT8_PIN;
     80c:	a0 87       	std	Z+8, r26	; 0x08
	
	button9.state = 0;
     80e:	e8 ea       	ldi	r30, 0xA8	; 168
     810:	f4 e0       	ldi	r31, 0x04	; 4
     812:	14 82       	std	Z+4, r1	; 0x04
	button9.value = 1;
     814:	85 83       	std	Z+5, r24	; 0x05
	button9.fall_callback = 0;
     816:	14 86       	std	Z+12, r1	; 0x0c
     818:	13 86       	std	Z+11, r1	; 0x0b
	button9.rise_callback = 0;
     81a:	12 86       	std	Z+10, r1	; 0x0a
     81c:	11 86       	std	Z+9, r1	; 0x09
	button9.timer_callback = 0;
     81e:	16 86       	std	Z+14, r1	; 0x0e
     820:	15 86       	std	Z+13, r1	; 0x0d
	button9.port = &BUT9_RPORT;
     822:	77 83       	std	Z+7, r23	; 0x07
     824:	66 83       	std	Z+6, r22	; 0x06
	button9.pin = BUT9_PIN;
     826:	90 87       	std	Z+8, r25	; 0x08
	
	button10.state = 0;
     828:	e7 eb       	ldi	r30, 0xB7	; 183
     82a:	f4 e0       	ldi	r31, 0x04	; 4
     82c:	14 82       	std	Z+4, r1	; 0x04
	button10.value = 1;
     82e:	85 83       	std	Z+5, r24	; 0x05
	button10.fall_callback = 0;
     830:	14 86       	std	Z+12, r1	; 0x0c
     832:	13 86       	std	Z+11, r1	; 0x0b
	button10.rise_callback = 0;
     834:	12 86       	std	Z+10, r1	; 0x0a
     836:	11 86       	std	Z+9, r1	; 0x09
	button10.timer_callback = 0;
     838:	16 86       	std	Z+14, r1	; 0x0e
     83a:	15 86       	std	Z+13, r1	; 0x0d
	button10.port = &BUT10_RPORT;
     83c:	57 83       	std	Z+7, r21	; 0x07
     83e:	46 83       	std	Z+6, r20	; 0x06
	button10.pin = BUT10_PIN;
     840:	10 86       	std	Z+8, r1	; 0x08
     842:	08 95       	ret

00000844 <process_button>:
}

void process_button(void)
{
     844:	df 92       	push	r13
     846:	ef 92       	push	r14
     848:	ff 92       	push	r15
     84a:	0f 93       	push	r16
     84c:	1f 93       	push	r17
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
	uint8_t red_val = 0;
	if (timer_button < mktime.ms)
     852:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
     856:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
     85a:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
     85e:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
     862:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <timer_button>
     866:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <timer_button+0x1>
     86a:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <timer_button+0x2>
     86e:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <timer_button+0x3>
     872:	84 17       	cp	r24, r20
     874:	95 07       	cpc	r25, r21
     876:	a6 07       	cpc	r26, r22
     878:	b7 07       	cpc	r27, r23
     87a:	08 f0       	brcs	.+2      	; 0x87e <__stack+0x1f>
     87c:	85 c0       	rjmp	.+266    	; 0x988 <__stack+0x129>
	{
		timer_button = mktime.ms + 20;
     87e:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
     882:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
     886:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
     88a:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
     88e:	44 96       	adiw	r24, 0x14	; 20
     890:	a1 1d       	adc	r26, r1
     892:	b1 1d       	adc	r27, r1
     894:	80 93 e4 04 	sts	0x04E4, r24	; 0x8004e4 <timer_button>
     898:	90 93 e5 04 	sts	0x04E5, r25	; 0x8004e5 <timer_button+0x1>
     89c:	a0 93 e6 04 	sts	0x04E6, r26	; 0x8004e6 <timer_button+0x2>
     8a0:	b0 93 e7 04 	sts	0x04E7, r27	; 0x8004e7 <timer_button+0x3>
     8a4:	c0 e6       	ldi	r28, 0x60	; 96
     8a6:	d0 e0       	ldi	r29, 0x00	; 0
     8a8:	0f 2e       	mov	r0, r31
     8aa:	f4 e7       	ldi	r31, 0x74	; 116
     8ac:	ef 2e       	mov	r14, r31
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	ff 2e       	mov	r15, r31
     8b2:	f0 2d       	mov	r31, r0
				if (but_tab[i]->tim_cnt >=TIMER_CNT_TIMEOUT && but_tab[i]->state != 1)
				{
					if (but_tab[i]->timer_callback != 0)
					but_tab[i]->timer_callback(&button1);
					but_tab[i]->tim_cnt = 0;
					but_tab[i]->state = 1;
     8b4:	dd 24       	eor	r13, r13
     8b6:	d3 94       	inc	r13
     8b8:	8e 01       	movw	r16, r28
	{
		timer_button = mktime.ms + 20;
		//process
		for (uint8_t i=0; i<BUTTON_CNT; i++)
		{
			red_val = read_button(but_tab[i]);
     8ba:	88 81       	ld	r24, Y
     8bc:	99 81       	ldd	r25, Y+1	; 0x01
     8be:	0e 94 80 03 	call	0x700	; 0x700 <read_button>
			if(red_val != but_tab[i]->value)
     8c2:	e8 81       	ld	r30, Y
     8c4:	f9 81       	ldd	r31, Y+1	; 0x01
     8c6:	95 81       	ldd	r25, Z+5	; 0x05
     8c8:	89 17       	cp	r24, r25
     8ca:	e1 f0       	breq	.+56     	; 0x904 <__stack+0xa5>
			{
				but_tab[i]->value = red_val;
     8cc:	85 83       	std	Z+5, r24	; 0x05
				if (red_val == 1 && but_tab[i]->rise_callback != 0)
     8ce:	81 30       	cpi	r24, 0x01	; 1
     8d0:	61 f4       	brne	.+24     	; 0x8ea <__stack+0x8b>
     8d2:	88 81       	ld	r24, Y
     8d4:	99 81       	ldd	r25, Y+1	; 0x01
     8d6:	dc 01       	movw	r26, r24
     8d8:	19 96       	adiw	r26, 0x09	; 9
     8da:	ed 91       	ld	r30, X+
     8dc:	fc 91       	ld	r31, X
     8de:	1a 97       	sbiw	r26, 0x0a	; 10
     8e0:	30 97       	sbiw	r30, 0x00	; 0
     8e2:	09 f4       	brne	.+2      	; 0x8e6 <__stack+0x87>
     8e4:	41 c0       	rjmp	.+130    	; 0x968 <__stack+0x109>
				but_tab[i]->rise_callback(but_tab[i]);
     8e6:	09 95       	icall
     8e8:	3f c0       	rjmp	.+126    	; 0x968 <__stack+0x109>
				else if(red_val == 0 && but_tab[i]->fall_callback != 0)
     8ea:	81 11       	cpse	r24, r1
     8ec:	3d c0       	rjmp	.+122    	; 0x968 <__stack+0x109>
     8ee:	88 81       	ld	r24, Y
     8f0:	99 81       	ldd	r25, Y+1	; 0x01
     8f2:	dc 01       	movw	r26, r24
     8f4:	1b 96       	adiw	r26, 0x0b	; 11
     8f6:	ed 91       	ld	r30, X+
     8f8:	fc 91       	ld	r31, X
     8fa:	1c 97       	sbiw	r26, 0x0c	; 12
     8fc:	30 97       	sbiw	r30, 0x00	; 0
     8fe:	21 f0       	breq	.+8      	; 0x908 <__stack+0xa9>
				but_tab[i]->fall_callback(but_tab[i]);
     900:	09 95       	icall
     902:	02 c0       	rjmp	.+4      	; 0x908 <__stack+0xa9>
			}
			//timer
			if (red_val == 0)
     904:	81 11       	cpse	r24, r1
     906:	30 c0       	rjmp	.+96     	; 0x968 <__stack+0x109>
			{
				but_tab[i]->tim_cnt++;
     908:	d8 01       	movw	r26, r16
     90a:	ed 91       	ld	r30, X+
     90c:	fc 91       	ld	r31, X
     90e:	80 81       	ld	r24, Z
     910:	91 81       	ldd	r25, Z+1	; 0x01
     912:	a2 81       	ldd	r26, Z+2	; 0x02
     914:	b3 81       	ldd	r27, Z+3	; 0x03
     916:	01 96       	adiw	r24, 0x01	; 1
     918:	a1 1d       	adc	r26, r1
     91a:	b1 1d       	adc	r27, r1
     91c:	80 83       	st	Z, r24
     91e:	91 83       	std	Z+1, r25	; 0x01
     920:	a2 83       	std	Z+2, r26	; 0x02
     922:	b3 83       	std	Z+3, r27	; 0x03
				if (but_tab[i]->tim_cnt >=TIMER_CNT_TIMEOUT && but_tab[i]->state != 1)
     924:	d8 01       	movw	r26, r16
     926:	ed 91       	ld	r30, X+
     928:	fc 91       	ld	r31, X
     92a:	80 81       	ld	r24, Z
     92c:	91 81       	ldd	r25, Z+1	; 0x01
     92e:	a2 81       	ldd	r26, Z+2	; 0x02
     930:	b3 81       	ldd	r27, Z+3	; 0x03
     932:	88 97       	sbiw	r24, 0x28	; 40
     934:	a1 05       	cpc	r26, r1
     936:	b1 05       	cpc	r27, r1
     938:	10 f1       	brcs	.+68     	; 0x97e <__stack+0x11f>
     93a:	84 81       	ldd	r24, Z+4	; 0x04
     93c:	81 30       	cpi	r24, 0x01	; 1
     93e:	f9 f0       	breq	.+62     	; 0x97e <__stack+0x11f>
				{
					if (but_tab[i]->timer_callback != 0)
     940:	05 84       	ldd	r0, Z+13	; 0x0d
     942:	f6 85       	ldd	r31, Z+14	; 0x0e
     944:	e0 2d       	mov	r30, r0
     946:	30 97       	sbiw	r30, 0x00	; 0
     948:	19 f0       	breq	.+6      	; 0x950 <__stack+0xf1>
					but_tab[i]->timer_callback(&button1);
     94a:	85 e1       	ldi	r24, 0x15	; 21
     94c:	95 e0       	ldi	r25, 0x05	; 5
     94e:	09 95       	icall
					but_tab[i]->tim_cnt = 0;
     950:	d8 01       	movw	r26, r16
     952:	ed 91       	ld	r30, X+
     954:	fc 91       	ld	r31, X
     956:	11 97       	sbiw	r26, 0x01	; 1
     958:	10 82       	st	Z, r1
     95a:	11 82       	std	Z+1, r1	; 0x01
     95c:	12 82       	std	Z+2, r1	; 0x02
     95e:	13 82       	std	Z+3, r1	; 0x03
					but_tab[i]->state = 1;
     960:	ed 91       	ld	r30, X+
     962:	fc 91       	ld	r31, X
     964:	d4 82       	std	Z+4, r13	; 0x04
     966:	0b c0       	rjmp	.+22     	; 0x97e <__stack+0x11f>
				}
			}
			else
			{
				but_tab[i]->tim_cnt = 0;
     968:	d8 01       	movw	r26, r16
     96a:	ed 91       	ld	r30, X+
     96c:	fc 91       	ld	r31, X
     96e:	11 97       	sbiw	r26, 0x01	; 1
     970:	10 82       	st	Z, r1
     972:	11 82       	std	Z+1, r1	; 0x01
     974:	12 82       	std	Z+2, r1	; 0x02
     976:	13 82       	std	Z+3, r1	; 0x03
				but_tab[i]->state = 0;
     978:	ed 91       	ld	r30, X+
     97a:	fc 91       	ld	r31, X
     97c:	14 82       	std	Z+4, r1	; 0x04
     97e:	22 96       	adiw	r28, 0x02	; 2
	uint8_t red_val = 0;
	if (timer_button < mktime.ms)
	{
		timer_button = mktime.ms + 20;
		//process
		for (uint8_t i=0; i<BUTTON_CNT; i++)
     980:	ce 15       	cp	r28, r14
     982:	df 05       	cpc	r29, r15
     984:	09 f0       	breq	.+2      	; 0x988 <__stack+0x129>
     986:	98 cf       	rjmp	.-208    	; 0x8b8 <__stack+0x59>
				but_tab[i]->tim_cnt = 0;
				but_tab[i]->state = 0;
			}
		} // end for
	}// end if
}
     988:	df 91       	pop	r29
     98a:	cf 91       	pop	r28
     98c:	1f 91       	pop	r17
     98e:	0f 91       	pop	r16
     990:	ff 90       	pop	r15
     992:	ef 90       	pop	r14
     994:	df 90       	pop	r13
     996:	08 95       	ret

00000998 <init_buttons>:

void init_buttons(void)
{
	init_but_struct();
     998:	0e 94 92 03 	call	0x724	; 0x724 <init_but_struct>
	//button1
	CLEAR_PIN(BUT1_DDR, BUT1_PIN);
     99c:	ba 98       	cbi	0x17, 2	; 23
	SET_PIN(BUT1_PORT, BUT1_PIN);
     99e:	c2 9a       	sbi	0x18, 2	; 24
	
	CLEAR_PIN(BUT2_DDR, BUT2_PIN);
     9a0:	b9 98       	cbi	0x17, 1	; 23
	SET_PIN(BUT2_PORT, BUT2_PIN);
     9a2:	c1 9a       	sbi	0x18, 1	; 24
	
	CLEAR_PIN(BUT3_DDR, BUT3_PIN);
     9a4:	be 98       	cbi	0x17, 6	; 23
	SET_PIN(BUT3_PORT, BUT3_PIN);
     9a6:	c6 9a       	sbi	0x18, 6	; 24
	
	CLEAR_PIN(BUT4_DDR, BUT4_PIN);
     9a8:	8b 98       	cbi	0x11, 3	; 17
	SET_PIN(BUT4_PORT, BUT4_PIN);
     9aa:	93 9a       	sbi	0x12, 3	; 18
	
	CLEAR_PIN(BUT5_DDR, BUT5_PIN);
     9ac:	bb 98       	cbi	0x17, 3	; 23
	SET_PIN(BUT5_PORT, BUT5_PIN);
     9ae:	c3 9a       	sbi	0x18, 3	; 24
	
	CLEAR_PIN(BUT6_DDR, BUT6_PIN);
     9b0:	d4 98       	cbi	0x1a, 4	; 26
	SET_PIN(BUT6_PORT, BUT6_PIN);
     9b2:	dc 9a       	sbi	0x1b, 4	; 27
	
	CLEAR_PIN(BUT7_DDR, BUT7_PIN);
     9b4:	a1 98       	cbi	0x14, 1	; 20
	SET_PIN(BUT7_PORT, BUT7_PIN);
     9b6:	a9 9a       	sbi	0x15, 1	; 21
	
	CLEAR_PIN(BUT8_DDR, BUT8_PIN);
     9b8:	bc 98       	cbi	0x17, 4	; 23
	SET_PIN(BUT8_PORT, BUT8_PIN);
     9ba:	c4 9a       	sbi	0x18, 4	; 24
	
	CLEAR_PIN(BUT9_DDR, BUT9_PIN);
     9bc:	d3 98       	cbi	0x1a, 3	; 26
	SET_PIN(BUT9_PORT, BUT9_PIN);
     9be:	db 9a       	sbi	0x1b, 3	; 27
	
	CLEAR_PIN(BUT10_DDR, BUT10_PIN);
     9c0:	a0 98       	cbi	0x14, 0	; 20
	SET_PIN(BUT10_PORT, BUT10_PIN);
     9c2:	a8 9a       	sbi	0x15, 0	; 21
     9c4:	08 95       	ret

000009c6 <buzzer_process>:
timer_t buzzer_timer = 0;
timer_t buzzer_state = 0;

void buzzer_process(void)
{
	if (buzzer_timer < mktime.ms)
     9c6:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
     9ca:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
     9ce:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
     9d2:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
     9d6:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <buzzer_timer>
     9da:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <buzzer_timer+0x1>
     9de:	a0 91 02 03 	lds	r26, 0x0302	; 0x800302 <buzzer_timer+0x2>
     9e2:	b0 91 03 03 	lds	r27, 0x0303	; 0x800303 <buzzer_timer+0x3>
     9e6:	84 17       	cp	r24, r20
     9e8:	95 07       	cpc	r25, r21
     9ea:	a6 07       	cpc	r26, r22
     9ec:	b7 07       	cpc	r27, r23
     9ee:	08 f0       	brcs	.+2      	; 0x9f2 <buzzer_process+0x2c>
     9f0:	59 c0       	rjmp	.+178    	; 0xaa4 <buzzer_process+0xde>
	{
		if (system_events&(1<<EV_ON_BUZZER) && buzzer_state==0)
     9f2:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
     9f6:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
     9fa:	95 ff       	sbrs	r25, 5
     9fc:	37 c0       	rjmp	.+110    	; 0xa6c <buzzer_process+0xa6>
     9fe:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <buzzer_state>
     a02:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <buzzer_state+0x1>
     a06:	a0 91 fe 02 	lds	r26, 0x02FE	; 0x8002fe <buzzer_state+0x2>
     a0a:	b0 91 ff 02 	lds	r27, 0x02FF	; 0x8002ff <buzzer_state+0x3>
     a0e:	89 2b       	or	r24, r25
     a10:	8a 2b       	or	r24, r26
     a12:	8b 2b       	or	r24, r27
     a14:	59 f5       	brne	.+86     	; 0xa6c <buzzer_process+0xa6>
		{
			ON_BUZZER;
     a16:	c0 9a       	sbi	0x18, 0	; 24
			CLEAR_PIN(system_events, EV_ON_BUZZER);
     a18:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
     a1c:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
     a20:	9f 7d       	andi	r25, 0xDF	; 223
     a22:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
     a26:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
			buzzer_state = 1;
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	a0 e0       	ldi	r26, 0x00	; 0
     a30:	b0 e0       	ldi	r27, 0x00	; 0
     a32:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <buzzer_state>
     a36:	90 93 fd 02 	sts	0x02FD, r25	; 0x8002fd <buzzer_state+0x1>
     a3a:	a0 93 fe 02 	sts	0x02FE, r26	; 0x8002fe <buzzer_state+0x2>
     a3e:	b0 93 ff 02 	sts	0x02FF, r27	; 0x8002ff <buzzer_state+0x3>
			buzzer_timer += 100;
     a42:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <buzzer_timer>
     a46:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <buzzer_timer+0x1>
     a4a:	a0 91 02 03 	lds	r26, 0x0302	; 0x800302 <buzzer_timer+0x2>
     a4e:	b0 91 03 03 	lds	r27, 0x0303	; 0x800303 <buzzer_timer+0x3>
     a52:	8c 59       	subi	r24, 0x9C	; 156
     a54:	9f 4f       	sbci	r25, 0xFF	; 255
     a56:	af 4f       	sbci	r26, 0xFF	; 255
     a58:	bf 4f       	sbci	r27, 0xFF	; 255
     a5a:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <buzzer_timer>
     a5e:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <buzzer_timer+0x1>
     a62:	a0 93 02 03 	sts	0x0302, r26	; 0x800302 <buzzer_timer+0x2>
     a66:	b0 93 03 03 	sts	0x0303, r27	; 0x800303 <buzzer_timer+0x3>
     a6a:	08 95       	ret
		}
		else
		{
			OFF_BUZZER;
     a6c:	c0 98       	cbi	0x18, 0	; 24
			buzzer_state = 0;
     a6e:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <buzzer_state>
     a72:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <buzzer_state+0x1>
     a76:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <buzzer_state+0x2>
     a7a:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <buzzer_state+0x3>
			buzzer_timer += 50;
     a7e:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <buzzer_timer>
     a82:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <buzzer_timer+0x1>
     a86:	a0 91 02 03 	lds	r26, 0x0302	; 0x800302 <buzzer_timer+0x2>
     a8a:	b0 91 03 03 	lds	r27, 0x0303	; 0x800303 <buzzer_timer+0x3>
     a8e:	c2 96       	adiw	r24, 0x32	; 50
     a90:	a1 1d       	adc	r26, r1
     a92:	b1 1d       	adc	r27, r1
     a94:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <buzzer_timer>
     a98:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <buzzer_timer+0x1>
     a9c:	a0 93 02 03 	sts	0x0302, r26	; 0x800302 <buzzer_timer+0x2>
     aa0:	b0 93 03 03 	sts	0x0303, r27	; 0x800303 <buzzer_timer+0x3>
     aa4:	08 95       	ret

00000aa6 <init_buzzer>:
	}
}

void init_buzzer(void)
{
	SET_PIN(BUZZER_DDR1, BUZZER_PIN1);
     aa6:	b8 9a       	sbi	0x17, 0	; 23
	//SET_PIN(BUZZER_DDR2, BUZZER_PIN2);
	OFF_BUZZER;
     aa8:	c0 98       	cbi	0x18, 0	; 24
     aaa:	08 95       	ret

00000aac <button_1_menu>:
	pass_add_number(5);
}

void button_1_menu(void *pv)
{
	if (configured_parameter > 0)
     aac:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <configured_parameter>
     ab0:	88 23       	and	r24, r24
     ab2:	19 f0       	breq	.+6      	; 0xaba <button_1_menu+0xe>
		configured_parameter--;
     ab4:	81 50       	subi	r24, 0x01	; 1
     ab6:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <configured_parameter>
     aba:	08 95       	ret

00000abc <button_2_menu>:
}
void button_2_menu(void *pv)
{
	if (configured_parameter < sizeof(menuSaveParameters))
     abc:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <configured_parameter>
     ac0:	84 30       	cpi	r24, 0x04	; 4
     ac2:	18 f4       	brcc	.+6      	; 0xaca <button_2_menu+0xe>
		configured_parameter++;
     ac4:	8f 5f       	subi	r24, 0xFF	; 255
     ac6:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <configured_parameter>
     aca:	08 95       	ret

00000acc <button_5_menu>:
	LED_SERVO_OFF;
}

void button_5_menu(void *pv)
{
	if (configured_parameter > 0)
     acc:	e0 91 4c 05 	lds	r30, 0x054C	; 0x80054c <configured_parameter>
     ad0:	ee 23       	and	r30, r30
     ad2:	31 f0       	breq	.+12     	; 0xae0 <button_5_menu+0x14>
		menuSaveParameters[configured_parameter]--;
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	e8 5b       	subi	r30, 0xB8	; 184
     ad8:	fa 4f       	sbci	r31, 0xFA	; 250
     ada:	80 81       	ld	r24, Z
     adc:	81 50       	subi	r24, 0x01	; 1
     ade:	80 83       	st	Z, r24
     ae0:	08 95       	ret

00000ae2 <button_6_menu>:
}
void button_6_menu(void *pv)
{
	if (configured_parameter < menuParameters[configured_parameter].max_value)
     ae2:	20 91 4c 05 	lds	r18, 0x054C	; 0x80054c <configured_parameter>
     ae6:	82 2f       	mov	r24, r18
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	fc 01       	movw	r30, r24
     aec:	ee 0f       	add	r30, r30
     aee:	ff 1f       	adc	r31, r31
     af0:	ec 58       	subi	r30, 0x8C	; 140
     af2:	ff 4f       	sbci	r31, 0xFF	; 255
     af4:	30 81       	ld	r19, Z
     af6:	23 17       	cp	r18, r19
     af8:	30 f4       	brcc	.+12     	; 0xb06 <button_6_menu+0x24>
		menuSaveParameters[configured_parameter]++;
     afa:	fc 01       	movw	r30, r24
     afc:	e8 5b       	subi	r30, 0xB8	; 184
     afe:	fa 4f       	sbci	r31, 0xFA	; 250
     b00:	80 81       	ld	r24, Z
     b02:	8f 5f       	subi	r24, 0xFF	; 255
     b04:	80 83       	st	Z, r24
     b06:	08 95       	ret

00000b08 <button_7_menu>:
}
void button_7_menu(void *pv)
{	
	if (state_menu == 1 && menu_param.disable_error == 0)
     b08:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <state_menu>
     b0c:	81 30       	cpi	r24, 0x01	; 1
     b0e:	71 f4       	brne	.+28     	; 0xb2c <button_7_menu+0x24>
     b10:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <menu_param+0x2>
     b14:	81 11       	cpse	r24, r1
     b16:	05 c0       	rjmp	.+10     	; 0xb22 <button_7_menu+0x1a>
	{
		menu_param.disable_error = 1;
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <menu_param+0x2>
		LED_SERVO_OFF;
     b1e:	96 98       	cbi	0x12, 6	; 18
     b20:	08 95       	ret
	}
	else if (state_menu == 1 && menu_param.disable_error == 1)
     b22:	81 30       	cpi	r24, 0x01	; 1
     b24:	19 f4       	brne	.+6      	; 0xb2c <button_7_menu+0x24>
	{
		menu_param.disable_error = 0;
     b26:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <menu_param+0x2>
		LED_SERVO_ON;
     b2a:	96 9a       	sbi	0x12, 6	; 18
     b2c:	08 95       	ret

00000b2e <button_8_menu>:
	}
}
void button_8_menu(void *pv)
{
     b2e:	08 95       	ret

00000b30 <button_9_menu>:
	
}
void button_9_menu(void *pv)
{
     b30:	08 95       	ret

00000b32 <button_10_menu>:
	
}
void button_10_menu(void *pv)
{
     b32:	08 95       	ret

00000b34 <button_3_menu>:

static void enter_to_menu(void);

static void save_parametrs(void)
{
	mem_save_data(MEM_CALIBRATION, menuSaveParameters);
     b34:	68 e4       	ldi	r22, 0x48	; 72
     b36:	75 e0       	ldi	r23, 0x05	; 5
     b38:	84 e0       	ldi	r24, 0x04	; 4
     b3a:	0e 94 bb 10 	call	0x2176	; 0x2176 <mem_save_data>
		configured_parameter++;
}
void button_3_menu(void *pv)
{
	save_parametrs();
	segment1.state = SEG_MENU_SAVE; 
     b3e:	88 e0       	ldi	r24, 0x08	; 8
     b40:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
	segment2.state = SEG_MENU_SAVE;
     b44:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
	LED_MOTOR_OFF;
     b48:	94 98       	cbi	0x12, 4	; 18
	LED_SERVO_OFF;
     b4a:	96 98       	cbi	0x12, 6	; 18
     b4c:	08 95       	ret

00000b4e <read_menu_parametrs>:
	mem_save_data(MEM_CALIBRATION, menuSaveParameters);
}

void read_menu_parametrs(void)
{
	mem_read_data(MEM_CALIBRATION, menuSaveParameters);
     b4e:	68 e4       	ldi	r22, 0x48	; 72
     b50:	75 e0       	ldi	r23, 0x05	; 5
     b52:	84 e0       	ldi	r24, 0x04	; 4
     b54:	0e 94 ff 10 	call	0x21fe	; 0x21fe <mem_read_data>
     b58:	08 95       	ret

00000b5a <check_menu_parameters>:
}

//powinno byc uruchomiane po wczytaniu z EEPROAM
void check_menu_parameters(void)
{
     b5a:	a8 e4       	ldi	r26, 0x48	; 72
     b5c:	b5 e0       	ldi	r27, 0x05	; 5
     b5e:	e4 e7       	ldi	r30, 0x74	; 116
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	2c e7       	ldi	r18, 0x7C	; 124
     b64:	30 e0       	ldi	r19, 0x00	; 0
	for(uint8_t i = 0; i < sizeof(menuSaveParameters); i++)
	{
		if (menuSaveParameters[i] > menuParameters[i].max_value)
     b66:	9c 91       	ld	r25, X
     b68:	80 81       	ld	r24, Z
     b6a:	89 17       	cp	r24, r25
     b6c:	10 f4       	brcc	.+4      	; 0xb72 <check_menu_parameters+0x18>
		{
			menuSaveParameters[i] = menuParameters[i].default_value;
     b6e:	81 81       	ldd	r24, Z+1	; 0x01
     b70:	8c 93       	st	X, r24
     b72:	11 96       	adiw	r26, 0x01	; 1
     b74:	32 96       	adiw	r30, 0x02	; 2
}

//powinno byc uruchomiane po wczytaniu z EEPROAM
void check_menu_parameters(void)
{
	for(uint8_t i = 0; i < sizeof(menuSaveParameters); i++)
     b76:	e2 17       	cp	r30, r18
     b78:	f3 07       	cpc	r31, r19
     b7a:	a9 f7       	brne	.-22     	; 0xb66 <check_menu_parameters+0xc>
		if (menuSaveParameters[i] > menuParameters[i].max_value)
		{
			menuSaveParameters[i] = menuParameters[i].default_value;
		}
	}
}
     b7c:	08 95       	ret

00000b7e <pass_add_number>:
	pass_len = 0;
	memset(pass, 0, sizeof(pass));
}

void pass_add_number(uint8_t number)
{
     b7e:	cf 93       	push	r28
	pass[pass_len++] = number;
     b80:	e0 91 4d 05 	lds	r30, 0x054D	; 0x80054d <pass_len>
     b84:	c1 e0       	ldi	r28, 0x01	; 1
     b86:	ce 0f       	add	r28, r30
     b88:	c0 93 4d 05 	sts	0x054D, r28	; 0x80054d <pass_len>
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	ee 5b       	subi	r30, 0xBE	; 190
     b90:	fa 4f       	sbci	r31, 0xFA	; 250
     b92:	80 83       	st	Z, r24
	if (memcmp(pass, password, pass_len) != 0) {
     b94:	4c 2f       	mov	r20, r28
     b96:	50 e0       	ldi	r21, 0x00	; 0
     b98:	66 ea       	ldi	r22, 0xA6	; 166
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	82 e4       	ldi	r24, 0x42	; 66
     b9e:	95 e0       	ldi	r25, 0x05	; 5
     ba0:	0e 94 dd 20 	call	0x41ba	; 0x41ba <memcmp>
     ba4:	89 2b       	or	r24, r25
     ba6:	51 f0       	breq	.+20     	; 0xbbc <pass_add_number+0x3e>
	}
}

static void clear_password(void)
{
	pass_len = 0;
     ba8:	10 92 4d 05 	sts	0x054D, r1	; 0x80054d <pass_len>
	memset(pass, 0, sizeof(pass));
     bac:	86 e0       	ldi	r24, 0x06	; 6
     bae:	e2 e4       	ldi	r30, 0x42	; 66
     bb0:	f5 e0       	ldi	r31, 0x05	; 5
     bb2:	df 01       	movw	r26, r30
     bb4:	1d 92       	st	X+, r1
     bb6:	8a 95       	dec	r24
     bb8:	e9 f7       	brne	.-6      	; 0xbb4 <pass_add_number+0x36>
     bba:	3b c0       	rjmp	.+118    	; 0xc32 <pass_add_number+0xb4>
	pass[pass_len++] = number;
	if (memcmp(pass, password, pass_len) != 0) {
		clear_password();
		return;
	}
	if (pass_len == sizeof(pass)) {
     bbc:	c6 30       	cpi	r28, 0x06	; 6
     bbe:	c9 f5       	brne	.+114    	; 0xc32 <pass_add_number+0xb4>
	if (menu_param.disable_error > 1) menu_param.disable_error = 0;
}

static void enter_to_menu(void)
{
	dark_menu_state = MENU_PARAMETERS;
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <dark_menu_state>
	button1.fall_callback = button_1_menu;
     bc6:	86 e5       	ldi	r24, 0x56	; 86
     bc8:	95 e0       	ldi	r25, 0x05	; 5
     bca:	90 93 21 05 	sts	0x0521, r25	; 0x800521 <button1+0xc>
     bce:	80 93 20 05 	sts	0x0520, r24	; 0x800520 <button1+0xb>
	button2.fall_callback = button_2_menu;
     bd2:	8e e5       	ldi	r24, 0x5E	; 94
     bd4:	95 e0       	ldi	r25, 0x05	; 5
     bd6:	90 93 f4 04 	sts	0x04F4, r25	; 0x8004f4 <button2+0xc>
     bda:	80 93 f3 04 	sts	0x04F3, r24	; 0x8004f3 <button2+0xb>
	button3.fall_callback = button_3_menu;
     bde:	8a e9       	ldi	r24, 0x9A	; 154
     be0:	95 e0       	ldi	r25, 0x05	; 5
     be2:	90 93 03 05 	sts	0x0503, r25	; 0x800503 <button3+0xc>
     be6:	80 93 02 05 	sts	0x0502, r24	; 0x800502 <button3+0xb>
	button5.fall_callback = button_5_menu;
     bea:	86 e6       	ldi	r24, 0x66	; 102
     bec:	95 e0       	ldi	r25, 0x05	; 5
     bee:	90 93 d2 04 	sts	0x04D2, r25	; 0x8004d2 <button5+0xc>
     bf2:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <button5+0xb>
	button6.fall_callback = button_6_menu;
     bf6:	81 e7       	ldi	r24, 0x71	; 113
     bf8:	95 e0       	ldi	r25, 0x05	; 5
     bfa:	90 93 12 05 	sts	0x0512, r25	; 0x800512 <button6+0xc>
     bfe:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <button6+0xb>
	button7.fall_callback = button_7_menu;
     c02:	84 e8       	ldi	r24, 0x84	; 132
     c04:	95 e0       	ldi	r25, 0x05	; 5
     c06:	90 93 30 05 	sts	0x0530, r25	; 0x800530 <button7+0xc>
     c0a:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <button7+0xb>
	button8.fall_callback = button_8_menu;
     c0e:	87 e9       	ldi	r24, 0x97	; 151
     c10:	95 e0       	ldi	r25, 0x05	; 5
     c12:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <button8+0xc>
     c16:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <button8+0xb>
	button9.fall_callback = button_9_menu;
     c1a:	88 e9       	ldi	r24, 0x98	; 152
     c1c:	95 e0       	ldi	r25, 0x05	; 5
     c1e:	90 93 b4 04 	sts	0x04B4, r25	; 0x8004b4 <button9+0xc>
     c22:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <button9+0xb>
	button10.fall_callback = button_10_menu;
     c26:	89 e9       	ldi	r24, 0x99	; 153
     c28:	95 e0       	ldi	r25, 0x05	; 5
     c2a:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <button10+0xc>
     c2e:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <button10+0xb>
		return;
	}
	if (pass_len == sizeof(pass)) {
		enter_to_menu();
	}
}
     c32:	cf 91       	pop	r28
     c34:	08 95       	ret

00000c36 <button_1_number>:

void button_1_number(void *pv)
{
	pass_add_number(0);
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c3c:	08 95       	ret

00000c3e <button_2_number>:
}

void button_2_number(void *pv)
{
	pass_add_number(1);
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c44:	08 95       	ret

00000c46 <button_3_number>:
}
void button_3_number(void *pv)
{
	pass_add_number(2);
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c4c:	08 95       	ret

00000c4e <button_5_number>:
}
void button_5_number(void *pv)
{
	pass_add_number(3);
     c4e:	83 e0       	ldi	r24, 0x03	; 3
     c50:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c54:	08 95       	ret

00000c56 <button_6_number>:
}
void button_6_number(void *pv)
{
	pass_add_number(4);
     c56:	84 e0       	ldi	r24, 0x04	; 4
     c58:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c5c:	08 95       	ret

00000c5e <button_7_number>:
}
void button_7_number(void *pv)
{
	pass_add_number(5);
     c5e:	85 e0       	ldi	r24, 0x05	; 5
     c60:	0e 94 bf 05 	call	0xb7e	; 0xb7e <pass_add_number>
     c64:	08 95       	ret

00000c66 <menu_process>:
}

void menu_process(void)
{
	static timer_t menu_timer;
	if (menu_timer < mktime.ms && dark_menu_state == 1)
     c66:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
     c6a:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
     c6e:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
     c72:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
     c76:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <menu_timer.2192>
     c7a:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <menu_timer.2192+0x1>
     c7e:	a0 91 06 03 	lds	r26, 0x0306	; 0x800306 <menu_timer.2192+0x2>
     c82:	b0 91 07 03 	lds	r27, 0x0307	; 0x800307 <menu_timer.2192+0x3>
     c86:	84 17       	cp	r24, r20
     c88:	95 07       	cpc	r25, r21
     c8a:	a6 07       	cpc	r26, r22
     c8c:	b7 07       	cpc	r27, r23
     c8e:	08 f0       	brcs	.+2      	; 0xc92 <menu_process+0x2c>
     c90:	58 c0       	rjmp	.+176    	; 0xd42 <menu_process+0xdc>
     c92:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <dark_menu_state>
     c96:	81 30       	cpi	r24, 0x01	; 1
     c98:	09 f0       	breq	.+2      	; 0xc9c <menu_process+0x36>
     c9a:	53 c0       	rjmp	.+166    	; 0xd42 <menu_process+0xdc>
	{
		if (segment1.state == SEG_MENU)
     c9c:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
     ca0:	87 30       	cpi	r24, 0x07	; 7
     ca2:	31 f4       	brne	.+12     	; 0xcb0 <menu_process+0x4a>
			disp_set_number(&segment1, configured_parameter);
     ca4:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <configured_parameter>
     ca8:	82 e6       	ldi	r24, 0x62	; 98
     caa:	95 e0       	ldi	r25, 0x05	; 5
     cac:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
		if (segment2.state == SEG_MENU)
     cb0:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
     cb4:	87 30       	cpi	r24, 0x07	; 7
     cb6:	51 f4       	brne	.+20     	; 0xccc <menu_process+0x66>
			disp_set_number(&segment2, menuSaveParameters[configured_parameter]);
     cb8:	e0 91 4c 05 	lds	r30, 0x054C	; 0x80054c <configured_parameter>
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	e8 5b       	subi	r30, 0xB8	; 184
     cc0:	fa 4f       	sbci	r31, 0xFA	; 250
     cc2:	60 81       	ld	r22, Z
     cc4:	8d e5       	ldi	r24, 0x5D	; 93
     cc6:	95 e0       	ldi	r25, 0x05	; 5
     cc8:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
			
		if (segment1.state == SEG_MENU_SAVE && segment2.state == SEG_MENU_SAVE)
     ccc:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
     cd0:	88 30       	cpi	r24, 0x08	; 8
     cd2:	49 f5       	brne	.+82     	; 0xd26 <menu_process+0xc0>
     cd4:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
     cd8:	88 30       	cpi	r24, 0x08	; 8
     cda:	29 f5       	brne	.+74     	; 0xd26 <menu_process+0xc0>
		{
			menu_timer = 1000 + mktime.ms;
     cdc:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
     ce0:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
     ce4:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
     ce8:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
     cec:	88 51       	subi	r24, 0x18	; 24
     cee:	9c 4f       	sbci	r25, 0xFC	; 252
     cf0:	af 4f       	sbci	r26, 0xFF	; 255
     cf2:	bf 4f       	sbci	r27, 0xFF	; 255
     cf4:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <menu_timer.2192>
     cf8:	90 93 05 03 	sts	0x0305, r25	; 0x800305 <menu_timer.2192+0x1>
     cfc:	a0 93 06 03 	sts	0x0306, r26	; 0x800306 <menu_timer.2192+0x2>
     d00:	b0 93 07 03 	sts	0x0307, r27	; 0x800307 <menu_timer.2192+0x3>
			DispD2.value = 's';
     d04:	83 e7       	ldi	r24, 0x73	; 115
     d06:	80 93 75 05 	sts	0x0575, r24	; 0x800575 <DispD2>
			DispD1.value = 'a';
     d0a:	81 e6       	ldi	r24, 0x61	; 97
     d0c:	80 93 69 05 	sts	0x0569, r24	; 0x800569 <DispD1>
			DispD3.value = 'p';
     d10:	80 e7       	ldi	r24, 0x70	; 112
     d12:	80 93 67 05 	sts	0x0567, r24	; 0x800567 <DispD3>
			DispD4.value = 0;
     d16:	10 92 73 05 	sts	0x0573, r1	; 0x800573 <DispD4>
			segment1.state = SEG_MENU_OFF;
     d1a:	8a e0       	ldi	r24, 0x0A	; 10
     d1c:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
			segment2.state = SEG_MENU_OFF;
     d20:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
			
			return;
     d24:	08 95       	ret
		}
		
		if (segment1.state == SEG_MENU_OFF && segment2.state == SEG_MENU_OFF)
     d26:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
     d2a:	8a 30       	cpi	r24, 0x0A	; 10
     d2c:	51 f4       	brne	.+20     	; 0xd42 <menu_process+0xdc>
     d2e:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
     d32:	8a 30       	cpi	r24, 0x0A	; 10
     d34:	31 f4       	brne	.+12     	; 0xd42 <menu_process+0xdc>
		{
			segment1.state = SEG_OFF;
     d36:	10 92 66 05 	sts	0x0566, r1	; 0x800566 <segment1+0x4>
			segment2.state = SEG_OFF;
     d3a:	10 92 61 05 	sts	0x0561, r1	; 0x800561 <segment2+0x4>
			state_menu = 0;
     d3e:	10 92 51 05 	sts	0x0551, r1	; 0x800551 <state_menu>
     d42:	08 95       	ret

00000d44 <init_menu>:
	}
}

void init_menu(void)
{
	button1.fall_callback = button_1_number;
     d44:	8b e1       	ldi	r24, 0x1B	; 27
     d46:	96 e0       	ldi	r25, 0x06	; 6
     d48:	90 93 21 05 	sts	0x0521, r25	; 0x800521 <button1+0xc>
     d4c:	80 93 20 05 	sts	0x0520, r24	; 0x800520 <button1+0xb>
	button2.fall_callback = button_2_number;
     d50:	8f e1       	ldi	r24, 0x1F	; 31
     d52:	96 e0       	ldi	r25, 0x06	; 6
     d54:	90 93 f4 04 	sts	0x04F4, r25	; 0x8004f4 <button2+0xc>
     d58:	80 93 f3 04 	sts	0x04F3, r24	; 0x8004f3 <button2+0xb>
	button3.fall_callback = button_3_number;
     d5c:	83 e2       	ldi	r24, 0x23	; 35
     d5e:	96 e0       	ldi	r25, 0x06	; 6
     d60:	90 93 03 05 	sts	0x0503, r25	; 0x800503 <button3+0xc>
     d64:	80 93 02 05 	sts	0x0502, r24	; 0x800502 <button3+0xb>
	button5.fall_callback = button_5_number;
     d68:	87 e2       	ldi	r24, 0x27	; 39
     d6a:	96 e0       	ldi	r25, 0x06	; 6
     d6c:	90 93 d2 04 	sts	0x04D2, r25	; 0x8004d2 <button5+0xc>
     d70:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <button5+0xb>
	button6.fall_callback = button_6_number;
     d74:	8b e2       	ldi	r24, 0x2B	; 43
     d76:	96 e0       	ldi	r25, 0x06	; 6
     d78:	90 93 12 05 	sts	0x0512, r25	; 0x800512 <button6+0xc>
     d7c:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <button6+0xb>
	button7.fall_callback = button_7_number;
     d80:	8f e2       	ldi	r24, 0x2F	; 47
     d82:	96 e0       	ldi	r25, 0x06	; 6
     d84:	90 93 30 05 	sts	0x0530, r25	; 0x800530 <button7+0xc>
     d88:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <button7+0xb>
	read_menu_parametrs();
     d8c:	0e 94 a7 05 	call	0xb4e	; 0xb4e <read_menu_parametrs>
	check_menu_parameters();
     d90:	0e 94 ad 05 	call	0xb5a	; 0xb5a <check_menu_parameters>
	if (menu_param.motor_add > 99) menu_param.motor_add = 0;
     d94:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <menu_param>
     d98:	84 36       	cpi	r24, 0x64	; 100
     d9a:	10 f0       	brcs	.+4      	; 0xda0 <init_menu+0x5c>
     d9c:	10 92 4e 05 	sts	0x054E, r1	; 0x80054e <menu_param>
	if (menu_param.servo_add > 99) menu_param.servo_add = 0;
     da0:	80 91 4f 05 	lds	r24, 0x054F	; 0x80054f <menu_param+0x1>
     da4:	84 36       	cpi	r24, 0x64	; 100
     da6:	10 f0       	brcs	.+4      	; 0xdac <init_menu+0x68>
     da8:	10 92 4f 05 	sts	0x054F, r1	; 0x80054f <menu_param+0x1>
	if (menu_param.disable_error > 1) menu_param.disable_error = 0;
     dac:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <menu_param+0x2>
     db0:	82 30       	cpi	r24, 0x02	; 2
     db2:	10 f0       	brcs	.+4      	; 0xdb8 <init_menu+0x74>
     db4:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <menu_param+0x2>
     db8:	08 95       	ret

00000dba <dcmotorpwm_init>:
     dba:	8c ea       	ldi	r24, 0xAC	; 172
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	9f 93       	push	r25
     dc0:	8f 93       	push	r24
     dc2:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
     dc6:	87 e5       	ldi	r24, 0x57	; 87
     dc8:	95 e0       	ldi	r25, 0x05	; 5
     dca:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <evTime_init>
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <motorD>
     dd4:	94 98       	cbi	0x12, 4	; 18
     dd6:	15 bc       	out	0x25, r1	; 37
     dd8:	8f 9a       	sbi	0x11, 7	; 17
     dda:	97 9a       	sbi	0x12, 7	; 18
     ddc:	0f 90       	pop	r0
     dde:	0f 90       	pop	r0
     de0:	08 95       	ret

00000de2 <dcmotorpwm_deinit>:
     de2:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <motorD>
     de6:	15 bc       	out	0x25, r1	; 37
     de8:	97 9a       	sbi	0x12, 7	; 18
     dea:	94 98       	cbi	0x12, 4	; 18
     dec:	08 95       	ret

00000dee <dcmotor_is_on>:
     dee:	90 91 53 05 	lds	r25, 0x0553	; 0x800553 <motorD>
     df2:	92 50       	subi	r25, 0x02	; 2
     df4:	21 e0       	ldi	r18, 0x01	; 1
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	93 30       	cpi	r25, 0x03	; 3
     dfa:	10 f0       	brcs	.+4      	; 0xe00 <dcmotor_is_on+0x12>
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	c9 01       	movw	r24, r18
     e02:	08 95       	ret

00000e04 <dcmotorpwm_stop>:
     e04:	0e 94 f7 06 	call	0xdee	; 0xdee <dcmotor_is_on>
     e08:	00 97       	sbiw	r24, 0x00	; 0
     e0a:	99 f0       	breq	.+38     	; 0xe32 <dcmotorpwm_stop+0x2e>
     e0c:	8a eb       	ldi	r24, 0xBA	; 186
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	9f 93       	push	r25
     e12:	8f 93       	push	r24
     e14:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
     e18:	15 bc       	out	0x25, r1	; 37
     e1a:	97 9a       	sbi	0x12, 7	; 18
     e1c:	94 98       	cbi	0x12, 4	; 18
     e1e:	e3 e5       	ldi	r30, 0x53	; 83
     e20:	f5 e0       	ldi	r31, 0x05	; 5
     e22:	80 81       	ld	r24, Z
     e24:	81 83       	std	Z+1, r24	; 0x01
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	80 83       	st	Z, r24
     e2a:	0f 90       	pop	r0
     e2c:	0f 90       	pop	r0
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	08 95       	ret

00000e34 <dcmotorpwm_start>:
     e34:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <motorD>
     e38:	81 30       	cpi	r24, 0x01	; 1
     e3a:	d9 f4       	brne	.+54     	; 0xe72 <dcmotorpwm_start+0x3e>
     e3c:	94 9a       	sbi	0x12, 4	; 18
     e3e:	85 b5       	in	r24, 0x25	; 37
     e40:	80 63       	ori	r24, 0x30	; 48
     e42:	85 bd       	out	0x25, r24	; 37
     e44:	85 b5       	in	r24, 0x25	; 37
     e46:	80 64       	ori	r24, 0x40	; 64
     e48:	85 bd       	out	0x25, r24	; 37
     e4a:	85 b5       	in	r24, 0x25	; 37
     e4c:	81 60       	ori	r24, 0x01	; 1
     e4e:	85 bd       	out	0x25, r24	; 37
     e50:	e3 e5       	ldi	r30, 0x53	; 83
     e52:	f5 e0       	ldi	r31, 0x05	; 5
     e54:	80 81       	ld	r24, Z
     e56:	81 83       	std	Z+1, r24	; 0x01
     e58:	84 e0       	ldi	r24, 0x04	; 4
     e5a:	80 83       	st	Z, r24
     e5c:	48 ee       	ldi	r20, 0xE8	; 232
     e5e:	53 e0       	ldi	r21, 0x03	; 3
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	87 e5       	ldi	r24, 0x57	; 87
     e66:	95 e0       	ldi	r25, 0x05	; 5
     e68:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	08 95       	ret
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	08 95       	ret

00000e78 <dcmotor_get_pwm>:
     e78:	80 91 56 05 	lds	r24, 0x0556	; 0x800556 <motorD+0x3>
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	08 95       	ret

00000e80 <dcmotor_set_error>:
     e80:	88 ec       	ldi	r24, 0xC8	; 200
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	9f 93       	push	r25
     e86:	8f 93       	push	r24
     e88:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
     e8c:	0e 94 02 07 	call	0xe04	; 0xe04 <dcmotorpwm_stop>
     e90:	85 e0       	ldi	r24, 0x05	; 5
     e92:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <motorD>
     e96:	0f 90       	pop	r0
     e98:	0f 90       	pop	r0
     e9a:	08 95       	ret

00000e9c <dcmotor_set_try>:
     e9c:	0e 94 f7 06 	call	0xdee	; 0xdee <dcmotor_is_on>
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	29 f0       	breq	.+10     	; 0xeae <dcmotor_set_try+0x12>
     ea4:	83 e0       	ldi	r24, 0x03	; 3
     ea6:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <motorD>
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	08 95       	ret

00000eb0 <dcmotor_set_normal_state>:
     eb0:	0e 94 f7 06 	call	0xdee	; 0xdee <dcmotor_is_on>
     eb4:	00 97       	sbiw	r24, 0x00	; 0
     eb6:	29 f0       	breq	.+10     	; 0xec2 <dcmotor_set_normal_state+0x12>
     eb8:	82 e0       	ldi	r24, 0x02	; 2
     eba:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <motorD>
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	08 95       	ret

00000ec4 <dcmotor_process>:
     ec4:	cf 93       	push	r28
     ec6:	c8 2f       	mov	r28, r24
     ec8:	46 e9       	ldi	r20, 0x96	; 150
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	88 e0       	ldi	r24, 0x08	; 8
     ed2:	93 e0       	ldi	r25, 0x03	; 3
     ed4:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <evTime_process_period>
     ed8:	89 2b       	or	r24, r25
     eda:	09 f4       	brne	.+2      	; 0xede <dcmotor_process+0x1a>
     edc:	58 c0       	rjmp	.+176    	; 0xf8e <dcmotor_process+0xca>
     ede:	90 91 53 05 	lds	r25, 0x0553	; 0x800553 <motorD>
     ee2:	93 30       	cpi	r25, 0x03	; 3
     ee4:	e9 f0       	breq	.+58     	; 0xf20 <dcmotor_process+0x5c>
     ee6:	28 f4       	brcc	.+10     	; 0xef2 <dcmotor_process+0x2e>
     ee8:	91 30       	cpi	r25, 0x01	; 1
     eea:	b9 f0       	breq	.+46     	; 0xf1a <dcmotor_process+0x56>
     eec:	92 30       	cpi	r25, 0x02	; 2
     eee:	41 f0       	breq	.+16     	; 0xf00 <dcmotor_process+0x3c>
     ef0:	4e c0       	rjmp	.+156    	; 0xf8e <dcmotor_process+0xca>
     ef2:	94 30       	cpi	r25, 0x04	; 4
     ef4:	09 f4       	brne	.+2      	; 0xef8 <dcmotor_process+0x34>
     ef6:	48 c0       	rjmp	.+144    	; 0xf88 <dcmotor_process+0xc4>
     ef8:	95 30       	cpi	r25, 0x05	; 5
     efa:	09 f4       	brne	.+2      	; 0xefe <dcmotor_process+0x3a>
     efc:	42 c0       	rjmp	.+132    	; 0xf82 <dcmotor_process+0xbe>
     efe:	47 c0       	rjmp	.+142    	; 0xf8e <dcmotor_process+0xca>
     f00:	c0 93 56 05 	sts	0x0556, r28	; 0x800556 <motorD+0x3>
     f04:	2b ee       	ldi	r18, 0xEB	; 235
     f06:	c2 9f       	mul	r28, r18
     f08:	c0 01       	movw	r24, r0
     f0a:	11 24       	eor	r1, r1
     f0c:	63 e6       	ldi	r22, 0x63	; 99
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	0e 94 64 1f 	call	0x3ec8	; 0x3ec8 <__divmodhi4>
     f14:	6c 5e       	subi	r22, 0xEC	; 236
     f16:	63 bd       	out	0x23, r22	; 35
     f18:	3a c0       	rjmp	.+116    	; 0xf8e <dcmotor_process+0xca>
     f1a:	10 92 56 05 	sts	0x0556, r1	; 0x800556 <motorD+0x3>
     f1e:	37 c0       	rjmp	.+110    	; 0xf8e <dcmotor_process+0xca>
     f20:	c3 33       	cpi	r28, 0x33	; 51
     f22:	78 f4       	brcc	.+30     	; 0xf42 <dcmotor_process+0x7e>
     f24:	84 e1       	ldi	r24, 0x14	; 20
     f26:	8c 0f       	add	r24, r28
     f28:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <motorD+0x3>
     f2c:	2b ee       	ldi	r18, 0xEB	; 235
     f2e:	82 9f       	mul	r24, r18
     f30:	c0 01       	movw	r24, r0
     f32:	11 24       	eor	r1, r1
     f34:	63 e6       	ldi	r22, 0x63	; 99
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	0e 94 64 1f 	call	0x3ec8	; 0x3ec8 <__divmodhi4>
     f3c:	6c 5e       	subi	r22, 0xEC	; 236
     f3e:	63 bd       	out	0x23, r22	; 35
     f40:	26 c0       	rjmp	.+76     	; 0xf8e <dcmotor_process+0xca>
     f42:	8d ec       	ldi	r24, 0xCD	; 205
     f44:	8c 0f       	add	r24, r28
     f46:	84 31       	cpi	r24, 0x14	; 20
     f48:	78 f4       	brcc	.+30     	; 0xf68 <dcmotor_process+0xa4>
     f4a:	8f e0       	ldi	r24, 0x0F	; 15
     f4c:	8c 0f       	add	r24, r28
     f4e:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <motorD+0x3>
     f52:	2b ee       	ldi	r18, 0xEB	; 235
     f54:	82 9f       	mul	r24, r18
     f56:	c0 01       	movw	r24, r0
     f58:	11 24       	eor	r1, r1
     f5a:	63 e6       	ldi	r22, 0x63	; 99
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	0e 94 64 1f 	call	0x3ec8	; 0x3ec8 <__divmodhi4>
     f62:	6c 5e       	subi	r22, 0xEC	; 236
     f64:	63 bd       	out	0x23, r22	; 35
     f66:	13 c0       	rjmp	.+38     	; 0xf8e <dcmotor_process+0xca>
     f68:	c0 93 56 05 	sts	0x0556, r28	; 0x800556 <motorD+0x3>
     f6c:	2b ee       	ldi	r18, 0xEB	; 235
     f6e:	c2 9f       	mul	r28, r18
     f70:	c0 01       	movw	r24, r0
     f72:	11 24       	eor	r1, r1
     f74:	63 e6       	ldi	r22, 0x63	; 99
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	0e 94 64 1f 	call	0x3ec8	; 0x3ec8 <__divmodhi4>
     f7c:	6c 5e       	subi	r22, 0xEC	; 236
     f7e:	63 bd       	out	0x23, r22	; 35
     f80:	06 c0       	rjmp	.+12     	; 0xf8e <dcmotor_process+0xca>
     f82:	15 bc       	out	0x25, r1	; 37
     f84:	97 9a       	sbi	0x12, 7	; 18
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <dcmotor_process+0xca>
     f88:	82 e0       	ldi	r24, 0x02	; 2
     f8a:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <motorD>
     f8e:	cf 91       	pop	r28
     f90:	08 95       	ret

00000f92 <clear_display>:
     f92:	ae 9a       	sbi	0x15, 6	; 21
     f94:	ad 9a       	sbi	0x15, 5	; 21
     f96:	dd 9a       	sbi	0x1b, 5	; 27
     f98:	df 9a       	sbi	0x1b, 7	; 27
     f9a:	de 9a       	sbi	0x1b, 6	; 27
     f9c:	aa 9a       	sbi	0x15, 2	; 21
     f9e:	af 9a       	sbi	0x15, 7	; 21
     fa0:	08 95       	ret

00000fa2 <off_all_displays>:
     fa2:	92 9a       	sbi	0x12, 2	; 18
     fa4:	10 92 6a 05 	sts	0x056A, r1	; 0x80056a <DispD1+0x1>
     fa8:	c7 9a       	sbi	0x18, 7	; 24
     faa:	10 92 76 05 	sts	0x0576, r1	; 0x800576 <DispD2+0x1>
     fae:	ac 9a       	sbi	0x15, 4	; 21
     fb0:	10 92 68 05 	sts	0x0568, r1	; 0x800568 <DispD3+0x1>
     fb4:	ab 9a       	sbi	0x15, 3	; 21
     fb6:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <DispD4+0x1>
     fba:	08 95       	ret

00000fbc <init_display_drv>:
     fbc:	a6 9a       	sbi	0x14, 6	; 20
     fbe:	a5 9a       	sbi	0x14, 5	; 20
     fc0:	d5 9a       	sbi	0x1a, 5	; 26
     fc2:	d7 9a       	sbi	0x1a, 7	; 26
     fc4:	d6 9a       	sbi	0x1a, 6	; 26
     fc6:	a2 9a       	sbi	0x14, 2	; 20
     fc8:	a7 9a       	sbi	0x14, 7	; 20
     fca:	8a 9a       	sbi	0x11, 2	; 17
     fcc:	eb e6       	ldi	r30, 0x6B	; 107
     fce:	f5 e0       	ldi	r31, 0x05	; 5
     fd0:	89 e6       	ldi	r24, 0x69	; 105
     fd2:	95 e0       	ldi	r25, 0x05	; 5
     fd4:	91 83       	std	Z+1, r25	; 0x01
     fd6:	80 83       	st	Z, r24
     fd8:	bf 9a       	sbi	0x17, 7	; 23
     fda:	25 e7       	ldi	r18, 0x75	; 117
     fdc:	35 e0       	ldi	r19, 0x05	; 5
     fde:	33 83       	std	Z+3, r19	; 0x03
     fe0:	22 83       	std	Z+2, r18	; 0x02
     fe2:	a2 e6       	ldi	r26, 0x62	; 98
     fe4:	b5 e0       	ldi	r27, 0x05	; 5
     fe6:	11 96       	adiw	r26, 0x01	; 1
     fe8:	3c 93       	st	X, r19
     fea:	2e 93       	st	-X, r18
     fec:	13 96       	adiw	r26, 0x03	; 3
     fee:	9c 93       	st	X, r25
     ff0:	8e 93       	st	-X, r24
     ff2:	12 97       	sbiw	r26, 0x02	; 2
     ff4:	a4 9a       	sbi	0x14, 4	; 20
     ff6:	27 e6       	ldi	r18, 0x67	; 103
     ff8:	35 e0       	ldi	r19, 0x05	; 5
     ffa:	35 83       	std	Z+5, r19	; 0x05
     ffc:	24 83       	std	Z+4, r18	; 0x04
     ffe:	a3 9a       	sbi	0x14, 3	; 20
    1000:	83 e7       	ldi	r24, 0x73	; 115
    1002:	95 e0       	ldi	r25, 0x05	; 5
    1004:	97 83       	std	Z+7, r25	; 0x07
    1006:	86 83       	std	Z+6, r24	; 0x06
    1008:	ed e5       	ldi	r30, 0x5D	; 93
    100a:	f5 e0       	ldi	r31, 0x05	; 5
    100c:	31 83       	std	Z+1, r19	; 0x01
    100e:	20 83       	st	Z, r18
    1010:	93 83       	std	Z+3, r25	; 0x03
    1012:	82 83       	std	Z+2, r24	; 0x02
    1014:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <off_all_displays>
    1018:	0e 94 c9 07 	call	0xf92	; 0xf92 <clear_display>
    101c:	08 95       	ret

0000101e <display_set_value>:
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	fc 01       	movw	r30, r24
    1024:	30 81       	ld	r19, Z
    1026:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <displaying_value>
    102a:	32 17       	cp	r19, r18
    102c:	09 f4       	brne	.+2      	; 0x1030 <display_set_value+0x12>
    102e:	95 c0       	rjmp	.+298    	; 0x115a <display_set_value+0x13c>
    1030:	ec 01       	movw	r28, r24
    1032:	0e 94 c9 07 	call	0xf92	; 0xf92 <clear_display>
    1036:	e8 81       	ld	r30, Y
    1038:	8e 2f       	mov	r24, r30
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	8f 3f       	cpi	r24, 0xFF	; 255
    103e:	91 05       	cpc	r25, r1
    1040:	08 f0       	brcs	.+2      	; 0x1044 <display_set_value+0x26>
    1042:	88 c0       	rjmp	.+272    	; 0x1154 <display_set_value+0x136>
    1044:	fc 01       	movw	r30, r24
    1046:	e6 5d       	subi	r30, 0xD6	; 214
    1048:	ff 4f       	sbci	r31, 0xFF	; 255
    104a:	0c 94 9a 1f 	jmp	0x3f34	; 0x3f34 <__tablejump2__>
    104e:	ae 98       	cbi	0x15, 6	; 21
    1050:	ad 98       	cbi	0x15, 5	; 21
    1052:	dd 98       	cbi	0x1b, 5	; 27
    1054:	df 98       	cbi	0x1b, 7	; 27
    1056:	de 98       	cbi	0x1b, 6	; 27
    1058:	aa 98       	cbi	0x15, 2	; 21
    105a:	7c c0       	rjmp	.+248    	; 0x1154 <display_set_value+0x136>
    105c:	ad 98       	cbi	0x15, 5	; 21
    105e:	dd 98       	cbi	0x1b, 5	; 27
    1060:	79 c0       	rjmp	.+242    	; 0x1154 <display_set_value+0x136>
    1062:	ae 98       	cbi	0x15, 6	; 21
    1064:	ad 98       	cbi	0x15, 5	; 21
    1066:	af 98       	cbi	0x15, 7	; 21
    1068:	de 98       	cbi	0x1b, 6	; 27
    106a:	df 98       	cbi	0x1b, 7	; 27
    106c:	73 c0       	rjmp	.+230    	; 0x1154 <display_set_value+0x136>
    106e:	ae 98       	cbi	0x15, 6	; 21
    1070:	ad 98       	cbi	0x15, 5	; 21
    1072:	af 98       	cbi	0x15, 7	; 21
    1074:	dd 98       	cbi	0x1b, 5	; 27
    1076:	df 98       	cbi	0x1b, 7	; 27
    1078:	6d c0       	rjmp	.+218    	; 0x1154 <display_set_value+0x136>
    107a:	aa 98       	cbi	0x15, 2	; 21
    107c:	af 98       	cbi	0x15, 7	; 21
    107e:	ad 98       	cbi	0x15, 5	; 21
    1080:	dd 98       	cbi	0x1b, 5	; 27
    1082:	68 c0       	rjmp	.+208    	; 0x1154 <display_set_value+0x136>
    1084:	ae 98       	cbi	0x15, 6	; 21
    1086:	aa 98       	cbi	0x15, 2	; 21
    1088:	af 98       	cbi	0x15, 7	; 21
    108a:	dd 98       	cbi	0x1b, 5	; 27
    108c:	df 98       	cbi	0x1b, 7	; 27
    108e:	62 c0       	rjmp	.+196    	; 0x1154 <display_set_value+0x136>
    1090:	ae 98       	cbi	0x15, 6	; 21
    1092:	aa 98       	cbi	0x15, 2	; 21
    1094:	af 98       	cbi	0x15, 7	; 21
    1096:	dd 98       	cbi	0x1b, 5	; 27
    1098:	df 98       	cbi	0x1b, 7	; 27
    109a:	de 98       	cbi	0x1b, 6	; 27
    109c:	5b c0       	rjmp	.+182    	; 0x1154 <display_set_value+0x136>
    109e:	ae 98       	cbi	0x15, 6	; 21
    10a0:	ad 98       	cbi	0x15, 5	; 21
    10a2:	dd 98       	cbi	0x1b, 5	; 27
    10a4:	57 c0       	rjmp	.+174    	; 0x1154 <display_set_value+0x136>
    10a6:	ae 98       	cbi	0x15, 6	; 21
    10a8:	ad 98       	cbi	0x15, 5	; 21
    10aa:	dd 98       	cbi	0x1b, 5	; 27
    10ac:	df 98       	cbi	0x1b, 7	; 27
    10ae:	de 98       	cbi	0x1b, 6	; 27
    10b0:	aa 98       	cbi	0x15, 2	; 21
    10b2:	af 98       	cbi	0x15, 7	; 21
    10b4:	4f c0       	rjmp	.+158    	; 0x1154 <display_set_value+0x136>
    10b6:	ae 98       	cbi	0x15, 6	; 21
    10b8:	ad 98       	cbi	0x15, 5	; 21
    10ba:	dd 98       	cbi	0x1b, 5	; 27
    10bc:	df 98       	cbi	0x1b, 7	; 27
    10be:	aa 98       	cbi	0x15, 2	; 21
    10c0:	af 98       	cbi	0x15, 7	; 21
    10c2:	48 c0       	rjmp	.+144    	; 0x1154 <display_set_value+0x136>
    10c4:	ae 98       	cbi	0x15, 6	; 21
    10c6:	ad 98       	cbi	0x15, 5	; 21
    10c8:	dd 98       	cbi	0x1b, 5	; 27
    10ca:	de 98       	cbi	0x1b, 6	; 27
    10cc:	aa 98       	cbi	0x15, 2	; 21
    10ce:	af 98       	cbi	0x15, 7	; 21
    10d0:	41 c0       	rjmp	.+130    	; 0x1154 <display_set_value+0x136>
    10d2:	dd 98       	cbi	0x1b, 5	; 27
    10d4:	df 98       	cbi	0x1b, 7	; 27
    10d6:	de 98       	cbi	0x1b, 6	; 27
    10d8:	aa 98       	cbi	0x15, 2	; 21
    10da:	af 98       	cbi	0x15, 7	; 21
    10dc:	3b c0       	rjmp	.+118    	; 0x1154 <display_set_value+0x136>
    10de:	ae 98       	cbi	0x15, 6	; 21
    10e0:	df 98       	cbi	0x1b, 7	; 27
    10e2:	de 98       	cbi	0x1b, 6	; 27
    10e4:	aa 98       	cbi	0x15, 2	; 21
    10e6:	36 c0       	rjmp	.+108    	; 0x1154 <display_set_value+0x136>
    10e8:	ad 98       	cbi	0x15, 5	; 21
    10ea:	dd 98       	cbi	0x1b, 5	; 27
    10ec:	df 98       	cbi	0x1b, 7	; 27
    10ee:	de 98       	cbi	0x1b, 6	; 27
    10f0:	af 98       	cbi	0x15, 7	; 21
    10f2:	30 c0       	rjmp	.+96     	; 0x1154 <display_set_value+0x136>
    10f4:	ae 98       	cbi	0x15, 6	; 21
    10f6:	df 98       	cbi	0x1b, 7	; 27
    10f8:	de 98       	cbi	0x1b, 6	; 27
    10fa:	aa 98       	cbi	0x15, 2	; 21
    10fc:	af 98       	cbi	0x15, 7	; 21
    10fe:	2a c0       	rjmp	.+84     	; 0x1154 <display_set_value+0x136>
    1100:	ae 98       	cbi	0x15, 6	; 21
    1102:	de 98       	cbi	0x1b, 6	; 27
    1104:	aa 98       	cbi	0x15, 2	; 21
    1106:	af 98       	cbi	0x15, 7	; 21
    1108:	25 c0       	rjmp	.+74     	; 0x1154 <display_set_value+0x136>
    110a:	de 98       	cbi	0x1b, 6	; 27
    110c:	af 98       	cbi	0x15, 7	; 21
    110e:	22 c0       	rjmp	.+68     	; 0x1154 <display_set_value+0x136>
    1110:	dd 98       	cbi	0x1b, 5	; 27
    1112:	df 98       	cbi	0x1b, 7	; 27
    1114:	de 98       	cbi	0x1b, 6	; 27
    1116:	af 98       	cbi	0x15, 7	; 21
    1118:	1d c0       	rjmp	.+58     	; 0x1154 <display_set_value+0x136>
    111a:	ae 98       	cbi	0x15, 6	; 21
    111c:	ad 98       	cbi	0x15, 5	; 21
    111e:	de 98       	cbi	0x1b, 6	; 27
    1120:	aa 98       	cbi	0x15, 2	; 21
    1122:	af 98       	cbi	0x15, 7	; 21
    1124:	17 c0       	rjmp	.+46     	; 0x1154 <display_set_value+0x136>
    1126:	ae 98       	cbi	0x15, 6	; 21
    1128:	dd 98       	cbi	0x1b, 5	; 27
    112a:	df 98       	cbi	0x1b, 7	; 27
    112c:	aa 98       	cbi	0x15, 2	; 21
    112e:	af 98       	cbi	0x15, 7	; 21
    1130:	11 c0       	rjmp	.+34     	; 0x1154 <display_set_value+0x136>
    1132:	df 98       	cbi	0x1b, 7	; 27
    1134:	de 98       	cbi	0x1b, 6	; 27
    1136:	aa 98       	cbi	0x15, 2	; 21
    1138:	0d c0       	rjmp	.+26     	; 0x1154 <display_set_value+0x136>
    113a:	af 98       	cbi	0x15, 7	; 21
    113c:	0b c0       	rjmp	.+22     	; 0x1154 <display_set_value+0x136>
    113e:	aa 98       	cbi	0x15, 2	; 21
    1140:	09 c0       	rjmp	.+18     	; 0x1154 <display_set_value+0x136>
    1142:	de 98       	cbi	0x1b, 6	; 27
    1144:	07 c0       	rjmp	.+14     	; 0x1154 <display_set_value+0x136>
    1146:	df 98       	cbi	0x1b, 7	; 27
    1148:	05 c0       	rjmp	.+10     	; 0x1154 <display_set_value+0x136>
    114a:	dd 98       	cbi	0x1b, 5	; 27
    114c:	03 c0       	rjmp	.+6      	; 0x1154 <display_set_value+0x136>
    114e:	ad 98       	cbi	0x15, 5	; 21
    1150:	01 c0       	rjmp	.+2      	; 0x1154 <display_set_value+0x136>
    1152:	ae 98       	cbi	0x15, 6	; 21
    1154:	88 81       	ld	r24, Y
    1156:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <displaying_value>
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	08 95       	ret

00001160 <on_display>:
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	ec 01       	movw	r28, r24
    1166:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <off_all_displays>
    116a:	ce 01       	movw	r24, r28
    116c:	0e 94 0f 08 	call	0x101e	; 0x101e <display_set_value>
    1170:	85 e0       	ldi	r24, 0x05	; 5
    1172:	c9 36       	cpi	r28, 0x69	; 105
    1174:	d8 07       	cpc	r29, r24
    1176:	29 f4       	brne	.+10     	; 0x1182 <on_display+0x22>
    1178:	92 98       	cbi	0x12, 2	; 18
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <DispD1+0x1>
    1180:	19 c0       	rjmp	.+50     	; 0x11b4 <on_display+0x54>
    1182:	85 e0       	ldi	r24, 0x05	; 5
    1184:	c5 37       	cpi	r28, 0x75	; 117
    1186:	d8 07       	cpc	r29, r24
    1188:	29 f4       	brne	.+10     	; 0x1194 <on_display+0x34>
    118a:	c7 98       	cbi	0x18, 7	; 24
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <DispD2+0x1>
    1192:	10 c0       	rjmp	.+32     	; 0x11b4 <on_display+0x54>
    1194:	85 e0       	ldi	r24, 0x05	; 5
    1196:	c7 36       	cpi	r28, 0x67	; 103
    1198:	d8 07       	cpc	r29, r24
    119a:	29 f4       	brne	.+10     	; 0x11a6 <on_display+0x46>
    119c:	ac 98       	cbi	0x15, 4	; 21
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <DispD3+0x1>
    11a4:	07 c0       	rjmp	.+14     	; 0x11b4 <on_display+0x54>
    11a6:	c3 57       	subi	r28, 0x73	; 115
    11a8:	d5 40       	sbci	r29, 0x05	; 5
    11aa:	21 f4       	brne	.+8      	; 0x11b4 <on_display+0x54>
    11ac:	ab 98       	cbi	0x15, 3	; 21
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	80 93 74 05 	sts	0x0574, r24	; 0x800574 <DispD4+0x1>
    11b4:	df 91       	pop	r29
    11b6:	cf 91       	pop	r28
    11b8:	08 95       	ret

000011ba <display_process>:
    11ba:	ef 92       	push	r14
    11bc:	ff 92       	push	r15
    11be:	1f 93       	push	r17
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	fc 01       	movw	r30, r24
    11c6:	c0 81       	ld	r28, Z
    11c8:	d1 81       	ldd	r29, Z+1	; 0x01
    11ca:	21 96       	adiw	r28, 0x01	; 1
    11cc:	d1 83       	std	Z+1, r29	; 0x01
    11ce:	c0 83       	st	Z, r28
    11d0:	9e 01       	movw	r18, r28
    11d2:	ad ec       	ldi	r26, 0xCD	; 205
    11d4:	bc ec       	ldi	r27, 0xCC	; 204
    11d6:	0e 94 a0 1f 	call	0x3f40	; 0x3f40 <__umulhisi3>
    11da:	96 95       	lsr	r25
    11dc:	87 95       	ror	r24
    11de:	96 95       	lsr	r25
    11e0:	87 95       	ror	r24
    11e2:	96 95       	lsr	r25
    11e4:	87 95       	ror	r24
    11e6:	9c 01       	movw	r18, r24
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	88 0f       	add	r24, r24
    11ee:	99 1f       	adc	r25, r25
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	88 0f       	add	r24, r24
    11f6:	99 1f       	adc	r25, r25
    11f8:	82 0f       	add	r24, r18
    11fa:	93 1f       	adc	r25, r19
    11fc:	c8 17       	cp	r28, r24
    11fe:	d9 07       	cpc	r29, r25
    1200:	01 f5       	brne	.+64     	; 0x1242 <display_process+0x88>
    1202:	7f 01       	movw	r14, r30
    1204:	10 91 0d 03 	lds	r17, 0x030D	; 0x80030d <iteration>
    1208:	14 30       	cpi	r17, 0x04	; 4
    120a:	58 f4       	brcc	.+22     	; 0x1222 <display_process+0x68>
    120c:	e1 2f       	mov	r30, r17
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	ee 0f       	add	r30, r30
    1212:	ff 1f       	adc	r31, r31
    1214:	e5 59       	subi	r30, 0x95	; 149
    1216:	fa 4f       	sbci	r31, 0xFA	; 250
    1218:	80 81       	ld	r24, Z
    121a:	91 81       	ldd	r25, Z+1	; 0x01
    121c:	0e 94 b0 08 	call	0x1160	; 0x1160 <on_display>
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <display_process+0x6c>
    1222:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <off_all_displays>
    1226:	1f 5f       	subi	r17, 0xFF	; 255
    1228:	15 30       	cpi	r17, 0x05	; 5
    122a:	19 f0       	breq	.+6      	; 0x1232 <display_process+0x78>
    122c:	10 93 0d 03 	sts	0x030D, r17	; 0x80030d <iteration>
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <display_process+0x7c>
    1232:	10 92 0d 03 	sts	0x030D, r1	; 0x80030d <iteration>
    1236:	c0 39       	cpi	r28, 0x90	; 144
    1238:	d1 40       	sbci	r29, 0x01	; 1
    123a:	19 f4       	brne	.+6      	; 0x1242 <display_process+0x88>
    123c:	f7 01       	movw	r30, r14
    123e:	11 82       	std	Z+1, r1	; 0x01
    1240:	10 82       	st	Z, r1
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	ff 90       	pop	r15
    124a:	ef 90       	pop	r14
    124c:	08 95       	ret

0000124e <disp_set_number>:
    124e:	fc 01       	movw	r30, r24
    1250:	64 36       	cpi	r22, 0x64	; 100
    1252:	f8 f4       	brcc	.+62     	; 0x1292 <disp_set_number+0x44>
    1254:	61 11       	cpse	r22, r1
    1256:	08 c0       	rjmp	.+16     	; 0x1268 <disp_set_number+0x1a>
    1258:	a0 81       	ld	r26, Z
    125a:	b1 81       	ldd	r27, Z+1	; 0x01
    125c:	1c 92       	st	X, r1
    125e:	02 80       	ldd	r0, Z+2	; 0x02
    1260:	f3 81       	ldd	r31, Z+3	; 0x03
    1262:	e0 2d       	mov	r30, r0
    1264:	10 82       	st	Z, r1
    1266:	08 95       	ret
    1268:	a0 81       	ld	r26, Z
    126a:	b1 81       	ldd	r27, Z+1	; 0x01
    126c:	9d ec       	ldi	r25, 0xCD	; 205
    126e:	69 9f       	mul	r22, r25
    1270:	91 2d       	mov	r25, r1
    1272:	11 24       	eor	r1, r1
    1274:	96 95       	lsr	r25
    1276:	96 95       	lsr	r25
    1278:	96 95       	lsr	r25
    127a:	9c 93       	st	X, r25
    127c:	02 80       	ldd	r0, Z+2	; 0x02
    127e:	f3 81       	ldd	r31, Z+3	; 0x03
    1280:	e0 2d       	mov	r30, r0
    1282:	89 2f       	mov	r24, r25
    1284:	88 0f       	add	r24, r24
    1286:	98 2f       	mov	r25, r24
    1288:	99 0f       	add	r25, r25
    128a:	99 0f       	add	r25, r25
    128c:	89 0f       	add	r24, r25
    128e:	68 1b       	sub	r22, r24
    1290:	60 83       	st	Z, r22
    1292:	08 95       	ret

00001294 <disp_set_symb>:
    1294:	fc 01       	movw	r30, r24
    1296:	60 83       	st	Z, r22
    1298:	08 95       	ret

0000129a <dip_set_value>:
    129a:	81 30       	cpi	r24, 0x01	; 1
    129c:	39 f0       	breq	.+14     	; 0x12ac <dip_set_value+0x12>
    129e:	18 f0       	brcs	.+6      	; 0x12a6 <dip_set_value+0xc>
    12a0:	82 30       	cpi	r24, 0x02	; 2
    12a2:	39 f0       	breq	.+14     	; 0x12b2 <dip_set_value+0x18>
    12a4:	08 95       	ret
    12a6:	60 93 29 03 	sts	0x0329, r22	; 0x800329 <motor_disp_value>
    12aa:	08 95       	ret
    12ac:	60 93 28 03 	sts	0x0328, r22	; 0x800328 <servo_disp_value>
    12b0:	08 95       	ret
    12b2:	60 93 28 03 	sts	0x0328, r22	; 0x800328 <servo_disp_value>
    12b6:	60 93 29 03 	sts	0x0329, r22	; 0x800329 <motor_disp_value>
    12ba:	08 95       	ret

000012bc <disp_get_state>:
    12bc:	88 23       	and	r24, r24
    12be:	19 f0       	breq	.+6      	; 0x12c6 <disp_get_state+0xa>
    12c0:	81 30       	cpi	r24, 0x01	; 1
    12c2:	29 f0       	breq	.+10     	; 0x12ce <disp_get_state+0x12>
    12c4:	08 c0       	rjmp	.+16     	; 0x12d6 <disp_get_state+0x1a>
    12c6:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	08 95       	ret
    12ce:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	08 95       	ret
    12d6:	8f ef       	ldi	r24, 0xFF	; 255
    12d8:	9f ef       	ldi	r25, 0xFF	; 255
    12da:	08 95       	ret

000012dc <disp_disable_voltage>:
    12dc:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    12e0:	86 30       	cpi	r24, 0x06	; 6
    12e2:	21 f4       	brne	.+8      	; 0x12ec <disp_disable_voltage+0x10>
    12e4:	80 91 77 05 	lds	r24, 0x0577	; 0x800577 <disp1_last_state>
    12e8:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
    12ec:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    12f0:	86 30       	cpi	r24, 0x06	; 6
    12f2:	21 f4       	brne	.+8      	; 0x12fc <disp_disable_voltage+0x20>
    12f4:	80 91 78 05 	lds	r24, 0x0578	; 0x800578 <disp2_last_state>
    12f8:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
    12fc:	08 95       	ret

000012fe <disp_set_state>:
    12fe:	81 30       	cpi	r24, 0x01	; 1
    1300:	a1 f0       	breq	.+40     	; 0x132a <disp_set_state+0x2c>
    1302:	18 f0       	brcs	.+6      	; 0x130a <disp_set_state+0xc>
    1304:	82 30       	cpi	r24, 0x02	; 2
    1306:	09 f1       	breq	.+66     	; 0x134a <disp_set_state+0x4c>
    1308:	08 95       	ret
    130a:	66 30       	cpi	r22, 0x06	; 6
    130c:	21 f4       	brne	.+8      	; 0x1316 <disp_set_state+0x18>
    130e:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    1312:	80 93 77 05 	sts	0x0577, r24	; 0x800577 <disp1_last_state>
    1316:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    131a:	86 30       	cpi	r24, 0x06	; 6
    131c:	19 f4       	brne	.+6      	; 0x1324 <disp_set_state+0x26>
    131e:	60 93 77 05 	sts	0x0577, r22	; 0x800577 <disp1_last_state>
    1322:	08 95       	ret
    1324:	60 93 66 05 	sts	0x0566, r22	; 0x800566 <segment1+0x4>
    1328:	08 95       	ret
    132a:	66 30       	cpi	r22, 0x06	; 6
    132c:	21 f4       	brne	.+8      	; 0x1336 <disp_set_state+0x38>
    132e:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    1332:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <disp2_last_state>
    1336:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    133a:	86 30       	cpi	r24, 0x06	; 6
    133c:	19 f4       	brne	.+6      	; 0x1344 <disp_set_state+0x46>
    133e:	60 93 78 05 	sts	0x0578, r22	; 0x800578 <disp2_last_state>
    1342:	08 95       	ret
    1344:	60 93 61 05 	sts	0x0561, r22	; 0x800561 <segment2+0x4>
    1348:	08 95       	ret
    134a:	66 30       	cpi	r22, 0x06	; 6
    134c:	41 f4       	brne	.+16     	; 0x135e <disp_set_state+0x60>
    134e:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    1352:	80 93 77 05 	sts	0x0577, r24	; 0x800577 <disp1_last_state>
    1356:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    135a:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <disp2_last_state>
    135e:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    1362:	86 30       	cpi	r24, 0x06	; 6
    1364:	29 f4       	brne	.+10     	; 0x1370 <disp_set_state+0x72>
    1366:	60 93 78 05 	sts	0x0578, r22	; 0x800578 <disp2_last_state>
    136a:	60 93 77 05 	sts	0x0577, r22	; 0x800577 <disp1_last_state>
    136e:	08 95       	ret
    1370:	60 93 66 05 	sts	0x0566, r22	; 0x800566 <segment1+0x4>
    1374:	60 93 61 05 	sts	0x0561, r22	; 0x800561 <segment2+0x4>
    1378:	08 95       	ret

0000137a <display_set_error>:
    137a:	95 e0       	ldi	r25, 0x05	; 5
    137c:	90 93 66 05 	sts	0x0566, r25	; 0x800566 <segment1+0x4>
    1380:	90 93 61 05 	sts	0x0561, r25	; 0x800561 <segment2+0x4>
    1384:	80 93 23 03 	sts	0x0323, r24	; 0x800323 <error_reason>
    1388:	08 95       	ret

0000138a <disp_off_segments>:
    138a:	68 ef       	ldi	r22, 0xF8	; 248
    138c:	89 e6       	ldi	r24, 0x69	; 105
    138e:	95 e0       	ldi	r25, 0x05	; 5
    1390:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    1394:	68 ef       	ldi	r22, 0xF8	; 248
    1396:	85 e7       	ldi	r24, 0x75	; 117
    1398:	95 e0       	ldi	r25, 0x05	; 5
    139a:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    139e:	68 ef       	ldi	r22, 0xF8	; 248
    13a0:	87 e6       	ldi	r24, 0x67	; 103
    13a2:	95 e0       	ldi	r25, 0x05	; 5
    13a4:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    13a8:	68 ef       	ldi	r22, 0xF8	; 248
    13aa:	83 e7       	ldi	r24, 0x73	; 115
    13ac:	95 e0       	ldi	r25, 0x05	; 5
    13ae:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    13b2:	08 95       	ret

000013b4 <disp_process>:
    13b4:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
    13b8:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
    13bc:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
    13c0:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
    13c4:	40 91 12 03 	lds	r20, 0x0312	; 0x800312 <timer_disp_process.1979>
    13c8:	50 91 13 03 	lds	r21, 0x0313	; 0x800313 <timer_disp_process.1979+0x1>
    13cc:	60 91 14 03 	lds	r22, 0x0314	; 0x800314 <timer_disp_process.1979+0x2>
    13d0:	70 91 15 03 	lds	r23, 0x0315	; 0x800315 <timer_disp_process.1979+0x3>
    13d4:	48 17       	cp	r20, r24
    13d6:	59 07       	cpc	r21, r25
    13d8:	6a 07       	cpc	r22, r26
    13da:	7b 07       	cpc	r23, r27
    13dc:	08 f0       	brcs	.+2      	; 0x13e0 <disp_process+0x2c>
    13de:	26 c1       	rjmp	.+588    	; 0x162c <disp_process+0x278>
    13e0:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    13e4:	83 30       	cpi	r24, 0x03	; 3
    13e6:	09 f4       	brne	.+2      	; 0x13ea <disp_process+0x36>
    13e8:	59 c0       	rjmp	.+178    	; 0x149c <disp_process+0xe8>
    13ea:	30 f4       	brcc	.+12     	; 0x13f8 <disp_process+0x44>
    13ec:	88 23       	and	r24, r24
    13ee:	09 f4       	brne	.+2      	; 0x13f2 <disp_process+0x3e>
    13f0:	87 c0       	rjmp	.+270    	; 0x1500 <disp_process+0x14c>
    13f2:	81 30       	cpi	r24, 0x01	; 1
    13f4:	39 f1       	breq	.+78     	; 0x1444 <disp_process+0x90>
    13f6:	8e c0       	rjmp	.+284    	; 0x1514 <disp_process+0x160>
    13f8:	85 30       	cpi	r24, 0x05	; 5
    13fa:	09 f4       	brne	.+2      	; 0x13fe <disp_process+0x4a>
    13fc:	74 c0       	rjmp	.+232    	; 0x14e6 <disp_process+0x132>
    13fe:	48 f1       	brcs	.+82     	; 0x1452 <disp_process+0x9e>
    1400:	86 30       	cpi	r24, 0x06	; 6
    1402:	09 f0       	breq	.+2      	; 0x1406 <disp_process+0x52>
    1404:	87 c0       	rjmp	.+270    	; 0x1514 <disp_process+0x160>
    1406:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <accum_get_voltage>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	48 ec       	ldi	r20, 0xC8	; 200
    1410:	52 e4       	ldi	r21, 0x42	; 66
    1412:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    1416:	0e 94 08 19 	call	0x3210	; 0x3210 <__fixsfsi>
    141a:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <voltage+0x1>
    141e:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <voltage>
    1422:	9b 01       	movw	r18, r22
    1424:	36 95       	lsr	r19
    1426:	27 95       	ror	r18
    1428:	36 95       	lsr	r19
    142a:	27 95       	ror	r18
    142c:	ab e7       	ldi	r26, 0x7B	; 123
    142e:	b4 e1       	ldi	r27, 0x14	; 20
    1430:	0e 94 a0 1f 	call	0x3f40	; 0x3f40 <__umulhisi3>
    1434:	96 95       	lsr	r25
    1436:	87 95       	ror	r24
    1438:	68 2f       	mov	r22, r24
    143a:	82 e6       	ldi	r24, 0x62	; 98
    143c:	95 e0       	ldi	r25, 0x05	; 5
    143e:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    1442:	68 c0       	rjmp	.+208    	; 0x1514 <disp_process+0x160>
    1444:	60 91 29 03 	lds	r22, 0x0329	; 0x800329 <motor_disp_value>
    1448:	82 e6       	ldi	r24, 0x62	; 98
    144a:	95 e0       	ldi	r25, 0x05	; 5
    144c:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    1450:	61 c0       	rjmp	.+194    	; 0x1514 <disp_process+0x160>
    1452:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    1456:	84 30       	cpi	r24, 0x04	; 4
    1458:	31 f0       	breq	.+12     	; 0x1466 <disp_process+0xb2>
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
    1460:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
    1464:	57 c0       	rjmp	.+174    	; 0x1514 <disp_process+0x160>
    1466:	48 51       	subi	r20, 0x18	; 24
    1468:	5c 4f       	sbci	r21, 0xFC	; 252
    146a:	6f 4f       	sbci	r22, 0xFF	; 255
    146c:	7f 4f       	sbci	r23, 0xFF	; 255
    146e:	40 93 12 03 	sts	0x0312, r20	; 0x800312 <timer_disp_process.1979>
    1472:	50 93 13 03 	sts	0x0313, r21	; 0x800313 <timer_disp_process.1979+0x1>
    1476:	60 93 14 03 	sts	0x0314, r22	; 0x800314 <timer_disp_process.1979+0x2>
    147a:	70 93 15 03 	sts	0x0315, r23	; 0x800315 <timer_disp_process.1979+0x3>
    147e:	83 e7       	ldi	r24, 0x73	; 115
    1480:	80 93 75 05 	sts	0x0575, r24	; 0x800575 <DispD2>
    1484:	81 e6       	ldi	r24, 0x61	; 97
    1486:	80 93 69 05 	sts	0x0569, r24	; 0x800569 <DispD1>
    148a:	80 e7       	ldi	r24, 0x70	; 112
    148c:	80 93 67 05 	sts	0x0567, r24	; 0x800567 <DispD3>
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
    1496:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
    149a:	08 95       	ret
    149c:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    14a0:	83 30       	cpi	r24, 0x03	; 3
    14a2:	31 f0       	breq	.+12     	; 0x14b0 <disp_process+0xfc>
    14a4:	81 e0       	ldi	r24, 0x01	; 1
    14a6:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
    14aa:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
    14ae:	32 c0       	rjmp	.+100    	; 0x1514 <disp_process+0x160>
    14b0:	48 51       	subi	r20, 0x18	; 24
    14b2:	5c 4f       	sbci	r21, 0xFC	; 252
    14b4:	6f 4f       	sbci	r22, 0xFF	; 255
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	40 93 12 03 	sts	0x0312, r20	; 0x800312 <timer_disp_process.1979>
    14bc:	50 93 13 03 	sts	0x0313, r21	; 0x800313 <timer_disp_process.1979+0x1>
    14c0:	60 93 14 03 	sts	0x0314, r22	; 0x800314 <timer_disp_process.1979+0x2>
    14c4:	70 93 15 03 	sts	0x0315, r23	; 0x800315 <timer_disp_process.1979+0x3>
    14c8:	8c e6       	ldi	r24, 0x6C	; 108
    14ca:	80 93 75 05 	sts	0x0575, r24	; 0x800575 <DispD2>
    14ce:	8f e6       	ldi	r24, 0x6F	; 111
    14d0:	80 93 69 05 	sts	0x0569, r24	; 0x800569 <DispD1>
    14d4:	80 e7       	ldi	r24, 0x70	; 112
    14d6:	80 93 67 05 	sts	0x0567, r24	; 0x800567 <DispD3>
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <segment1+0x4>
    14e0:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <segment2+0x4>
    14e4:	17 c0       	rjmp	.+46     	; 0x1514 <disp_process+0x160>
    14e6:	85 e6       	ldi	r24, 0x65	; 101
    14e8:	80 93 75 05 	sts	0x0575, r24	; 0x800575 <DispD2>
    14ec:	82 e7       	ldi	r24, 0x72	; 114
    14ee:	80 93 69 05 	sts	0x0569, r24	; 0x800569 <DispD1>
    14f2:	60 91 23 03 	lds	r22, 0x0323	; 0x800323 <error_reason>
    14f6:	8d e5       	ldi	r24, 0x5D	; 93
    14f8:	95 e0       	ldi	r25, 0x05	; 5
    14fa:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    14fe:	0a c0       	rjmp	.+20     	; 0x1514 <disp_process+0x160>
    1500:	68 ef       	ldi	r22, 0xF8	; 248
    1502:	89 e6       	ldi	r24, 0x69	; 105
    1504:	95 e0       	ldi	r25, 0x05	; 5
    1506:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    150a:	68 ef       	ldi	r22, 0xF8	; 248
    150c:	85 e7       	ldi	r24, 0x75	; 117
    150e:	95 e0       	ldi	r25, 0x05	; 5
    1510:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    1514:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    1518:	81 30       	cpi	r24, 0x01	; 1
    151a:	19 f1       	breq	.+70     	; 0x1562 <disp_process+0x1ae>
    151c:	48 f1       	brcs	.+82     	; 0x1570 <disp_process+0x1bc>
    151e:	86 30       	cpi	r24, 0x06	; 6
    1520:	19 f0       	breq	.+6      	; 0x1528 <disp_process+0x174>
    1522:	8d 30       	cpi	r24, 0x0D	; 13
    1524:	81 f1       	breq	.+96     	; 0x1586 <disp_process+0x1d2>
    1526:	6f c0       	rjmp	.+222    	; 0x1606 <disp_process+0x252>
    1528:	40 91 21 03 	lds	r20, 0x0321	; 0x800321 <voltage>
    152c:	50 91 22 03 	lds	r21, 0x0322	; 0x800322 <voltage+0x1>
    1530:	9a 01       	movw	r18, r20
    1532:	36 95       	lsr	r19
    1534:	27 95       	ror	r18
    1536:	36 95       	lsr	r19
    1538:	27 95       	ror	r18
    153a:	ab e7       	ldi	r26, 0x7B	; 123
    153c:	b4 e1       	ldi	r27, 0x14	; 20
    153e:	0e 94 a0 1f 	call	0x3f40	; 0x3f40 <__umulhisi3>
    1542:	96 95       	lsr	r25
    1544:	87 95       	ror	r24
    1546:	64 e6       	ldi	r22, 0x64	; 100
    1548:	68 9f       	mul	r22, r24
    154a:	90 01       	movw	r18, r0
    154c:	69 9f       	mul	r22, r25
    154e:	30 0d       	add	r19, r0
    1550:	11 24       	eor	r1, r1
    1552:	ba 01       	movw	r22, r20
    1554:	62 1b       	sub	r22, r18
    1556:	73 0b       	sbc	r23, r19
    1558:	8d e5       	ldi	r24, 0x5D	; 93
    155a:	95 e0       	ldi	r25, 0x05	; 5
    155c:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    1560:	52 c0       	rjmp	.+164    	; 0x1606 <disp_process+0x252>
    1562:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <servo_disp_value>
    1566:	8d e5       	ldi	r24, 0x5D	; 93
    1568:	95 e0       	ldi	r25, 0x05	; 5
    156a:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    156e:	4b c0       	rjmp	.+150    	; 0x1606 <disp_process+0x252>
    1570:	68 ef       	ldi	r22, 0xF8	; 248
    1572:	87 e6       	ldi	r24, 0x67	; 103
    1574:	95 e0       	ldi	r25, 0x05	; 5
    1576:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    157a:	68 ef       	ldi	r22, 0xF8	; 248
    157c:	83 e7       	ldi	r24, 0x73	; 115
    157e:	95 e0       	ldi	r25, 0x05	; 5
    1580:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    1584:	40 c0       	rjmp	.+128    	; 0x1606 <disp_process+0x252>
    1586:	44 ef       	ldi	r20, 0xF4	; 244
    1588:	51 e0       	ldi	r21, 0x01	; 1
    158a:	60 e0       	ldi	r22, 0x00	; 0
    158c:	70 e0       	ldi	r23, 0x00	; 0
    158e:	8c e1       	ldi	r24, 0x1C	; 28
    1590:	93 e0       	ldi	r25, 0x03	; 3
    1592:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <evTime_process_period>
    1596:	89 2b       	or	r24, r25
    1598:	b1 f1       	breq	.+108    	; 0x1606 <disp_process+0x252>
    159a:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <blink_state>
    159e:	81 11       	cpse	r24, r1
    15a0:	0e c0       	rjmp	.+28     	; 0x15be <disp_process+0x20a>
    15a2:	81 e0       	ldi	r24, 0x01	; 1
    15a4:	80 93 1b 03 	sts	0x031B, r24	; 0x80031b <blink_state>
    15a8:	67 ef       	ldi	r22, 0xF7	; 247
    15aa:	87 e6       	ldi	r24, 0x67	; 103
    15ac:	95 e0       	ldi	r25, 0x05	; 5
    15ae:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    15b2:	67 ef       	ldi	r22, 0xF7	; 247
    15b4:	83 e7       	ldi	r24, 0x73	; 115
    15b6:	95 e0       	ldi	r25, 0x05	; 5
    15b8:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    15bc:	24 c0       	rjmp	.+72     	; 0x1606 <disp_process+0x252>
    15be:	10 92 1b 03 	sts	0x031B, r1	; 0x80031b <blink_state>
    15c2:	80 91 17 03 	lds	r24, 0x0317	; 0x800317 <blink_cnt>
    15c6:	90 91 18 03 	lds	r25, 0x0318	; 0x800318 <blink_cnt+0x1>
    15ca:	a0 91 19 03 	lds	r26, 0x0319	; 0x800319 <blink_cnt+0x2>
    15ce:	b0 91 1a 03 	lds	r27, 0x031A	; 0x80031a <blink_cnt+0x3>
    15d2:	00 97       	sbiw	r24, 0x00	; 0
    15d4:	a1 05       	cpc	r26, r1
    15d6:	b1 05       	cpc	r27, r1
    15d8:	29 f4       	brne	.+10     	; 0x15e4 <disp_process+0x230>
    15da:	61 e0       	ldi	r22, 0x01	; 1
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    15e2:	11 c0       	rjmp	.+34     	; 0x1606 <disp_process+0x252>
    15e4:	01 97       	sbiw	r24, 0x01	; 1
    15e6:	a1 09       	sbc	r26, r1
    15e8:	b1 09       	sbc	r27, r1
    15ea:	80 93 17 03 	sts	0x0317, r24	; 0x800317 <blink_cnt>
    15ee:	90 93 18 03 	sts	0x0318, r25	; 0x800318 <blink_cnt+0x1>
    15f2:	a0 93 19 03 	sts	0x0319, r26	; 0x800319 <blink_cnt+0x2>
    15f6:	b0 93 1a 03 	sts	0x031A, r27	; 0x80031a <blink_cnt+0x3>
    15fa:	60 91 16 03 	lds	r22, 0x0316	; 0x800316 <second_disp_blink_val>
    15fe:	8d e5       	ldi	r24, 0x5D	; 93
    1600:	95 e0       	ldi	r25, 0x05	; 5
    1602:	0e 94 27 09 	call	0x124e	; 0x124e <disp_set_number>
    1606:	80 91 12 03 	lds	r24, 0x0312	; 0x800312 <timer_disp_process.1979>
    160a:	90 91 13 03 	lds	r25, 0x0313	; 0x800313 <timer_disp_process.1979+0x1>
    160e:	a0 91 14 03 	lds	r26, 0x0314	; 0x800314 <timer_disp_process.1979+0x2>
    1612:	b0 91 15 03 	lds	r27, 0x0315	; 0x800315 <timer_disp_process.1979+0x3>
    1616:	c2 96       	adiw	r24, 0x32	; 50
    1618:	a1 1d       	adc	r26, r1
    161a:	b1 1d       	adc	r27, r1
    161c:	80 93 12 03 	sts	0x0312, r24	; 0x800312 <timer_disp_process.1979>
    1620:	90 93 13 03 	sts	0x0313, r25	; 0x800313 <timer_disp_process.1979+0x1>
    1624:	a0 93 14 03 	sts	0x0314, r26	; 0x800314 <timer_disp_process.1979+0x2>
    1628:	b0 93 15 03 	sts	0x0315, r27	; 0x800315 <timer_disp_process.1979+0x3>
    162c:	08 95       	ret

0000162e <on_animation>:
    162e:	0f 93       	push	r16
    1630:	1f 93       	push	r17
    1632:	00 91 8a 05 	lds	r16, 0x058A	; 0x80058a <mktime+0x2>
    1636:	10 91 8b 05 	lds	r17, 0x058B	; 0x80058b <mktime+0x3>
    163a:	20 91 8c 05 	lds	r18, 0x058C	; 0x80058c <mktime+0x4>
    163e:	30 91 8d 05 	lds	r19, 0x058D	; 0x80058d <mktime+0x5>
    1642:	dc 01       	movw	r26, r24
    1644:	cb 01       	movw	r24, r22
    1646:	80 0f       	add	r24, r16
    1648:	91 1f       	adc	r25, r17
    164a:	a2 1f       	adc	r26, r18
    164c:	b3 1f       	adc	r27, r19
    164e:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <animation_time>
    1652:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <animation_time+0x1>
    1656:	a0 93 26 03 	sts	0x0326, r26	; 0x800326 <animation_time+0x2>
    165a:	b0 93 27 03 	sts	0x0327, r27	; 0x800327 <animation_time+0x3>
    165e:	62 e0       	ldi	r22, 0x02	; 2
    1660:	84 2f       	mov	r24, r20
    1662:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    1666:	1f 91       	pop	r17
    1668:	0f 91       	pop	r16
    166a:	08 95       	ret

0000166c <animation>:
    166c:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    1670:	82 30       	cpi	r24, 0x02	; 2
    1672:	29 f0       	breq	.+10     	; 0x167e <animation+0x12>
    1674:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    1678:	82 30       	cpi	r24, 0x02	; 2
    167a:	09 f0       	breq	.+2      	; 0x167e <animation+0x12>
    167c:	78 c0       	rjmp	.+240    	; 0x176e <animation+0x102>
    167e:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    1682:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    1686:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    168a:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    168e:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <timer_anim.1999>
    1692:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <timer_anim.1999+0x1>
    1696:	a0 91 10 03 	lds	r26, 0x0310	; 0x800310 <timer_anim.1999+0x2>
    169a:	b0 91 11 03 	lds	r27, 0x0311	; 0x800311 <timer_anim.1999+0x3>
    169e:	84 17       	cp	r24, r20
    16a0:	95 07       	cpc	r25, r21
    16a2:	a6 07       	cpc	r26, r22
    16a4:	b7 07       	cpc	r27, r23
    16a6:	08 f0       	brcs	.+2      	; 0x16aa <animation+0x3e>
    16a8:	62 c0       	rjmp	.+196    	; 0x176e <animation+0x102>
    16aa:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
    16ae:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
    16b2:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
    16b6:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
    16ba:	81 55       	subi	r24, 0x51	; 81
    16bc:	9f 4f       	sbci	r25, 0xFF	; 255
    16be:	af 4f       	sbci	r26, 0xFF	; 255
    16c0:	bf 4f       	sbci	r27, 0xFF	; 255
    16c2:	80 93 0e 03 	sts	0x030E, r24	; 0x80030e <timer_anim.1999>
    16c6:	90 93 0f 03 	sts	0x030F, r25	; 0x80030f <timer_anim.1999+0x1>
    16ca:	a0 93 10 03 	sts	0x0310, r26	; 0x800310 <timer_anim.1999+0x2>
    16ce:	b0 93 11 03 	sts	0x0311, r27	; 0x800311 <timer_anim.1999+0x3>
    16d2:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <segment1+0x4>
    16d6:	82 30       	cpi	r24, 0x02	; 2
    16d8:	61 f4       	brne	.+24     	; 0x16f2 <animation+0x86>
    16da:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <anim_iteration.2000>
    16de:	89 e6       	ldi	r24, 0x69	; 105
    16e0:	95 e0       	ldi	r25, 0x05	; 5
    16e2:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    16e6:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <anim_iteration.2000>
    16ea:	85 e7       	ldi	r24, 0x75	; 117
    16ec:	95 e0       	ldi	r25, 0x05	; 5
    16ee:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    16f2:	80 91 61 05 	lds	r24, 0x0561	; 0x800561 <segment2+0x4>
    16f6:	82 30       	cpi	r24, 0x02	; 2
    16f8:	61 f4       	brne	.+24     	; 0x1712 <animation+0xa6>
    16fa:	60 91 7d 00 	lds	r22, 0x007D	; 0x80007d <anim_iteration2.2001>
    16fe:	87 e6       	ldi	r24, 0x67	; 103
    1700:	95 e0       	ldi	r25, 0x05	; 5
    1702:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    1706:	60 91 7d 00 	lds	r22, 0x007D	; 0x80007d <anim_iteration2.2001>
    170a:	83 e7       	ldi	r24, 0x73	; 115
    170c:	95 e0       	ldi	r25, 0x05	; 5
    170e:	0e 94 4a 09 	call	0x1294	; 0x1294 <disp_set_symb>
    1712:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    1716:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    171a:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    171e:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    1722:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <animation_time>
    1726:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <animation_time+0x1>
    172a:	a0 91 26 03 	lds	r26, 0x0326	; 0x800326 <animation_time+0x2>
    172e:	b0 91 27 03 	lds	r27, 0x0327	; 0x800327 <animation_time+0x3>
    1732:	84 17       	cp	r24, r20
    1734:	95 07       	cpc	r25, r21
    1736:	a6 07       	cpc	r26, r22
    1738:	b7 07       	cpc	r27, r23
    173a:	28 f4       	brcc	.+10     	; 0x1746 <animation+0xda>
    173c:	61 e0       	ldi	r22, 0x01	; 1
    173e:	82 e0       	ldi	r24, 0x02	; 2
    1740:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    1744:	c5 98       	cbi	0x18, 5	; 24
    1746:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <anim_iteration.2000>
    174a:	9f 5f       	subi	r25, 0xFF	; 255
    174c:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <anim_iteration.2000>
    1750:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <anim_iteration2.2001>
    1754:	81 50       	subi	r24, 0x01	; 1
    1756:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <anim_iteration2.2001>
    175a:	9f 3f       	cpi	r25, 0xFF	; 255
    175c:	19 f4       	brne	.+6      	; 0x1764 <animation+0xf8>
    175e:	99 ef       	ldi	r25, 0xF9	; 249
    1760:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <anim_iteration.2000>
    1764:	88 3f       	cpi	r24, 0xF8	; 248
    1766:	19 f4       	brne	.+6      	; 0x176e <animation+0x102>
    1768:	8e ef       	ldi	r24, 0xFE	; 254
    176a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <anim_iteration2.2001>
    176e:	08 95       	ret

00001770 <EEPROM_write>:
    1770:	e1 99       	sbic	0x1c, 1	; 28
    1772:	fe cf       	rjmp	.-4      	; 0x1770 <EEPROM_write>
    1774:	9f bb       	out	0x1f, r25	; 31
    1776:	8e bb       	out	0x1e, r24	; 30
    1778:	6d bb       	out	0x1d, r22	; 29
    177a:	e2 9a       	sbi	0x1c, 2	; 28
    177c:	e1 9a       	sbi	0x1c, 1	; 28
    177e:	08 95       	ret

00001780 <EEPROM_read>:
    1780:	e1 99       	sbic	0x1c, 1	; 28
    1782:	fe cf       	rjmp	.-4      	; 0x1780 <EEPROM_read>
    1784:	9f bb       	out	0x1f, r25	; 31
    1786:	8e bb       	out	0x1e, r24	; 30
    1788:	e0 9a       	sbi	0x1c, 0	; 28
    178a:	8d b3       	in	r24, 0x1d	; 29
    178c:	08 95       	ret

0000178e <set_error_state>:
#define RESISTOR 1

float errorGetMotorVal(void)
{
	return motor_error_value;
}
    178e:	cf 93       	push	r28
    1790:	c8 2f       	mov	r28, r24
    1792:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    1796:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    179a:	82 60       	ori	r24, 0x02	; 2
    179c:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    17a0:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    17a4:	8c 2f       	mov	r24, r28
    17a6:	0e 94 bd 09 	call	0x137a	; 0x137a <display_set_error>
    17aa:	0e 94 40 07 	call	0xe80	; 0xe80 <dcmotor_set_error>
    17ae:	0e 94 6e 11 	call	0x22dc	; 0x22dc <servo_error>
    17b2:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <system_error>
    17b6:	c0 93 79 05 	sts	0x0579, r28	; 0x800579 <led_blink>
    17ba:	cf 91       	pop	r28
    17bc:	08 95       	ret

000017be <error_init>:
    17be:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <error_motor_state>
    17c2:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <error_motor_last_state>
    17c6:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <error_motor_status>
    17ca:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <error_servo_status>
    17ce:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <error_servo_state>
    17d2:	83 e4       	ldi	r24, 0x43	; 67
    17d4:	93 e0       	ldi	r25, 0x03	; 3
    17d6:	0e 94 56 17 	call	0x2eac	; 0x2eac <evTime_off>
    17da:	83 e3       	ldi	r24, 0x33	; 51
    17dc:	93 e0       	ldi	r25, 0x03	; 3
    17de:	0e 94 56 17 	call	0x2eac	; 0x2eac <evTime_off>
    17e2:	10 92 79 05 	sts	0x0579, r1	; 0x800579 <led_blink>
    17e6:	08 95       	ret

000017e8 <error_deinit>:
    17e8:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <error_motor_state>
    17ec:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <error_motor_last_state>
    17f0:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <error_motor_status>
    17f4:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <error_servo_status>
    17f8:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <error_servo_state>
    17fc:	83 e4       	ldi	r24, 0x43	; 67
    17fe:	93 e0       	ldi	r25, 0x03	; 3
    1800:	0e 94 56 17 	call	0x2eac	; 0x2eac <evTime_off>
    1804:	83 e3       	ldi	r24, 0x33	; 51
    1806:	93 e0       	ldi	r25, 0x03	; 3
    1808:	0e 94 56 17 	call	0x2eac	; 0x2eac <evTime_off>
    180c:	10 92 79 05 	sts	0x0579, r1	; 0x800579 <led_blink>
    1810:	08 95       	ret

00001812 <error_event>:

void error_event(void)
{
    1812:	4f 92       	push	r4
    1814:	5f 92       	push	r5
    1816:	6f 92       	push	r6
    1818:	7f 92       	push	r7
    181a:	8f 92       	push	r8
    181c:	9f 92       	push	r9
    181e:	af 92       	push	r10
    1820:	bf 92       	push	r11
    1822:	cf 92       	push	r12
    1824:	df 92       	push	r13
    1826:	ef 92       	push	r14
    1828:	ff 92       	push	r15
	static uint32_t error_event_timer;
	if (error_event_timer < mktime.ms && system_events&(1<<EV_SYSTEM_STATE))
    182a:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    182e:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    1832:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    1836:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    183a:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <error_event_timer.2069>
    183e:	90 91 30 03 	lds	r25, 0x0330	; 0x800330 <error_event_timer.2069+0x1>
    1842:	a0 91 31 03 	lds	r26, 0x0331	; 0x800331 <error_event_timer.2069+0x2>
    1846:	b0 91 32 03 	lds	r27, 0x0332	; 0x800332 <error_event_timer.2069+0x3>
    184a:	84 17       	cp	r24, r20
    184c:	95 07       	cpc	r25, r21
    184e:	a6 07       	cpc	r26, r22
    1850:	b7 07       	cpc	r27, r23
    1852:	08 f0       	brcs	.+2      	; 0x1856 <error_event+0x44>
    1854:	77 c2       	rjmp	.+1262   	; 0x1d44 <error_event+0x532>
    1856:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    185a:	80 ff       	sbrs	r24, 0
    185c:	73 c2       	rjmp	.+1254   	; 0x1d44 <error_event+0x532>
	{
		error_event_timer = mktime.ms + 500;
    185e:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    1862:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    1866:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    186a:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    186e:	4c 50       	subi	r20, 0x0C	; 12
    1870:	5e 4f       	sbci	r21, 0xFE	; 254
    1872:	6f 4f       	sbci	r22, 0xFF	; 255
    1874:	7f 4f       	sbci	r23, 0xFF	; 255
    1876:	40 93 2f 03 	sts	0x032F, r20	; 0x80032f <error_event_timer.2069>
    187a:	50 93 30 03 	sts	0x0330, r21	; 0x800330 <error_event_timer.2069+0x1>
    187e:	60 93 31 03 	sts	0x0331, r22	; 0x800331 <error_event_timer.2069+0x2>
    1882:	70 93 32 03 	sts	0x0332, r23	; 0x800332 <error_event_timer.2069+0x3>
		if (system_events&(1<<EV_SYSTEM_ERROR_MOTOR)) return;
    1886:	81 fd       	sbrc	r24, 1
    1888:	5d c2       	rjmp	.+1210   	; 0x1d44 <error_event+0x532>
		///////////////////////////////////////////////////////////////////////////////////////////
		//MOTOR
		float volt = accum_get_voltage();
    188a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <accum_get_voltage>
    188e:	4b 01       	movw	r8, r22
    1890:	5c 01       	movw	r10, r24
		motor_error_value = count_motor_error_value(dcmotor_get_pwm(), volt);
    1892:	0e 94 3c 07 	call	0xe78	; 0xe78 <dcmotor_get_pwm>

#define REZYSTANCJA_WIRNIKA 3

static float count_motor_error_value(uint16_t x, float volt_accum)
{
	float volt_in_motor = volt_accum * x/100;
    1896:	bc 01       	movw	r22, r24
    1898:	80 e0       	ldi	r24, 0x00	; 0
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	0e 94 3e 19 	call	0x327c	; 0x327c <__floatunsisf>
    18a0:	6b 01       	movw	r12, r22
    18a2:	7c 01       	movw	r14, r24
	float volt_in_motor_nominal = 14.2 * x/100;
	float temp = 0.011*pow(x, 1.6281) + (volt_in_motor - volt_in_motor_nominal)/REZYSTANCJA_WIRNIKA;
    18a4:	25 e9       	ldi	r18, 0x95	; 149
    18a6:	35 e6       	ldi	r19, 0x65	; 101
    18a8:	40 ed       	ldi	r20, 0xD0	; 208
    18aa:	5f e3       	ldi	r21, 0x3F	; 63
    18ac:	0e 94 62 1a 	call	0x34c4	; 0x34c4 <pow>
    18b0:	2b 01       	movw	r4, r22
    18b2:	3c 01       	movw	r6, r24
    18b4:	a7 01       	movw	r20, r14
    18b6:	96 01       	movw	r18, r12
    18b8:	c5 01       	movw	r24, r10
    18ba:	b4 01       	movw	r22, r8
    18bc:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	48 ec       	ldi	r20, 0xC8	; 200
    18c6:	52 e4       	ldi	r21, 0x42	; 66
    18c8:	0e 94 96 18 	call	0x312c	; 0x312c <__divsf3>
    18cc:	4b 01       	movw	r8, r22
    18ce:	5c 01       	movw	r10, r24
    18d0:	23 e3       	ldi	r18, 0x33	; 51
    18d2:	33 e3       	ldi	r19, 0x33	; 51
    18d4:	43 e6       	ldi	r20, 0x63	; 99
    18d6:	51 e4       	ldi	r21, 0x41	; 65
    18d8:	c7 01       	movw	r24, r14
    18da:	b6 01       	movw	r22, r12
    18dc:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	48 ec       	ldi	r20, 0xC8	; 200
    18e6:	52 e4       	ldi	r21, 0x42	; 66
    18e8:	0e 94 96 18 	call	0x312c	; 0x312c <__divsf3>
    18ec:	9b 01       	movw	r18, r22
    18ee:	ac 01       	movw	r20, r24
    18f0:	c5 01       	movw	r24, r10
    18f2:	b4 01       	movw	r22, r8
    18f4:	0e 94 29 18 	call	0x3052	; 0x3052 <__subsf3>
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	40 e4       	ldi	r20, 0x40	; 64
    18fe:	50 e4       	ldi	r21, 0x40	; 64
    1900:	0e 94 96 18 	call	0x312c	; 0x312c <__divsf3>
    1904:	4b 01       	movw	r8, r22
    1906:	5c 01       	movw	r10, r24
    1908:	28 e5       	ldi	r18, 0x58	; 88
    190a:	39 e3       	ldi	r19, 0x39	; 57
    190c:	44 e3       	ldi	r20, 0x34	; 52
    190e:	5c e3       	ldi	r21, 0x3C	; 60
    1910:	c3 01       	movw	r24, r6
    1912:	b2 01       	movw	r22, r4
    1914:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    1918:	9b 01       	movw	r18, r22
    191a:	ac 01       	movw	r20, r24
    191c:	c5 01       	movw	r24, r10
    191e:	b4 01       	movw	r22, r8
    1920:	0e 94 2a 18 	call	0x3054	; 0x3054 <__addsf3>
    1924:	4b 01       	movw	r8, r22
    1926:	5c 01       	movw	r10, r24
		error_event_timer = mktime.ms + 500;
		if (system_events&(1<<EV_SYSTEM_ERROR_MOTOR)) return;
		///////////////////////////////////////////////////////////////////////////////////////////
		//MOTOR
		float volt = accum_get_voltage();
		motor_error_value = count_motor_error_value(dcmotor_get_pwm(), volt);
    1928:	60 91 4e 05 	lds	r22, 0x054E	; 0x80054e <menu_param>
    192c:	70 e0       	ldi	r23, 0x00	; 0
    192e:	62 53       	subi	r22, 0x32	; 50
    1930:	71 09       	sbc	r23, r1
    1932:	07 2e       	mov	r0, r23
    1934:	00 0c       	add	r0, r0
    1936:	88 0b       	sbc	r24, r24
    1938:	99 0b       	sbc	r25, r25
    193a:	0e 94 40 19 	call	0x3280	; 0x3280 <__floatsisf>
    193e:	a7 01       	movw	r20, r14
    1940:	96 01       	movw	r18, r12
    1942:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	48 ec       	ldi	r20, 0xC8	; 200
    194c:	52 e4       	ldi	r21, 0x42	; 66
    194e:	0e 94 96 18 	call	0x312c	; 0x312c <__divsf3>
    1952:	a5 01       	movw	r20, r10
    1954:	94 01       	movw	r18, r8
    1956:	0e 94 2a 18 	call	0x3054	; 0x3054 <__addsf3>
    195a:	60 93 3c 03 	sts	0x033C, r22	; 0x80033c <motor_error_value>
    195e:	70 93 3d 03 	sts	0x033D, r23	; 0x80033d <motor_error_value+0x1>
    1962:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <motor_error_value+0x2>
    1966:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <motor_error_value+0x3>
		uint16_t motor_adc_filterd = measure_get_filtered_value(MEAS_MOTOR);
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	0e 94 66 10 	call	0x20cc	; 0x20cc <measure_get_filtered_value>
		float current = measure_get_current(MEAS_MOTOR, MOTOR_RESISTOR);
    1970:	42 e0       	ldi	r20, 0x02	; 2
    1972:	5b e2       	ldi	r21, 0x2B	; 43
    1974:	67 e0       	ldi	r22, 0x07	; 7
    1976:	7d e3       	ldi	r23, 0x3D	; 61
    1978:	80 e0       	ldi	r24, 0x00	; 0
    197a:	0e 94 7f 10 	call	0x20fe	; 0x20fe <measure_get_current>
		//debug_msg("MOTOR ADC: %d, current_max: %f, current: %f\n", motor_adc_filterd, motor_error_value, current);
		if (current > motor_error_value && dcmotor_is_on()) //servo_vibro_value*5
    197e:	20 91 3c 03 	lds	r18, 0x033C	; 0x80033c <motor_error_value>
    1982:	30 91 3d 03 	lds	r19, 0x033D	; 0x80033d <motor_error_value+0x1>
    1986:	40 91 3e 03 	lds	r20, 0x033E	; 0x80033e <motor_error_value+0x2>
    198a:	50 91 3f 03 	lds	r21, 0x033F	; 0x80033f <motor_error_value+0x3>
    198e:	0e 94 f0 19 	call	0x33e0	; 0x33e0 <__gesf2>
    1992:	18 16       	cp	r1, r24
    1994:	6c f4       	brge	.+26     	; 0x19b0 <error_event+0x19e>
    1996:	0e 94 f7 06 	call	0xdee	; 0xdee <dcmotor_is_on>
    199a:	89 2b       	or	r24, r25
    199c:	49 f0       	breq	.+18     	; 0x19b0 <error_event+0x19e>
		{
			error_motor_status = 1;
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <error_motor_status>
		}
		else
		{
			error_motor_status = 0;
		}
		if (menu_param.disable_error == 1) {
    19a4:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <menu_param+0x2>
    19a8:	81 30       	cpi	r24, 0x01	; 1
    19aa:	09 f4       	brne	.+2      	; 0x19ae <error_event+0x19c>
    19ac:	a6 c1       	rjmp	.+844    	; 0x1cfa <error_event+0x4e8>
    19ae:	ca c1       	rjmp	.+916    	; 0x1d44 <error_event+0x532>
		{
			error_motor_status = 1;
		}
		else
		{
			error_motor_status = 0;
    19b0:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <error_motor_status>
		}
		if (menu_param.disable_error == 1) {
    19b4:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <menu_param+0x2>
    19b8:	81 30       	cpi	r24, 0x01	; 1
    19ba:	09 f0       	breq	.+2      	; 0x19be <error_event+0x1ac>
    19bc:	c3 c1       	rjmp	.+902    	; 0x1d44 <error_event+0x532>
    19be:	b1 c1       	rjmp	.+866    	; 0x1d22 <error_event+0x510>
			if (error_motor_status == 1)
			{
				switch(error_motor_state)
				{
					case ERR_M_OK:
						error_motor_state = ERR_M_WAIT;
    19c0:	81 e0       	ldi	r24, 0x01	; 1
    19c2:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
						debug_msg("ERROR STATUS: ERR_M_WAIT\n\r");
    19c6:	87 ed       	ldi	r24, 0xD7	; 215
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	9f 93       	push	r25
    19cc:	8f 93       	push	r24
    19ce:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
						evTime_start(&motor_timer, count_motor_timeout_wait(dcmotor_get_pwm()));
    19d2:	0e 94 3c 07 	call	0xe78	; 0xe78 <dcmotor_get_pwm>
	return temp;
}

static uint16_t count_motor_timeout_wait(uint16_t x)
{
	uint16_t timeout = 5000 - x*30;
    19d6:	2e e1       	ldi	r18, 0x1E	; 30
    19d8:	ac 01       	movw	r20, r24
    19da:	24 9f       	mul	r18, r20
    19dc:	c0 01       	movw	r24, r0
    19de:	25 9f       	mul	r18, r21
    19e0:	90 0d       	add	r25, r0
    19e2:	11 24       	eor	r1, r1
    19e4:	48 e8       	ldi	r20, 0x88	; 136
    19e6:	53 e1       	ldi	r21, 0x13	; 19
    19e8:	7a 01       	movw	r14, r20
    19ea:	e8 1a       	sub	r14, r24
    19ec:	f9 0a       	sbc	r15, r25
	debug_msg("count_motor_timeout_wait: %d\n\r", timeout);
    19ee:	ff 92       	push	r15
    19f0:	ef 92       	push	r14
    19f2:	82 ef       	ldi	r24, 0xF2	; 242
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	9f 93       	push	r25
    19f8:	8f 93       	push	r24
    19fa:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
				switch(error_motor_state)
				{
					case ERR_M_OK:
						error_motor_state = ERR_M_WAIT;
						debug_msg("ERROR STATUS: ERR_M_WAIT\n\r");
						evTime_start(&motor_timer, count_motor_timeout_wait(dcmotor_get_pwm()));
    19fe:	a7 01       	movw	r20, r14
    1a00:	60 e0       	ldi	r22, 0x00	; 0
    1a02:	70 e0       	ldi	r23, 0x00	; 0
    1a04:	83 e4       	ldi	r24, 0x43	; 67
    1a06:	93 e0       	ldi	r25, 0x03	; 3
    1a08:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
					break;
    1a0c:	0f 90       	pop	r0
    1a0e:	0f 90       	pop	r0
    1a10:	0f 90       	pop	r0
    1a12:	0f 90       	pop	r0
    1a14:	0f 90       	pop	r0
    1a16:	0f 90       	pop	r0
    1a18:	ba c0       	rjmp	.+372    	; 0x1b8e <error_event+0x37c>
					case ERR_M_WAIT:
						if (evTime_check(&motor_timer))
    1a1a:	83 e4       	ldi	r24, 0x43	; 67
    1a1c:	93 e0       	ldi	r25, 0x03	; 3
    1a1e:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1a22:	89 2b       	or	r24, r25
    1a24:	09 f4       	brne	.+2      	; 0x1a28 <error_event+0x216>
    1a26:	b3 c0       	rjmp	.+358    	; 0x1b8e <error_event+0x37c>
						{
							dcmotor_set_try();
    1a28:	0e 94 4e 07 	call	0xe9c	; 0xe9c <dcmotor_set_try>
							evTime_start(&motor_timer, count_motor_timeout_axelerate(dcmotor_get_pwm()));
    1a2c:	0e 94 3c 07 	call	0xe78	; 0xe78 <dcmotor_get_pwm>
	return timeout; //5000[ms] - pwm*30
}

static uint16_t count_motor_timeout_axelerate(uint16_t x)
{
	uint16_t timeout = 5000 - x*30;
    1a30:	2e e1       	ldi	r18, 0x1E	; 30
    1a32:	ac 01       	movw	r20, r24
    1a34:	24 9f       	mul	r18, r20
    1a36:	c0 01       	movw	r24, r0
    1a38:	25 9f       	mul	r18, r21
    1a3a:	90 0d       	add	r25, r0
    1a3c:	11 24       	eor	r1, r1
    1a3e:	48 e8       	ldi	r20, 0x88	; 136
    1a40:	53 e1       	ldi	r21, 0x13	; 19
    1a42:	7a 01       	movw	r14, r20
    1a44:	e8 1a       	sub	r14, r24
    1a46:	f9 0a       	sbc	r15, r25
	debug_msg("count_motor_timeout_axelerate: %d\n\r", timeout);
    1a48:	ff 92       	push	r15
    1a4a:	ef 92       	push	r14
    1a4c:	81 e1       	ldi	r24, 0x11	; 17
    1a4e:	91 e0       	ldi	r25, 0x01	; 1
    1a50:	9f 93       	push	r25
    1a52:	8f 93       	push	r24
    1a54:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
					break;
					case ERR_M_WAIT:
						if (evTime_check(&motor_timer))
						{
							dcmotor_set_try();
							evTime_start(&motor_timer, count_motor_timeout_axelerate(dcmotor_get_pwm()));
    1a58:	a7 01       	movw	r20, r14
    1a5a:	60 e0       	ldi	r22, 0x00	; 0
    1a5c:	70 e0       	ldi	r23, 0x00	; 0
    1a5e:	83 e4       	ldi	r24, 0x43	; 67
    1a60:	93 e0       	ldi	r25, 0x03	; 3
    1a62:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
							error_motor_state = ERR_M_AXELERATE;
    1a66:	82 e0       	ldi	r24, 0x02	; 2
    1a68:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
							debug_msg("ERROR STATUS: ERR_M_AXELERATE\n\r");
    1a6c:	85 e3       	ldi	r24, 0x35	; 53
    1a6e:	91 e0       	ldi	r25, 0x01	; 1
    1a70:	9f 93       	push	r25
    1a72:	8f 93       	push	r24
    1a74:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1a78:	0f 90       	pop	r0
    1a7a:	0f 90       	pop	r0
    1a7c:	0f 90       	pop	r0
    1a7e:	0f 90       	pop	r0
    1a80:	0f 90       	pop	r0
    1a82:	0f 90       	pop	r0
    1a84:	84 c0       	rjmp	.+264    	; 0x1b8e <error_event+0x37c>
						}
					break;
					case ERR_M_AXELERATE:
						if (evTime_check(&motor_timer))
    1a86:	83 e4       	ldi	r24, 0x43	; 67
    1a88:	93 e0       	ldi	r25, 0x03	; 3
    1a8a:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1a8e:	89 2b       	or	r24, r25
    1a90:	09 f4       	brne	.+2      	; 0x1a94 <error_event+0x282>
    1a92:	7d c0       	rjmp	.+250    	; 0x1b8e <error_event+0x37c>
						{
							error_motor_state = ERR_M_ERROR;
    1a94:	83 e0       	ldi	r24, 0x03	; 3
    1a96:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
							debug_msg("ERROR STATUS: ERR_M_ERROR\n\r");
    1a9a:	85 e5       	ldi	r24, 0x55	; 85
    1a9c:	91 e0       	ldi	r25, 0x01	; 1
    1a9e:	9f 93       	push	r25
    1aa0:	8f 93       	push	r24
    1aa2:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1aa6:	0f 90       	pop	r0
    1aa8:	0f 90       	pop	r0
    1aaa:	71 c0       	rjmp	.+226    	; 0x1b8e <error_event+0x37c>
						}
					break;
					case ERR_M_ERROR:
						set_error_state(ERR_REASON_MOTOR);
    1aac:	81 e0       	ldi	r24, 0x01	; 1
    1aae:	0e 94 c7 0b 	call	0x178e	; 0x178e <set_error_state>
					break;
    1ab2:	6d c0       	rjmp	.+218    	; 0x1b8e <error_event+0x37c>
					case ERR_M_EXIT:
						if (evTime_check(&motor_timer))
    1ab4:	83 e4       	ldi	r24, 0x43	; 67
    1ab6:	93 e0       	ldi	r25, 0x03	; 3
    1ab8:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1abc:	89 2b       	or	r24, r25
    1abe:	09 f4       	brne	.+2      	; 0x1ac2 <error_event+0x2b0>
    1ac0:	66 c0       	rjmp	.+204    	; 0x1b8e <error_event+0x37c>
						{
							evTime_start(&motor_timer, ERROR_M_TIME_EXIT);
    1ac2:	40 ed       	ldi	r20, 0xD0	; 208
    1ac4:	57 e0       	ldi	r21, 0x07	; 7
    1ac6:	60 e0       	ldi	r22, 0x00	; 0
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	83 e4       	ldi	r24, 0x43	; 67
    1acc:	93 e0       	ldi	r25, 0x03	; 3
    1ace:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
							error_motor_state = error_motor_last_state;
    1ad2:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <error_motor_last_state>
    1ad6:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
							debug_msg("ERROR STATUS: go to last before wait\n\r");
    1ada:	81 e7       	ldi	r24, 0x71	; 113
    1adc:	91 e0       	ldi	r25, 0x01	; 1
    1ade:	9f 93       	push	r25
    1ae0:	8f 93       	push	r24
    1ae2:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1ae6:	0f 90       	pop	r0
    1ae8:	0f 90       	pop	r0
    1aea:	51 c0       	rjmp	.+162    	; 0x1b8e <error_event+0x37c>
				switch(error_motor_state)
				{
					case ERR_M_OK:
					break;
					case ERR_M_WAIT:
					if (evTime_check(&motor_timer))
    1aec:	83 e4       	ldi	r24, 0x43	; 67
    1aee:	93 e0       	ldi	r25, 0x03	; 3
    1af0:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1af4:	89 2b       	or	r24, r25
    1af6:	09 f4       	brne	.+2      	; 0x1afa <error_event+0x2e8>
    1af8:	4a c0       	rjmp	.+148    	; 0x1b8e <error_event+0x37c>
					{
						evTime_start(&motor_timer, ERROR_M_TIME_EXIT);
    1afa:	40 ed       	ldi	r20, 0xD0	; 208
    1afc:	57 e0       	ldi	r21, 0x07	; 7
    1afe:	60 e0       	ldi	r22, 0x00	; 0
    1b00:	70 e0       	ldi	r23, 0x00	; 0
    1b02:	83 e4       	ldi	r24, 0x43	; 67
    1b04:	93 e0       	ldi	r25, 0x03	; 3
    1b06:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
						error_motor_state = ERR_M_EXIT;
    1b0a:	84 e0       	ldi	r24, 0x04	; 4
    1b0c:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
						error_motor_last_state = ERR_M_WAIT;
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <error_motor_last_state>
						debug_msg("ERROR STATUS: ERR_M_EXIT\n\r");
    1b16:	88 e9       	ldi	r24, 0x98	; 152
    1b18:	91 e0       	ldi	r25, 0x01	; 1
    1b1a:	9f 93       	push	r25
    1b1c:	8f 93       	push	r24
    1b1e:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1b22:	0f 90       	pop	r0
    1b24:	0f 90       	pop	r0
    1b26:	33 c0       	rjmp	.+102    	; 0x1b8e <error_event+0x37c>
					}
					break;
					case ERR_M_AXELERATE:
					if (evTime_check(&motor_timer))
    1b28:	83 e4       	ldi	r24, 0x43	; 67
    1b2a:	93 e0       	ldi	r25, 0x03	; 3
    1b2c:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1b30:	89 2b       	or	r24, r25
    1b32:	69 f1       	breq	.+90     	; 0x1b8e <error_event+0x37c>
					{
						evTime_start(&motor_timer, ERROR_M_TIME_EXIT);
    1b34:	40 ed       	ldi	r20, 0xD0	; 208
    1b36:	57 e0       	ldi	r21, 0x07	; 7
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	70 e0       	ldi	r23, 0x00	; 0
    1b3c:	83 e4       	ldi	r24, 0x43	; 67
    1b3e:	93 e0       	ldi	r25, 0x03	; 3
    1b40:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
						dcmotor_set_normal_state();
    1b44:	0e 94 58 07 	call	0xeb0	; 0xeb0 <dcmotor_set_normal_state>
						error_motor_state = ERR_M_EXIT;
    1b48:	84 e0       	ldi	r24, 0x04	; 4
    1b4a:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <error_motor_state>
						error_motor_last_state = ERR_M_AXELERATE;
    1b4e:	82 e0       	ldi	r24, 0x02	; 2
    1b50:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <error_motor_last_state>
						debug_msg("ERROR STATUS: ERR_M_EXIT\n\r");
    1b54:	88 e9       	ldi	r24, 0x98	; 152
    1b56:	91 e0       	ldi	r25, 0x01	; 1
    1b58:	9f 93       	push	r25
    1b5a:	8f 93       	push	r24
    1b5c:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1b60:	0f 90       	pop	r0
    1b62:	0f 90       	pop	r0
    1b64:	14 c0       	rjmp	.+40     	; 0x1b8e <error_event+0x37c>
					}
					break;
					case ERR_M_ERROR:
						set_error_state(ERR_REASON_MOTOR);
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	0e 94 c7 0b 	call	0x178e	; 0x178e <set_error_state>
					break;
    1b6c:	10 c0       	rjmp	.+32     	; 0x1b8e <error_event+0x37c>
					case ERR_M_EXIT:
					if (evTime_check(&motor_timer))
    1b6e:	83 e4       	ldi	r24, 0x43	; 67
    1b70:	93 e0       	ldi	r25, 0x03	; 3
    1b72:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1b76:	89 2b       	or	r24, r25
    1b78:	51 f0       	breq	.+20     	; 0x1b8e <error_event+0x37c>
					{
						debug_msg("ERROR STATUS: ERR_M_OK\n\r");
    1b7a:	83 eb       	ldi	r24, 0xB3	; 179
    1b7c:	91 e0       	ldi	r25, 0x01	; 1
    1b7e:	9f 93       	push	r25
    1b80:	8f 93       	push	r24
    1b82:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
						error_motor_state = ERR_M_OK;
    1b86:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <error_motor_state>
    1b8a:	0f 90       	pop	r0
    1b8c:	0f 90       	pop	r0
			}
			#endif
		} /* Disable error */
		//////////////////////////////////////////////////////////////////////////////////////
		// SERVO
		if (menu_param.disable_error == 1) {
    1b8e:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <menu_param+0x2>
    1b92:	81 30       	cpi	r24, 0x01	; 1
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <error_event+0x386>
    1b96:	d6 c0       	rjmp	.+428    	; 0x1d44 <error_event+0x532>
			#if CONFIG_USE_ERROR_SERVO
			servo_error_value = count_servo_error_value();
    1b98:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <menu_param>
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	c2 96       	adiw	r24, 0x32	; 50
    1ba0:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <servo_error_value+0x1>
    1ba4:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <servo_error_value>
			if (measure_get_filtered_value(MEAS_SERVO) > servo_error_value) //servo_vibro_value*5
    1ba8:	81 e0       	ldi	r24, 0x01	; 1
    1baa:	0e 94 66 10 	call	0x20cc	; 0x20cc <measure_get_filtered_value>
    1bae:	20 91 3a 03 	lds	r18, 0x033A	; 0x80033a <servo_error_value>
    1bb2:	30 91 3b 03 	lds	r19, 0x033B	; 0x80033b <servo_error_value+0x1>
    1bb6:	28 17       	cp	r18, r24
    1bb8:	39 07       	cpc	r19, r25
    1bba:	d8 f4       	brcc	.+54     	; 0x1bf2 <error_event+0x3e0>
			{
				debug_msg("servo_error_value: %d\n", servo_error_value);
    1bbc:	3f 93       	push	r19
    1bbe:	2f 93       	push	r18
    1bc0:	8c ec       	ldi	r24, 0xCC	; 204
    1bc2:	91 e0       	ldi	r25, 0x01	; 1
    1bc4:	9f 93       	push	r25
    1bc6:	8f 93       	push	r24
    1bc8:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
				error_servo_status = 1;
    1bcc:	81 e0       	ldi	r24, 0x01	; 1
    1bce:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <error_servo_status>
				error_servo_status = 0;
			}
		
			if (error_servo_status == 1)
			{
				switch(error_servo_state)
    1bd2:	0f 90       	pop	r0
    1bd4:	0f 90       	pop	r0
    1bd6:	0f 90       	pop	r0
    1bd8:	0f 90       	pop	r0
    1bda:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <error_servo_state>
    1bde:	81 30       	cpi	r24, 0x01	; 1
    1be0:	51 f1       	breq	.+84     	; 0x1c36 <error_event+0x424>
    1be2:	a8 f0       	brcs	.+42     	; 0x1c0e <error_event+0x3fc>
    1be4:	82 30       	cpi	r24, 0x02	; 2
    1be6:	09 f4       	brne	.+2      	; 0x1bea <error_event+0x3d8>
    1be8:	4b c0       	rjmp	.+150    	; 0x1c80 <error_event+0x46e>
    1bea:	83 30       	cpi	r24, 0x03	; 3
    1bec:	09 f4       	brne	.+2      	; 0x1bf0 <error_event+0x3de>
    1bee:	52 c0       	rjmp	.+164    	; 0x1c94 <error_event+0x482>
    1bf0:	a9 c0       	rjmp	.+338    	; 0x1d44 <error_event+0x532>
				debug_msg("servo_error_value: %d\n", servo_error_value);
				error_servo_status = 1;
			}
			else
			{
				error_servo_status = 0;
    1bf2:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <error_servo_status>
				} //switch
			}// if (error_servo_status == 1)
			else
			{
				//toDo
				switch(error_servo_state)
    1bf6:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <error_servo_state>
    1bfa:	82 30       	cpi	r24, 0x02	; 2
    1bfc:	09 f4       	brne	.+2      	; 0x1c00 <error_event+0x3ee>
    1bfe:	68 c0       	rjmp	.+208    	; 0x1cd0 <error_event+0x4be>
    1c00:	83 30       	cpi	r24, 0x03	; 3
    1c02:	09 f4       	brne	.+2      	; 0x1c06 <error_event+0x3f4>
    1c04:	76 c0       	rjmp	.+236    	; 0x1cf2 <error_event+0x4e0>
    1c06:	81 30       	cpi	r24, 0x01	; 1
    1c08:	09 f0       	breq	.+2      	; 0x1c0c <error_event+0x3fa>
    1c0a:	9c c0       	rjmp	.+312    	; 0x1d44 <error_event+0x532>
    1c0c:	47 c0       	rjmp	.+142    	; 0x1c9c <error_event+0x48a>
			if (error_servo_status == 1)
			{
				switch(error_servo_state)
				{
					case ERR_S_OK:
						error_servo_state = ERR_S_WAIT;
    1c0e:	81 e0       	ldi	r24, 0x01	; 1
    1c10:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <error_servo_state>
						debug_msg("ERROR STATUS: ERR_S_WAIT\n\r");
    1c14:	83 ee       	ldi	r24, 0xE3	; 227
    1c16:	91 e0       	ldi	r25, 0x01	; 1
    1c18:	9f 93       	push	r25
    1c1a:	8f 93       	push	r24
    1c1c:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
						evTime_start(&servo_timer, SERVO_WAIT_TO_TRY);
    1c20:	44 ef       	ldi	r20, 0xF4	; 244
    1c22:	51 e0       	ldi	r21, 0x01	; 1
    1c24:	60 e0       	ldi	r22, 0x00	; 0
    1c26:	70 e0       	ldi	r23, 0x00	; 0
    1c28:	83 e3       	ldi	r24, 0x33	; 51
    1c2a:	93 e0       	ldi	r25, 0x03	; 3
    1c2c:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
					break;
    1c30:	0f 90       	pop	r0
    1c32:	0f 90       	pop	r0
    1c34:	87 c0       	rjmp	.+270    	; 0x1d44 <error_event+0x532>
					case ERR_S_WAIT:
						if (evTime_check(&servo_timer))
    1c36:	83 e3       	ldi	r24, 0x33	; 51
    1c38:	93 e0       	ldi	r25, 0x03	; 3
    1c3a:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1c3e:	89 2b       	or	r24, r25
    1c40:	09 f4       	brne	.+2      	; 0x1c44 <error_event+0x432>
    1c42:	80 c0       	rjmp	.+256    	; 0x1d44 <error_event+0x532>
						{
							if (servo_get_try_cnt() > SERVO_TRY_CNT)
    1c44:	0e 94 db 11 	call	0x23b6	; 0x23b6 <servo_get_try_cnt>
    1c48:	04 97       	sbiw	r24, 0x04	; 4
    1c4a:	24 f0       	brlt	.+8      	; 0x1c54 <error_event+0x442>
							{
								error_servo_state = ERR_S_ERROR;
    1c4c:	83 e0       	ldi	r24, 0x03	; 3
    1c4e:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <error_servo_state>
								break;
    1c52:	78 c0       	rjmp	.+240    	; 0x1d44 <error_event+0x532>
							}
							evTime_start(&servo_timer, SERVO_WAIT_AFTER_TRY);
    1c54:	4c ed       	ldi	r20, 0xDC	; 220
    1c56:	55 e0       	ldi	r21, 0x05	; 5
    1c58:	60 e0       	ldi	r22, 0x00	; 0
    1c5a:	70 e0       	ldi	r23, 0x00	; 0
    1c5c:	83 e3       	ldi	r24, 0x33	; 51
    1c5e:	93 e0       	ldi	r25, 0x03	; 3
    1c60:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
							error_servo_state = ERR_S_TRY;
    1c64:	82 e0       	ldi	r24, 0x02	; 2
    1c66:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <error_servo_state>
							servo_enable_try();
    1c6a:	0e 94 cf 11 	call	0x239e	; 0x239e <servo_enable_try>
							debug_msg("ERROR STATUS: ERR_S_TRY\n\r");
    1c6e:	8e ef       	ldi	r24, 0xFE	; 254
    1c70:	91 e0       	ldi	r25, 0x01	; 1
    1c72:	9f 93       	push	r25
    1c74:	8f 93       	push	r24
    1c76:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1c7a:	0f 90       	pop	r0
    1c7c:	0f 90       	pop	r0
    1c7e:	62 c0       	rjmp	.+196    	; 0x1d44 <error_event+0x532>
						}
					break;
					case ERR_S_TRY:
						if (evTime_check(&servo_timer))
    1c80:	83 e3       	ldi	r24, 0x33	; 51
    1c82:	93 e0       	ldi	r25, 0x03	; 3
    1c84:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1c88:	89 2b       	or	r24, r25
    1c8a:	09 f4       	brne	.+2      	; 0x1c8e <error_event+0x47c>
    1c8c:	5b c0       	rjmp	.+182    	; 0x1d44 <error_event+0x532>
						{
							error_servo_state = ERR_S_OK;
    1c8e:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <error_servo_state>
    1c92:	58 c0       	rjmp	.+176    	; 0x1d44 <error_event+0x532>
						}
					break;
					case ERR_S_ERROR:
						set_error_state(ERR_REASON_SERVO);
    1c94:	82 e0       	ldi	r24, 0x02	; 2
    1c96:	0e 94 c7 0b 	call	0x178e	; 0x178e <set_error_state>
					break;
    1c9a:	54 c0       	rjmp	.+168    	; 0x1d44 <error_event+0x532>
				switch(error_servo_state)
				{
					case ERR_S_OK:
					break;
					case ERR_S_WAIT:
					if (evTime_check(&servo_timer))
    1c9c:	83 e3       	ldi	r24, 0x33	; 51
    1c9e:	93 e0       	ldi	r25, 0x03	; 3
    1ca0:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1ca4:	89 2b       	or	r24, r25
    1ca6:	09 f4       	brne	.+2      	; 0x1caa <error_event+0x498>
    1ca8:	4d c0       	rjmp	.+154    	; 0x1d44 <error_event+0x532>
					{
						evTime_start(&servo_timer, ERROR_M_TIME_EXIT);
    1caa:	40 ed       	ldi	r20, 0xD0	; 208
    1cac:	57 e0       	ldi	r21, 0x07	; 7
    1cae:	60 e0       	ldi	r22, 0x00	; 0
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	83 e3       	ldi	r24, 0x33	; 51
    1cb4:	93 e0       	ldi	r25, 0x03	; 3
    1cb6:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
						error_servo_state = ERR_M_OK;
    1cba:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <error_servo_state>
						debug_msg("ERROR STATUS: ERR_S_OK\n\r");
    1cbe:	88 e1       	ldi	r24, 0x18	; 24
    1cc0:	92 e0       	ldi	r25, 0x02	; 2
    1cc2:	9f 93       	push	r25
    1cc4:	8f 93       	push	r24
    1cc6:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1cca:	0f 90       	pop	r0
    1ccc:	0f 90       	pop	r0
    1cce:	3a c0       	rjmp	.+116    	; 0x1d44 <error_event+0x532>
					}
					break;
					case ERR_S_TRY:
					if (evTime_check(&servo_timer))
    1cd0:	83 e3       	ldi	r24, 0x33	; 51
    1cd2:	93 e0       	ldi	r25, 0x03	; 3
    1cd4:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    1cd8:	89 2b       	or	r24, r25
    1cda:	a1 f1       	breq	.+104    	; 0x1d44 <error_event+0x532>
					{
						error_servo_state = ERR_S_OK;
    1cdc:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <error_servo_state>
						debug_msg("ERROR STATUS: ERR_S_OK\n\r");
    1ce0:	88 e1       	ldi	r24, 0x18	; 24
    1ce2:	92 e0       	ldi	r25, 0x02	; 2
    1ce4:	9f 93       	push	r25
    1ce6:	8f 93       	push	r24
    1ce8:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1cec:	0f 90       	pop	r0
    1cee:	0f 90       	pop	r0
    1cf0:	29 c0       	rjmp	.+82     	; 0x1d44 <error_event+0x532>
					}
					break;
					break;
					case ERR_S_ERROR:
						set_error_state(ERR_REASON_SERVO);
    1cf2:	82 e0       	ldi	r24, 0x02	; 2
    1cf4:	0e 94 c7 0b 	call	0x178e	; 0x178e <set_error_state>
					break;
    1cf8:	25 c0       	rjmp	.+74     	; 0x1d44 <error_event+0x532>
		}
		if (menu_param.disable_error == 1) {
			#if CONFIG_USE_ERROR_MOTOR
			if (error_motor_status == 1)
			{
				switch(error_motor_state)
    1cfa:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <error_motor_state>
    1cfe:	82 30       	cpi	r24, 0x02	; 2
    1d00:	09 f4       	brne	.+2      	; 0x1d04 <error_event+0x4f2>
    1d02:	c1 ce       	rjmp	.-638    	; 0x1a86 <error_event+0x274>
    1d04:	38 f4       	brcc	.+14     	; 0x1d14 <error_event+0x502>
    1d06:	88 23       	and	r24, r24
    1d08:	09 f4       	brne	.+2      	; 0x1d0c <error_event+0x4fa>
    1d0a:	5a ce       	rjmp	.-844    	; 0x19c0 <error_event+0x1ae>
    1d0c:	81 30       	cpi	r24, 0x01	; 1
    1d0e:	09 f4       	brne	.+2      	; 0x1d12 <error_event+0x500>
    1d10:	84 ce       	rjmp	.-760    	; 0x1a1a <error_event+0x208>
    1d12:	3d cf       	rjmp	.-390    	; 0x1b8e <error_event+0x37c>
    1d14:	83 30       	cpi	r24, 0x03	; 3
    1d16:	09 f4       	brne	.+2      	; 0x1d1a <error_event+0x508>
    1d18:	c9 ce       	rjmp	.-622    	; 0x1aac <error_event+0x29a>
    1d1a:	84 30       	cpi	r24, 0x04	; 4
    1d1c:	09 f4       	brne	.+2      	; 0x1d20 <error_event+0x50e>
    1d1e:	ca ce       	rjmp	.-620    	; 0x1ab4 <error_event+0x2a2>
    1d20:	36 cf       	rjmp	.-404    	; 0x1b8e <error_event+0x37c>
				}
			}
			else
			{
				//toDo
				switch(error_motor_state)
    1d22:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <error_motor_state>
    1d26:	82 30       	cpi	r24, 0x02	; 2
    1d28:	09 f4       	brne	.+2      	; 0x1d2c <error_event+0x51a>
    1d2a:	fe ce       	rjmp	.-516    	; 0x1b28 <error_event+0x316>
    1d2c:	20 f4       	brcc	.+8      	; 0x1d36 <error_event+0x524>
    1d2e:	81 30       	cpi	r24, 0x01	; 1
    1d30:	09 f4       	brne	.+2      	; 0x1d34 <error_event+0x522>
    1d32:	dc ce       	rjmp	.-584    	; 0x1aec <error_event+0x2da>
    1d34:	2c cf       	rjmp	.-424    	; 0x1b8e <error_event+0x37c>
    1d36:	83 30       	cpi	r24, 0x03	; 3
    1d38:	09 f4       	brne	.+2      	; 0x1d3c <error_event+0x52a>
    1d3a:	15 cf       	rjmp	.-470    	; 0x1b66 <error_event+0x354>
    1d3c:	84 30       	cpi	r24, 0x04	; 4
    1d3e:	09 f4       	brne	.+2      	; 0x1d42 <error_event+0x530>
    1d40:	16 cf       	rjmp	.-468    	; 0x1b6e <error_event+0x35c>
    1d42:	25 cf       	rjmp	.-438    	; 0x1b8e <error_event+0x37c>
				} //switch
			} //else (error_servo_status == 1)
			#endif
		} /* Disable error */
	} //error_event_timer
}
    1d44:	ff 90       	pop	r15
    1d46:	ef 90       	pop	r14
    1d48:	df 90       	pop	r13
    1d4a:	cf 90       	pop	r12
    1d4c:	bf 90       	pop	r11
    1d4e:	af 90       	pop	r10
    1d50:	9f 90       	pop	r9
    1d52:	8f 90       	pop	r8
    1d54:	7f 90       	pop	r7
    1d56:	6f 90       	pop	r6
    1d58:	5f 90       	pop	r5
    1d5a:	4f 90       	pop	r4
    1d5c:	08 95       	ret

00001d5e <error_led_blink>:


void error_led_blink(void)
{
	static evTime blink_timer;
	if (evTime_process_period(&blink_timer, 350))
    1d5e:	4e e5       	ldi	r20, 0x5E	; 94
    1d60:	51 e0       	ldi	r21, 0x01	; 1
    1d62:	60 e0       	ldi	r22, 0x00	; 0
    1d64:	70 e0       	ldi	r23, 0x00	; 0
    1d66:	8a e2       	ldi	r24, 0x2A	; 42
    1d68:	93 e0       	ldi	r25, 0x03	; 3
    1d6a:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <evTime_process_period>
    1d6e:	89 2b       	or	r24, r25
    1d70:	09 f1       	breq	.+66     	; 0x1db4 <error_led_blink+0x56>
	{
		if (led_blink == ERR_REASON_MOTOR)
    1d72:	80 91 79 05 	lds	r24, 0x0579	; 0x800579 <led_blink>
    1d76:	81 30       	cpi	r24, 0x01	; 1
    1d78:	71 f4       	brne	.+28     	; 0x1d96 <error_led_blink+0x38>
		{
			LED_MOTOR_TOGGLE;
    1d7a:	92 b3       	in	r25, 0x12	; 18
    1d7c:	80 e1       	ldi	r24, 0x10	; 16
    1d7e:	89 27       	eor	r24, r25
    1d80:	82 bb       	out	0x12, r24	; 18
			ON_BUZZ_SIGNAL;
    1d82:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    1d86:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    1d8a:	90 62       	ori	r25, 0x20	; 32
    1d8c:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    1d90:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    1d94:	08 95       	ret
		}
		else if (led_blink == ERR_REASON_SERVO)
    1d96:	82 30       	cpi	r24, 0x02	; 2
    1d98:	69 f4       	brne	.+26     	; 0x1db4 <error_led_blink+0x56>
		{
			LED_SERVO_TOGGLE;
    1d9a:	92 b3       	in	r25, 0x12	; 18
    1d9c:	80 e4       	ldi	r24, 0x40	; 64
    1d9e:	89 27       	eor	r24, r25
    1da0:	82 bb       	out	0x12, r24	; 18
			ON_BUZZ_SIGNAL;
    1da2:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    1da6:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    1daa:	90 62       	ori	r25, 0x20	; 32
    1dac:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    1db0:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    1db4:	08 95       	ret

00001db6 <filtered_value>:
    1db6:	fc 01       	movw	r30, r24
    1db8:	20 81       	ld	r18, Z
    1dba:	31 81       	ldd	r19, Z+1	; 0x01
    1dbc:	62 30       	cpi	r22, 0x02	; 2
    1dbe:	58 f0       	brcs	.+22     	; 0x1dd6 <filtered_value+0x20>
    1dc0:	32 96       	adiw	r30, 0x02	; 2
    1dc2:	91 e0       	ldi	r25, 0x01	; 1
    1dc4:	41 91       	ld	r20, Z+
    1dc6:	51 91       	ld	r21, Z+
    1dc8:	24 0f       	add	r18, r20
    1dca:	35 1f       	adc	r19, r21
    1dcc:	36 95       	lsr	r19
    1dce:	27 95       	ror	r18
    1dd0:	9f 5f       	subi	r25, 0xFF	; 255
    1dd2:	69 13       	cpse	r22, r25
    1dd4:	f7 cf       	rjmp	.-18     	; 0x1dc4 <filtered_value+0xe>
    1dd6:	c9 01       	movw	r24, r18
    1dd8:	08 95       	ret

00001dda <init_measure>:
    1dda:	ee e8       	ldi	r30, 0x8E	; 142
    1ddc:	f3 e0       	ldi	r31, 0x03	; 3
    1dde:	26 eb       	ldi	r18, 0xB6	; 182
    1de0:	33 e0       	ldi	r19, 0x03	; 3
    1de2:	81 ef       	ldi	r24, 0xF1	; 241
    1de4:	91 e0       	ldi	r25, 0x01	; 1
    1de6:	81 93       	st	Z+, r24
    1de8:	91 93       	st	Z+, r25
    1dea:	2e 17       	cp	r18, r30
    1dec:	3f 07       	cpc	r19, r31
    1dee:	d9 f7       	brne	.-10     	; 0x1de6 <init_measure+0xc>
    1df0:	ed e6       	ldi	r30, 0x6D	; 109
    1df2:	f3 e0       	ldi	r31, 0x03	; 3
    1df4:	8b e8       	ldi	r24, 0x8B	; 139
    1df6:	93 e0       	ldi	r25, 0x03	; 3
    1df8:	11 92       	st	Z+, r1
    1dfa:	11 92       	st	Z+, r1
    1dfc:	8e 17       	cp	r24, r30
    1dfe:	9f 07       	cpc	r25, r31
    1e00:	d9 f7       	brne	.-10     	; 0x1df8 <init_measure+0x1e>
    1e02:	e5 e5       	ldi	r30, 0x55	; 85
    1e04:	f3 e0       	ldi	r31, 0x03	; 3
    1e06:	89 e6       	ldi	r24, 0x69	; 105
    1e08:	93 e0       	ldi	r25, 0x03	; 3
    1e0a:	11 92       	st	Z+, r1
    1e0c:	11 92       	st	Z+, r1
    1e0e:	8e 17       	cp	r24, r30
    1e10:	9f 07       	cpc	r25, r31
    1e12:	d9 f7       	brne	.-10     	; 0x1e0a <init_measure+0x30>
    1e14:	08 95       	ret

00001e16 <measure_process>:
    1e16:	cf 92       	push	r12
    1e18:	df 92       	push	r13
    1e1a:	ef 92       	push	r14
    1e1c:	ff 92       	push	r15
    1e1e:	cf 93       	push	r28
    1e20:	df 93       	push	r29
    1e22:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    1e26:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    1e2a:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    1e2e:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    1e32:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <measure_timer>
    1e36:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <measure_timer+0x1>
    1e3a:	a0 91 4e 03 	lds	r26, 0x034E	; 0x80034e <measure_timer+0x2>
    1e3e:	b0 91 4f 03 	lds	r27, 0x034F	; 0x80034f <measure_timer+0x3>
    1e42:	84 17       	cp	r24, r20
    1e44:	95 07       	cpc	r25, r21
    1e46:	a6 07       	cpc	r26, r22
    1e48:	b7 07       	cpc	r27, r23
    1e4a:	08 f0       	brcs	.+2      	; 0x1e4e <measure_process+0x38>
    1e4c:	fc c0       	rjmp	.+504    	; 0x2046 <measure_process+0x230>
    1e4e:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
    1e52:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
    1e56:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
    1e5a:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
    1e5e:	44 96       	adiw	r24, 0x14	; 20
    1e60:	a1 1d       	adc	r26, r1
    1e62:	b1 1d       	adc	r27, r1
    1e64:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <measure_timer>
    1e68:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <measure_timer+0x1>
    1e6c:	a0 93 4e 03 	sts	0x034E, r26	; 0x80034e <measure_timer+0x2>
    1e70:	b0 93 4f 03 	sts	0x034F, r27	; 0x80034f <measure_timer+0x3>
    1e74:	80 e0       	ldi	r24, 0x00	; 0
    1e76:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <adc_read>
    1e7a:	ec 01       	movw	r28, r24
    1e7c:	60 91 8b 03 	lds	r22, 0x038B	; 0x80038b <motor_filter_value>
    1e80:	70 91 8c 03 	lds	r23, 0x038C	; 0x80038c <motor_filter_value+0x1>
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	0e 94 3e 19 	call	0x327c	; 0x327c <__floatunsisf>
    1e8c:	21 e7       	ldi	r18, 0x71	; 113
    1e8e:	3d e3       	ldi	r19, 0x3D	; 61
    1e90:	4a e8       	ldi	r20, 0x8A	; 138
    1e92:	5e e3       	ldi	r21, 0x3E	; 62
    1e94:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    1e98:	6b 01       	movw	r12, r22
    1e9a:	7c 01       	movw	r14, r24
    1e9c:	be 01       	movw	r22, r28
    1e9e:	80 e0       	ldi	r24, 0x00	; 0
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	0e 94 3e 19 	call	0x327c	; 0x327c <__floatunsisf>
    1ea6:	9b 01       	movw	r18, r22
    1ea8:	ac 01       	movw	r20, r24
    1eaa:	c7 01       	movw	r24, r14
    1eac:	b6 01       	movw	r22, r12
    1eae:	0e 94 2a 18 	call	0x3054	; 0x3054 <__addsf3>
    1eb2:	0e 94 0f 19 	call	0x321e	; 0x321e <__fixunssfsi>
    1eb6:	70 93 b9 03 	sts	0x03B9, r23	; 0x8003b9 <accum_adc+0x1>
    1eba:	60 93 b8 03 	sts	0x03B8, r22	; 0x8003b8 <accum_adc>
    1ebe:	20 91 ba 03 	lds	r18, 0x03BA	; 0x8003ba <iteration_adc_accum_table>
    1ec2:	e2 2f       	mov	r30, r18
    1ec4:	f0 e0       	ldi	r31, 0x00	; 0
    1ec6:	ee 0f       	add	r30, r30
    1ec8:	ff 1f       	adc	r31, r31
    1eca:	e2 57       	subi	r30, 0x72	; 114
    1ecc:	fc 4f       	sbci	r31, 0xFC	; 252
    1ece:	71 83       	std	Z+1, r23	; 0x01
    1ed0:	60 83       	st	Z, r22
    1ed2:	81 e0       	ldi	r24, 0x01	; 1
    1ed4:	82 0f       	add	r24, r18
    1ed6:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <iteration_adc_accum_table>
    1eda:	82 e0       	ldi	r24, 0x02	; 2
    1edc:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <adc_read>
    1ee0:	80 32       	cpi	r24, 0x20	; 32
    1ee2:	91 05       	cpc	r25, r1
    1ee4:	30 f0       	brcs	.+12     	; 0x1ef2 <measure_process+0xdc>
    1ee6:	4f 97       	sbiw	r24, 0x1f	; 31
    1ee8:	90 93 6c 03 	sts	0x036C, r25	; 0x80036c <motor_adc+0x1>
    1eec:	80 93 6b 03 	sts	0x036B, r24	; 0x80036b <motor_adc>
    1ef0:	04 c0       	rjmp	.+8      	; 0x1efa <measure_process+0xe4>
    1ef2:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <motor_adc+0x1>
    1ef6:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <motor_adc>
    1efa:	e0 91 8d 03 	lds	r30, 0x038D	; 0x80038d <iteration_adc_motor_table>
    1efe:	f0 e0       	ldi	r31, 0x00	; 0
    1f00:	ee 0f       	add	r30, r30
    1f02:	ff 1f       	adc	r31, r31
    1f04:	e3 59       	subi	r30, 0x93	; 147
    1f06:	fc 4f       	sbci	r31, 0xFC	; 252
    1f08:	80 91 6b 03 	lds	r24, 0x036B	; 0x80036b <motor_adc>
    1f0c:	90 91 6c 03 	lds	r25, 0x036C	; 0x80036c <motor_adc+0x1>
    1f10:	91 83       	std	Z+1, r25	; 0x01
    1f12:	80 83       	st	Z, r24
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <adc_read>
    1f1a:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <calibration_value>
    1f1e:	30 91 51 03 	lds	r19, 0x0351	; 0x800351 <calibration_value+0x1>
    1f22:	28 17       	cp	r18, r24
    1f24:	39 07       	cpc	r19, r25
    1f26:	28 f4       	brcc	.+10     	; 0x1f32 <measure_process+0x11c>
    1f28:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <s_o_t_adc+0x1>
    1f2c:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <s_o_t_adc>
    1f30:	06 c0       	rjmp	.+12     	; 0x1f3e <measure_process+0x128>
    1f32:	28 1b       	sub	r18, r24
    1f34:	39 0b       	sbc	r19, r25
    1f36:	30 93 53 03 	sts	0x0353, r19	; 0x800353 <s_o_t_adc+0x1>
    1f3a:	20 93 52 03 	sts	0x0352, r18	; 0x800352 <s_o_t_adc>
    1f3e:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <s_o_t_iteration_adc_table>
    1f42:	c0 91 52 03 	lds	r28, 0x0352	; 0x800352 <s_o_t_adc>
    1f46:	d0 91 53 03 	lds	r29, 0x0353	; 0x800353 <s_o_t_adc+0x1>
    1f4a:	e8 2f       	mov	r30, r24
    1f4c:	f0 e0       	ldi	r31, 0x00	; 0
    1f4e:	ee 0f       	add	r30, r30
    1f50:	ff 1f       	adc	r31, r31
    1f52:	eb 5a       	subi	r30, 0xAB	; 171
    1f54:	fc 4f       	sbci	r31, 0xFC	; 252
    1f56:	c0 83       	st	Z, r28
    1f58:	d1 83       	std	Z+1, r29	; 0x01
    1f5a:	90 91 8d 03 	lds	r25, 0x038D	; 0x80038d <iteration_adc_motor_table>
    1f5e:	9f 5f       	subi	r25, 0xFF	; 255
    1f60:	90 93 8d 03 	sts	0x038D, r25	; 0x80038d <iteration_adc_motor_table>
    1f64:	8f 5f       	subi	r24, 0xFF	; 255
    1f66:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <s_o_t_iteration_adc_table>
    1f6a:	64 e1       	ldi	r22, 0x14	; 20
    1f6c:	8e e8       	ldi	r24, 0x8E	; 142
    1f6e:	93 e0       	ldi	r25, 0x03	; 3
    1f70:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <filtered_value>
    1f74:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <filtered_accum_adc_val+0x1>
    1f78:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <filtered_accum_adc_val>
    1f7c:	6f e0       	ldi	r22, 0x0F	; 15
    1f7e:	8d e6       	ldi	r24, 0x6D	; 109
    1f80:	93 e0       	ldi	r25, 0x03	; 3
    1f82:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <filtered_value>
    1f86:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <motor_filter_value+0x1>
    1f8a:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <motor_filter_value>
    1f8e:	6a e0       	ldi	r22, 0x0A	; 10
    1f90:	85 e5       	ldi	r24, 0x55	; 85
    1f92:	93 e0       	ldi	r25, 0x03	; 3
    1f94:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <filtered_value>
    1f98:	90 93 6a 03 	sts	0x036A, r25	; 0x80036a <s_o_t_filter_value+0x1>
    1f9c:	80 93 69 03 	sts	0x0369, r24	; 0x800369 <s_o_t_filter_value>
    1fa0:	60 91 48 03 	lds	r22, 0x0348	; 0x800348 <debug_msg_counter>
    1fa4:	70 91 49 03 	lds	r23, 0x0349	; 0x800349 <debug_msg_counter+0x1>
    1fa8:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <debug_msg_counter+0x2>
    1fac:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <debug_msg_counter+0x3>
    1fb0:	20 e5       	ldi	r18, 0x50	; 80
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e0       	ldi	r20, 0x00	; 0
    1fb6:	50 e0       	ldi	r21, 0x00	; 0
    1fb8:	0e 94 78 1f 	call	0x3ef0	; 0x3ef0 <__udivmodsi4>
    1fbc:	67 2b       	or	r22, r23
    1fbe:	68 2b       	or	r22, r24
    1fc0:	69 2b       	or	r22, r25
    1fc2:	e1 f4       	brne	.+56     	; 0x1ffc <measure_process+0x1e6>
    1fc4:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <motor_adc+0x1>
    1fc8:	8f 93       	push	r24
    1fca:	80 91 6b 03 	lds	r24, 0x036B	; 0x80036b <motor_adc>
    1fce:	8f 93       	push	r24
    1fd0:	df 93       	push	r29
    1fd2:	cf 93       	push	r28
    1fd4:	80 91 b9 03 	lds	r24, 0x03B9	; 0x8003b9 <accum_adc+0x1>
    1fd8:	8f 93       	push	r24
    1fda:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <accum_adc>
    1fde:	8f 93       	push	r24
    1fe0:	81 e3       	ldi	r24, 0x31	; 49
    1fe2:	92 e0       	ldi	r25, 0x02	; 2
    1fe4:	9f 93       	push	r25
    1fe6:	8f 93       	push	r24
    1fe8:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    1fec:	8d b7       	in	r24, 0x3d	; 61
    1fee:	9e b7       	in	r25, 0x3e	; 62
    1ff0:	08 96       	adiw	r24, 0x08	; 8
    1ff2:	0f b6       	in	r0, 0x3f	; 63
    1ff4:	f8 94       	cli
    1ff6:	9e bf       	out	0x3e, r25	; 62
    1ff8:	0f be       	out	0x3f, r0	; 63
    1ffa:	8d bf       	out	0x3d, r24	; 61
    1ffc:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <debug_msg_counter>
    2000:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <debug_msg_counter+0x1>
    2004:	a0 91 4a 03 	lds	r26, 0x034A	; 0x80034a <debug_msg_counter+0x2>
    2008:	b0 91 4b 03 	lds	r27, 0x034B	; 0x80034b <debug_msg_counter+0x3>
    200c:	01 96       	adiw	r24, 0x01	; 1
    200e:	a1 1d       	adc	r26, r1
    2010:	b1 1d       	adc	r27, r1
    2012:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <debug_msg_counter>
    2016:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <debug_msg_counter+0x1>
    201a:	a0 93 4a 03 	sts	0x034A, r26	; 0x80034a <debug_msg_counter+0x2>
    201e:	b0 93 4b 03 	sts	0x034B, r27	; 0x80034b <debug_msg_counter+0x3>
    2022:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <iteration_adc_accum_table>
    2026:	84 31       	cpi	r24, 0x14	; 20
    2028:	11 f4       	brne	.+4      	; 0x202e <measure_process+0x218>
    202a:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <iteration_adc_accum_table>
    202e:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <s_o_t_iteration_adc_table>
    2032:	8a 30       	cpi	r24, 0x0A	; 10
    2034:	11 f4       	brne	.+4      	; 0x203a <measure_process+0x224>
    2036:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <s_o_t_iteration_adc_table>
    203a:	80 91 8d 03 	lds	r24, 0x038D	; 0x80038d <iteration_adc_motor_table>
    203e:	8f 30       	cpi	r24, 0x0F	; 15
    2040:	11 f4       	brne	.+4      	; 0x2046 <measure_process+0x230>
    2042:	10 92 8d 03 	sts	0x038D, r1	; 0x80038d <iteration_adc_motor_table>
    2046:	df 91       	pop	r29
    2048:	cf 91       	pop	r28
    204a:	ff 90       	pop	r15
    204c:	ef 90       	pop	r14
    204e:	df 90       	pop	r13
    2050:	cf 90       	pop	r12
    2052:	08 95       	ret

00002054 <measure_get_servo_calibration>:
    2054:	cf 92       	push	r12
    2056:	df 92       	push	r13
    2058:	ef 92       	push	r14
    205a:	ff 92       	push	r15
    205c:	cf 93       	push	r28
    205e:	df 93       	push	r29
    2060:	c0 90 8a 05 	lds	r12, 0x058A	; 0x80058a <mktime+0x2>
    2064:	d0 90 8b 05 	lds	r13, 0x058B	; 0x80058b <mktime+0x3>
    2068:	e0 90 8c 05 	lds	r14, 0x058C	; 0x80058c <mktime+0x4>
    206c:	f0 90 8d 05 	lds	r15, 0x058D	; 0x80058d <mktime+0x5>
    2070:	8c ed       	ldi	r24, 0xDC	; 220
    2072:	c8 0e       	add	r12, r24
    2074:	85 e0       	ldi	r24, 0x05	; 5
    2076:	d8 1e       	adc	r13, r24
    2078:	e1 1c       	adc	r14, r1
    207a:	f1 1c       	adc	r15, r1
    207c:	c8 e8       	ldi	r28, 0x88	; 136
    207e:	d5 e0       	ldi	r29, 0x05	; 5
    2080:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <measure_process>
    2084:	8a 81       	ldd	r24, Y+2	; 0x02
    2086:	9b 81       	ldd	r25, Y+3	; 0x03
    2088:	ac 81       	ldd	r26, Y+4	; 0x04
    208a:	bd 81       	ldd	r27, Y+5	; 0x05
    208c:	c8 16       	cp	r12, r24
    208e:	d9 06       	cpc	r13, r25
    2090:	ea 06       	cpc	r14, r26
    2092:	fb 06       	cpc	r15, r27
    2094:	a8 f7       	brcc	.-22     	; 0x2080 <measure_get_servo_calibration+0x2c>
    2096:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <s_o_t_filter_value>
    209a:	90 91 6a 03 	lds	r25, 0x036A	; 0x80036a <s_o_t_filter_value+0x1>
    209e:	80 93 50 03 	sts	0x0350, r24	; 0x800350 <calibration_value>
    20a2:	90 93 51 03 	sts	0x0351, r25	; 0x800351 <calibration_value+0x1>
    20a6:	9f 93       	push	r25
    20a8:	8f 93       	push	r24
    20aa:	81 e6       	ldi	r24, 0x61	; 97
    20ac:	92 e0       	ldi	r25, 0x02	; 2
    20ae:	9f 93       	push	r25
    20b0:	8f 93       	push	r24
    20b2:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    20b6:	0f 90       	pop	r0
    20b8:	0f 90       	pop	r0
    20ba:	0f 90       	pop	r0
    20bc:	0f 90       	pop	r0
    20be:	df 91       	pop	r29
    20c0:	cf 91       	pop	r28
    20c2:	ff 90       	pop	r15
    20c4:	ef 90       	pop	r14
    20c6:	df 90       	pop	r13
    20c8:	cf 90       	pop	r12
    20ca:	08 95       	ret

000020cc <measure_get_filtered_value>:
    20cc:	83 30       	cpi	r24, 0x03	; 3
    20ce:	18 f4       	brcc	.+6      	; 0x20d6 <measure_get_filtered_value+0xa>
    20d0:	81 30       	cpi	r24, 0x01	; 1
    20d2:	40 f0       	brcs	.+16     	; 0x20e4 <measure_get_filtered_value+0x18>
    20d4:	0c c0       	rjmp	.+24     	; 0x20ee <measure_get_filtered_value+0x22>
    20d6:	83 30       	cpi	r24, 0x03	; 3
    20d8:	79 f4       	brne	.+30     	; 0x20f8 <measure_get_filtered_value+0x2c>
    20da:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <filtered_accum_adc_val>
    20de:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <filtered_accum_adc_val+0x1>
    20e2:	08 95       	ret
    20e4:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <motor_filter_value>
    20e8:	90 91 8c 03 	lds	r25, 0x038C	; 0x80038c <motor_filter_value+0x1>
    20ec:	08 95       	ret
    20ee:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <s_o_t_filter_value>
    20f2:	90 91 6a 03 	lds	r25, 0x036A	; 0x80036a <s_o_t_filter_value+0x1>
    20f6:	08 95       	ret
    20f8:	80 e0       	ldi	r24, 0x00	; 0
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	08 95       	ret

000020fe <measure_get_current>:
    20fe:	cf 92       	push	r12
    2100:	df 92       	push	r13
    2102:	ef 92       	push	r14
    2104:	ff 92       	push	r15
    2106:	6a 01       	movw	r12, r20
    2108:	7b 01       	movw	r14, r22
    210a:	83 30       	cpi	r24, 0x03	; 3
    210c:	18 f4       	brcc	.+6      	; 0x2114 <measure_get_current+0x16>
    210e:	81 30       	cpi	r24, 0x01	; 1
    2110:	50 f0       	brcs	.+20     	; 0x2126 <measure_get_current+0x28>
    2112:	10 c0       	rjmp	.+32     	; 0x2134 <measure_get_current+0x36>
    2114:	83 30       	cpi	r24, 0x03	; 3
    2116:	a9 f4       	brne	.+42     	; 0x2142 <measure_get_current+0x44>
    2118:	60 91 b6 03 	lds	r22, 0x03B6	; 0x8003b6 <filtered_accum_adc_val>
    211c:	70 91 b7 03 	lds	r23, 0x03B7	; 0x8003b7 <filtered_accum_adc_val+0x1>
    2120:	80 e0       	ldi	r24, 0x00	; 0
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	11 c0       	rjmp	.+34     	; 0x2148 <measure_get_current+0x4a>
    2126:	60 91 8b 03 	lds	r22, 0x038B	; 0x80038b <motor_filter_value>
    212a:	70 91 8c 03 	lds	r23, 0x038C	; 0x80038c <motor_filter_value+0x1>
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0a c0       	rjmp	.+20     	; 0x2148 <measure_get_current+0x4a>
    2134:	60 91 69 03 	lds	r22, 0x0369	; 0x800369 <s_o_t_filter_value>
    2138:	70 91 6a 03 	lds	r23, 0x036A	; 0x80036a <s_o_t_filter_value+0x1>
    213c:	80 e0       	ldi	r24, 0x00	; 0
    213e:	90 e0       	ldi	r25, 0x00	; 0
    2140:	03 c0       	rjmp	.+6      	; 0x2148 <measure_get_current+0x4a>
    2142:	60 e0       	ldi	r22, 0x00	; 0
    2144:	70 e0       	ldi	r23, 0x00	; 0
    2146:	cb 01       	movw	r24, r22
    2148:	0e 94 3e 19 	call	0x327c	; 0x327c <__floatunsisf>
    214c:	20 e0       	ldi	r18, 0x00	; 0
    214e:	30 e0       	ldi	r19, 0x00	; 0
    2150:	40 e8       	ldi	r20, 0x80	; 128
    2152:	5a e3       	ldi	r21, 0x3A	; 58
    2154:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    2158:	20 e0       	ldi	r18, 0x00	; 0
    215a:	30 e0       	ldi	r19, 0x00	; 0
    215c:	40 ea       	ldi	r20, 0xA0	; 160
    215e:	50 e4       	ldi	r21, 0x40	; 64
    2160:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    2164:	a7 01       	movw	r20, r14
    2166:	96 01       	movw	r18, r12
    2168:	0e 94 96 18 	call	0x312c	; 0x312c <__divsf3>
    216c:	ff 90       	pop	r15
    216e:	ef 90       	pop	r14
    2170:	df 90       	pop	r13
    2172:	cf 90       	pop	r12
    2174:	08 95       	ret

00002176 <mem_save_data>:
#define DEBUG_MEM (void)
#endif


void mem_save_data(_type_data param, void *data)
{
    2176:	ef 92       	push	r14
    2178:	ff 92       	push	r15
    217a:	0f 93       	push	r16
    217c:	1f 93       	push	r17
    217e:	cf 93       	push	r28
    2180:	8b 01       	movw	r16, r22
    int offset;
    int len;
    uint8_t *data_pnt = (uint8_t*)data;
    switch(param)
    2182:	82 30       	cpi	r24, 0x02	; 2
    2184:	59 f0       	breq	.+22     	; 0x219c <mem_save_data+0x26>
    2186:	28 f4       	brcc	.+10     	; 0x2192 <mem_save_data+0x1c>
    2188:	88 23       	and	r24, r24
    218a:	91 f0       	breq	.+36     	; 0x21b0 <mem_save_data+0x3a>
    218c:	81 30       	cpi	r24, 0x01	; 1
    218e:	19 f1       	breq	.+70     	; 0x21d6 <mem_save_data+0x60>
    2190:	30 c0       	rjmp	.+96     	; 0x21f2 <mem_save_data+0x7c>
    2192:	83 30       	cpi	r24, 0x03	; 3
    2194:	29 f1       	breq	.+74     	; 0x21e0 <mem_save_data+0x6a>
    2196:	84 30       	cpi	r24, 0x04	; 4
    2198:	31 f0       	breq	.+12     	; 0x21a6 <mem_save_data+0x30>
    219a:	2b c0       	rjmp	.+86     	; 0x21f2 <mem_save_data+0x7c>
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
    219c:	22 e0       	ldi	r18, 0x02	; 2
    219e:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
    21a0:	84 e0       	ldi	r24, 0x04	; 4
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	21 c0       	rjmp	.+66     	; 0x21e8 <mem_save_data+0x72>
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
		break;
        case MEM_CALIBRATION:
        offset = 4*sizeof(mem_program);
        len = sizeof(menuSaveParameters);
    21a6:	24 e0       	ldi	r18, 0x04	; 4
    21a8:	30 e0       	ldi	r19, 0x00	; 0
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
		break;
        case MEM_CALIBRATION:
        offset = 4*sizeof(mem_program);
    21aa:	88 e0       	ldi	r24, 0x08	; 8
    21ac:	90 e0       	ldi	r25, 0x00	; 0
        len = sizeof(menuSaveParameters);
        break;
    21ae:	1c c0       	rjmp	.+56     	; 0x21e8 <mem_save_data+0x72>
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    21b0:	68 94       	set
    21b2:	ee 24       	eor	r14, r14
    21b4:	e1 f8       	bld	r14, 1
    21b6:	f1 2c       	mov	r15, r1
    21b8:	c0 e0       	ldi	r28, 0x00	; 0
	{
		//debug_msg("MEM: Write add: %d, data: %d\n", byte_n, *data_pnt);
		EEPROM_write(byte_n,*data_pnt);
    21ba:	f8 01       	movw	r30, r16
    21bc:	61 91       	ld	r22, Z+
    21be:	8f 01       	movw	r16, r30
    21c0:	8c 2f       	mov	r24, r28
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	0e 94 b8 0b 	call	0x1770	; 0x1770 <EEPROM_write>
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    21c8:	cf 5f       	subi	r28, 0xFF	; 255
    21ca:	8c 2f       	mov	r24, r28
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	8e 15       	cp	r24, r14
    21d0:	9f 05       	cpc	r25, r15
    21d2:	9c f3       	brlt	.-26     	; 0x21ba <mem_save_data+0x44>
    21d4:	0e c0       	rjmp	.+28     	; 0x21f2 <mem_save_data+0x7c>
        offset = 0;
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
    21d6:	22 e0       	ldi	r18, 0x02	; 2
    21d8:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_1:
        offset = 0;
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
    21da:	82 e0       	ldi	r24, 0x02	; 2
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	04 c0       	rjmp	.+8      	; 0x21e8 <mem_save_data+0x72>
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
        break;
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
    21e0:	22 e0       	ldi	r18, 0x02	; 2
    21e2:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
        break;
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
    21e4:	86 e0       	ldi	r24, 0x06	; 6
    21e6:	90 e0       	ldi	r25, 0x00	; 0
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    21e8:	c8 2f       	mov	r28, r24
    21ea:	79 01       	movw	r14, r18
    21ec:	e8 0e       	add	r14, r24
    21ee:	f9 1e       	adc	r15, r25
    21f0:	e4 cf       	rjmp	.-56     	; 0x21ba <mem_save_data+0x44>
	{
		//debug_msg("MEM: Write add: %d, data: %d\n", byte_n, *data_pnt);
		EEPROM_write(byte_n,*data_pnt);
		data_pnt++;
	}
}
    21f2:	cf 91       	pop	r28
    21f4:	1f 91       	pop	r17
    21f6:	0f 91       	pop	r16
    21f8:	ff 90       	pop	r15
    21fa:	ef 90       	pop	r14
    21fc:	08 95       	ret

000021fe <mem_read_data>:

void mem_read_data(_type_data param, void *data)
{
    21fe:	ef 92       	push	r14
    2200:	ff 92       	push	r15
    2202:	0f 93       	push	r16
    2204:	1f 93       	push	r17
    2206:	cf 93       	push	r28
    2208:	8b 01       	movw	r16, r22
    int offset;
    int len;
    uint8_t *data_pnt = (uint8_t*)data;
    switch(param)
    220a:	82 30       	cpi	r24, 0x02	; 2
    220c:	59 f0       	breq	.+22     	; 0x2224 <mem_read_data+0x26>
    220e:	28 f4       	brcc	.+10     	; 0x221a <mem_read_data+0x1c>
    2210:	88 23       	and	r24, r24
    2212:	91 f0       	breq	.+36     	; 0x2238 <mem_read_data+0x3a>
    2214:	81 30       	cpi	r24, 0x01	; 1
    2216:	19 f1       	breq	.+70     	; 0x225e <mem_read_data+0x60>
    2218:	30 c0       	rjmp	.+96     	; 0x227a <mem_read_data+0x7c>
    221a:	83 30       	cpi	r24, 0x03	; 3
    221c:	29 f1       	breq	.+74     	; 0x2268 <mem_read_data+0x6a>
    221e:	84 30       	cpi	r24, 0x04	; 4
    2220:	31 f0       	breq	.+12     	; 0x222e <mem_read_data+0x30>
    2222:	2b c0       	rjmp	.+86     	; 0x227a <mem_read_data+0x7c>
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
    2224:	22 e0       	ldi	r18, 0x02	; 2
    2226:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
    2228:	84 e0       	ldi	r24, 0x04	; 4
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	21 c0       	rjmp	.+66     	; 0x2270 <mem_read_data+0x72>
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
		break;
        case MEM_CALIBRATION:
        offset = 4*sizeof(mem_program);
        len = sizeof(menuSaveParameters);
    222e:	24 e0       	ldi	r18, 0x04	; 4
    2230:	30 e0       	ldi	r19, 0x00	; 0
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
		break;
        case MEM_CALIBRATION:
        offset = 4*sizeof(mem_program);
    2232:	88 e0       	ldi	r24, 0x08	; 8
    2234:	90 e0       	ldi	r25, 0x00	; 0
        len = sizeof(menuSaveParameters);
        break;
    2236:	1c c0       	rjmp	.+56     	; 0x2270 <mem_read_data+0x72>
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    2238:	68 94       	set
    223a:	ee 24       	eor	r14, r14
    223c:	e1 f8       	bld	r14, 1
    223e:	f1 2c       	mov	r15, r1
    2240:	c0 e0       	ldi	r28, 0x00	; 0
	{
		*data_pnt = EEPROM_read(byte_n);
    2242:	8c 2f       	mov	r24, r28
    2244:	90 e0       	ldi	r25, 0x00	; 0
    2246:	0e 94 c0 0b 	call	0x1780	; 0x1780 <EEPROM_read>
    224a:	f8 01       	movw	r30, r16
    224c:	81 93       	st	Z+, r24
    224e:	8f 01       	movw	r16, r30
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    2250:	cf 5f       	subi	r28, 0xFF	; 255
    2252:	8c 2f       	mov	r24, r28
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	8e 15       	cp	r24, r14
    2258:	9f 05       	cpc	r25, r15
    225a:	9c f3       	brlt	.-26     	; 0x2242 <mem_read_data+0x44>
    225c:	0e c0       	rjmp	.+28     	; 0x227a <mem_read_data+0x7c>
        offset = 0;
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
        len = sizeof(mem_program);
    225e:	22 e0       	ldi	r18, 0x02	; 2
    2260:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_1:
        offset = 0;
        len = sizeof(mem_program);
        break;
        case MEM_PROGRAM_2:
        offset = sizeof(mem_program);
    2262:	82 e0       	ldi	r24, 0x02	; 2
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	04 c0       	rjmp	.+8      	; 0x2270 <mem_read_data+0x72>
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
        break;
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
		len = sizeof(mem_program);
    2268:	22 e0       	ldi	r18, 0x02	; 2
    226a:	30 e0       	ldi	r19, 0x00	; 0
        case MEM_PROGRAM_3:
        offset = 2*sizeof(mem_program);
        len = sizeof(mem_program);
        break;
		case MEM_LAST_DATA:
		offset = 3*sizeof(mem_program);
    226c:	86 e0       	ldi	r24, 0x06	; 6
    226e:	90 e0       	ldi	r25, 0x00	; 0
        default:
        return;
        break;
    }

	for (uint8_t byte_n=offset; byte_n<len + offset;byte_n++)
    2270:	c8 2f       	mov	r28, r24
    2272:	79 01       	movw	r14, r18
    2274:	e8 0e       	add	r14, r24
    2276:	f9 1e       	adc	r15, r25
    2278:	e4 cf       	rjmp	.-56     	; 0x2242 <mem_read_data+0x44>
	{
		*data_pnt = EEPROM_read(byte_n);
		//debug_msg("MEM: Read add: %d, data: %d\n", byte_n, *data_pnt);
		data_pnt++;
	}
}
    227a:	cf 91       	pop	r28
    227c:	1f 91       	pop	r17
    227e:	0f 91       	pop	r16
    2280:	ff 90       	pop	r15
    2282:	ef 90       	pop	r14
    2284:	08 95       	ret

00002286 <servo_set_pwm_val>:
    2286:	81 11       	cpse	r24, r1
    2288:	05 c0       	rjmp	.+10     	; 0x2294 <servo_set_pwm_val+0xe>
    228a:	8c e6       	ldi	r24, 0x6C	; 108
    228c:	97 e0       	ldi	r25, 0x07	; 7
    228e:	9b bd       	out	0x2b, r25	; 43
    2290:	8a bd       	out	0x2a, r24	; 42
    2292:	08 95       	ret
    2294:	82 33       	cpi	r24, 0x32	; 50
    2296:	90 f4       	brcc	.+36     	; 0x22bc <servo_set_pwm_val+0x36>
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	22 27       	eor	r18, r18
    229c:	33 27       	eor	r19, r19
    229e:	28 1b       	sub	r18, r24
    22a0:	39 0b       	sbc	r19, r25
    22a2:	22 0f       	add	r18, r18
    22a4:	33 1f       	adc	r19, r19
    22a6:	22 0f       	add	r18, r18
    22a8:	33 1f       	adc	r19, r19
    22aa:	22 0f       	add	r18, r18
    22ac:	33 1f       	adc	r19, r19
    22ae:	82 0f       	add	r24, r18
    22b0:	93 1f       	adc	r25, r19
    22b2:	88 5f       	subi	r24, 0xF8	; 248
    22b4:	98 4f       	sbci	r25, 0xF8	; 248
    22b6:	9b bd       	out	0x2b, r25	; 43
    22b8:	8a bd       	out	0x2a, r24	; 42
    22ba:	08 95       	ret
    22bc:	84 36       	cpi	r24, 0x64	; 100
    22be:	68 f4       	brcc	.+26     	; 0x22da <servo_set_pwm_val+0x54>
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	c2 97       	sbiw	r24, 0x32	; 50
    22c4:	88 0f       	add	r24, r24
    22c6:	99 1f       	adc	r25, r25
    22c8:	88 0f       	add	r24, r24
    22ca:	99 1f       	adc	r25, r25
    22cc:	2a ea       	ldi	r18, 0xAA	; 170
    22ce:	35 e0       	ldi	r19, 0x05	; 5
    22d0:	a9 01       	movw	r20, r18
    22d2:	48 1b       	sub	r20, r24
    22d4:	59 0b       	sbc	r21, r25
    22d6:	5b bd       	out	0x2b, r21	; 43
    22d8:	4a bd       	out	0x2a, r20	; 42
    22da:	08 95       	ret

000022dc <servo_error>:
    22dc:	80 e0       	ldi	r24, 0x00	; 0
    22de:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    22e2:	96 98       	cbi	0x12, 6	; 18
    22e4:	85 e0       	ldi	r24, 0x05	; 5
    22e6:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <servoD>
    22ea:	08 95       	ret

000022ec <servo_init>:
    22ec:	cf 93       	push	r28
    22ee:	df 93       	push	r29
    22f0:	2f e1       	ldi	r18, 0x1F	; 31
    22f2:	3e e4       	ldi	r19, 0x4E	; 78
    22f4:	37 bd       	out	0x27, r19	; 39
    22f6:	26 bd       	out	0x26, r18	; 38
    22f8:	81 b3       	in	r24, 0x11	; 17
    22fa:	80 63       	ori	r24, 0x30	; 48
    22fc:	81 bb       	out	0x11, r24	; 17
    22fe:	19 bc       	out	0x29, r1	; 41
    2300:	18 bc       	out	0x28, r1	; 40
    2302:	1b bc       	out	0x2b, r1	; 43
    2304:	1a bc       	out	0x2a, r1	; 42
    2306:	8f b5       	in	r24, 0x2f	; 47
    2308:	82 60       	ori	r24, 0x02	; 2
    230a:	8f bd       	out	0x2f, r24	; 47
    230c:	8e b5       	in	r24, 0x2e	; 46
    230e:	88 61       	ori	r24, 0x18	; 24
    2310:	8e bd       	out	0x2e, r24	; 46
    2312:	8f b5       	in	r24, 0x2f	; 47
    2314:	80 68       	ori	r24, 0x80	; 128
    2316:	8f bd       	out	0x2f, r24	; 47
    2318:	8e b5       	in	r24, 0x2e	; 46
    231a:	82 60       	ori	r24, 0x02	; 2
    231c:	8e bd       	out	0x2e, r24	; 46
    231e:	3b bd       	out	0x2b, r19	; 43
    2320:	2a bd       	out	0x2a, r18	; 42
    2322:	96 98       	cbi	0x12, 6	; 18
    2324:	ca e7       	ldi	r28, 0x7A	; 122
    2326:	d5 e0       	ldi	r29, 0x05	; 5
    2328:	81 e0       	ldi	r24, 0x01	; 1
    232a:	88 83       	st	Y, r24
    232c:	1b 82       	std	Y+3, r1	; 0x03
    232e:	8e e7       	ldi	r24, 0x7E	; 126
    2330:	95 e0       	ldi	r25, 0x05	; 5
    2332:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <evTime_init>
    2336:	19 86       	std	Y+9, r1	; 0x09
    2338:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <try_count>
    233c:	87 e8       	ldi	r24, 0x87	; 135
    233e:	92 e0       	ldi	r25, 0x02	; 2
    2340:	9f 93       	push	r25
    2342:	8f 93       	push	r24
    2344:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    2348:	0f 90       	pop	r0
    234a:	0f 90       	pop	r0
    234c:	df 91       	pop	r29
    234e:	cf 91       	pop	r28
    2350:	08 95       	ret

00002352 <servo_is_open>:
    2352:	90 91 7a 05 	lds	r25, 0x057A	; 0x80057a <servoD>
    2356:	92 50       	subi	r25, 0x02	; 2
    2358:	21 e0       	ldi	r18, 0x01	; 1
    235a:	30 e0       	ldi	r19, 0x00	; 0
    235c:	92 30       	cpi	r25, 0x02	; 2
    235e:	10 f0       	brcs	.+4      	; 0x2364 <servo_is_open+0x12>
    2360:	20 e0       	ldi	r18, 0x00	; 0
    2362:	30 e0       	ldi	r19, 0x00	; 0
    2364:	c9 01       	movw	r24, r18
    2366:	08 95       	ret

00002368 <servo_delayed_open>:
    2368:	90 91 7a 05 	lds	r25, 0x057A	; 0x80057a <servoD>
    236c:	91 30       	cpi	r25, 0x01	; 1
    236e:	a1 f4       	brne	.+40     	; 0x2398 <servo_delayed_open+0x30>
    2370:	ea e7       	ldi	r30, 0x7A	; 122
    2372:	f5 e0       	ldi	r31, 0x05	; 5
    2374:	93 e0       	ldi	r25, 0x03	; 3
    2376:	90 83       	st	Z, r25
    2378:	83 83       	std	Z+3, r24	; 0x03
    237a:	1f 92       	push	r1
    237c:	8f 93       	push	r24
    237e:	84 e9       	ldi	r24, 0x94	; 148
    2380:	92 e0       	ldi	r25, 0x02	; 2
    2382:	9f 93       	push	r25
    2384:	8f 93       	push	r24
    2386:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    238a:	0f 90       	pop	r0
    238c:	0f 90       	pop	r0
    238e:	0f 90       	pop	r0
    2390:	0f 90       	pop	r0
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	08 95       	ret
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	08 95       	ret

0000239e <servo_enable_try>:
    239e:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <servoD>
    23a2:	9f ef       	ldi	r25, 0xFF	; 255
    23a4:	98 0f       	add	r25, r24
    23a6:	92 30       	cpi	r25, 0x02	; 2
    23a8:	28 f4       	brcc	.+10     	; 0x23b4 <servo_enable_try+0x16>
    23aa:	ea e7       	ldi	r30, 0x7A	; 122
    23ac:	f5 e0       	ldi	r31, 0x05	; 5
    23ae:	81 83       	std	Z+1, r24	; 0x01
    23b0:	84 e0       	ldi	r24, 0x04	; 4
    23b2:	80 83       	st	Z, r24
    23b4:	08 95       	ret

000023b6 <servo_get_try_cnt>:
    23b6:	80 91 83 05 	lds	r24, 0x0583	; 0x800583 <servoD+0x9>
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	08 95       	ret

000023be <servo_close>:
    23be:	0e 94 a9 11 	call	0x2352	; 0x2352 <servo_is_open>
    23c2:	00 97       	sbiw	r24, 0x00	; 0
    23c4:	c1 f0       	breq	.+48     	; 0x23f6 <servo_close+0x38>
    23c6:	80 e0       	ldi	r24, 0x00	; 0
    23c8:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    23cc:	ea e7       	ldi	r30, 0x7A	; 122
    23ce:	f5 e0       	ldi	r31, 0x05	; 5
    23d0:	81 e0       	ldi	r24, 0x01	; 1
    23d2:	80 83       	st	Z, r24
    23d4:	13 82       	std	Z+3, r1	; 0x03
    23d6:	1f 92       	push	r1
    23d8:	1f 92       	push	r1
    23da:	8b ea       	ldi	r24, 0xAB	; 171
    23dc:	92 e0       	ldi	r25, 0x02	; 2
    23de:	9f 93       	push	r25
    23e0:	8f 93       	push	r24
    23e2:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    23e6:	96 98       	cbi	0x12, 6	; 18
    23e8:	0f 90       	pop	r0
    23ea:	0f 90       	pop	r0
    23ec:	0f 90       	pop	r0
    23ee:	0f 90       	pop	r0
    23f0:	81 e0       	ldi	r24, 0x01	; 1
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	08 95       	ret
    23f6:	20 91 7a 05 	lds	r18, 0x057A	; 0x80057a <servoD>
    23fa:	24 30       	cpi	r18, 0x04	; 4
    23fc:	21 f4       	brne	.+8      	; 0x2406 <servo_close+0x48>
    23fe:	0e 94 04 12 	call	0x2408	; 0x2408 <servo_exit_try>
    2402:	81 e0       	ldi	r24, 0x01	; 1
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	08 95       	ret

00002408 <servo_exit_try>:
    2408:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <servoD+0x1>
    240c:	82 30       	cpi	r24, 0x02	; 2
    240e:	29 f4       	brne	.+10     	; 0x241a <servo_exit_try+0x12>
    2410:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <servoD>
    2414:	0e 94 df 11 	call	0x23be	; 0x23be <servo_close>
    2418:	09 c0       	rjmp	.+18     	; 0x242c <servo_exit_try+0x24>
    241a:	81 30       	cpi	r24, 0x01	; 1
    241c:	71 f4       	brne	.+28     	; 0x243a <servo_exit_try+0x32>
    241e:	ea e7       	ldi	r30, 0x7A	; 122
    2420:	f5 e0       	ldi	r31, 0x05	; 5
    2422:	82 e0       	ldi	r24, 0x02	; 2
    2424:	80 83       	st	Z, r24
    2426:	83 81       	ldd	r24, Z+3	; 0x03
    2428:	0e 94 1e 12 	call	0x243c	; 0x243c <servo_open>
    242c:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <try_count>
    2430:	ea e7       	ldi	r30, 0x7A	; 122
    2432:	f5 e0       	ldi	r31, 0x05	; 5
    2434:	81 85       	ldd	r24, Z+9	; 0x09
    2436:	8f 5f       	subi	r24, 0xFF	; 255
    2438:	81 87       	std	Z+9, r24	; 0x09
    243a:	08 95       	ret

0000243c <servo_open>:
    243c:	cf 93       	push	r28
    243e:	c8 2f       	mov	r28, r24
    2440:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <servoD>
    2444:	9f ef       	ldi	r25, 0xFF	; 255
    2446:	98 0f       	add	r25, r24
    2448:	93 30       	cpi	r25, 0x03	; 3
    244a:	c0 f4       	brcc	.+48     	; 0x247c <servo_open+0x40>
    244c:	ea e7       	ldi	r30, 0x7A	; 122
    244e:	f5 e0       	ldi	r31, 0x05	; 5
    2450:	82 e0       	ldi	r24, 0x02	; 2
    2452:	80 83       	st	Z, r24
    2454:	c3 83       	std	Z+3, r28	; 0x03
    2456:	8c 2f       	mov	r24, r28
    2458:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    245c:	1f 92       	push	r1
    245e:	cf 93       	push	r28
    2460:	8c eb       	ldi	r24, 0xBC	; 188
    2462:	92 e0       	ldi	r25, 0x02	; 2
    2464:	9f 93       	push	r25
    2466:	8f 93       	push	r24
    2468:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    246c:	96 9a       	sbi	0x12, 6	; 18
    246e:	0f 90       	pop	r0
    2470:	0f 90       	pop	r0
    2472:	0f 90       	pop	r0
    2474:	0f 90       	pop	r0
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	09 c0       	rjmp	.+18     	; 0x248e <servo_open+0x52>
    247c:	84 30       	cpi	r24, 0x04	; 4
    247e:	29 f4       	brne	.+10     	; 0x248a <servo_open+0x4e>
    2480:	0e 94 04 12 	call	0x2408	; 0x2408 <servo_exit_try>
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	02 c0       	rjmp	.+4      	; 0x248e <servo_open+0x52>
    248a:	80 e0       	ldi	r24, 0x00	; 0
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	cf 91       	pop	r28
    2490:	08 95       	ret

00002492 <servo_process>:
    2492:	cf 93       	push	r28
    2494:	df 93       	push	r29
    2496:	c8 2f       	mov	r28, r24
    2498:	4b e4       	ldi	r20, 0x4B	; 75
    249a:	50 e0       	ldi	r21, 0x00	; 0
    249c:	60 e0       	ldi	r22, 0x00	; 0
    249e:	70 e0       	ldi	r23, 0x00	; 0
    24a0:	8a ec       	ldi	r24, 0xCA	; 202
    24a2:	93 e0       	ldi	r25, 0x03	; 3
    24a4:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <evTime_process_period>
    24a8:	89 2b       	or	r24, r25
    24aa:	09 f4       	brne	.+2      	; 0x24ae <servo_process+0x1c>
    24ac:	b6 c0       	rjmp	.+364    	; 0x261a <servo_process+0x188>
    24ae:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <servoD>
    24b2:	84 30       	cpi	r24, 0x04	; 4
    24b4:	a1 f0       	breq	.+40     	; 0x24de <servo_process+0x4c>
    24b6:	30 f4       	brcc	.+12     	; 0x24c4 <servo_process+0x32>
    24b8:	82 30       	cpi	r24, 0x02	; 2
    24ba:	59 f0       	breq	.+22     	; 0x24d2 <servo_process+0x40>
    24bc:	83 30       	cpi	r24, 0x03	; 3
    24be:	09 f4       	brne	.+2      	; 0x24c2 <servo_process+0x30>
    24c0:	61 c0       	rjmp	.+194    	; 0x2584 <servo_process+0xf2>
    24c2:	9b c0       	rjmp	.+310    	; 0x25fa <servo_process+0x168>
    24c4:	85 30       	cpi	r24, 0x05	; 5
    24c6:	09 f4       	brne	.+2      	; 0x24ca <servo_process+0x38>
    24c8:	77 c0       	rjmp	.+238    	; 0x25b8 <servo_process+0x126>
    24ca:	86 30       	cpi	r24, 0x06	; 6
    24cc:	09 f4       	brne	.+2      	; 0x24d0 <servo_process+0x3e>
    24ce:	91 c0       	rjmp	.+290    	; 0x25f2 <servo_process+0x160>
    24d0:	94 c0       	rjmp	.+296    	; 0x25fa <servo_process+0x168>
    24d2:	c0 93 7d 05 	sts	0x057D, r28	; 0x80057d <servoD+0x3>
    24d6:	8c 2f       	mov	r24, r28
    24d8:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    24dc:	8e c0       	rjmp	.+284    	; 0x25fa <servo_process+0x168>
    24de:	80 91 cf 03 	lds	r24, 0x03CF	; 0x8003cf <try_count>
    24e2:	81 11       	cpse	r24, r1
    24e4:	13 c0       	rjmp	.+38     	; 0x250c <servo_process+0x7a>
    24e6:	44 e6       	ldi	r20, 0x64	; 100
    24e8:	50 e0       	ldi	r21, 0x00	; 0
    24ea:	60 e0       	ldi	r22, 0x00	; 0
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	85 ec       	ldi	r24, 0xC5	; 197
    24f0:	93 e0       	ldi	r25, 0x03	; 3
    24f2:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    24f6:	80 91 cf 03 	lds	r24, 0x03CF	; 0x8003cf <try_count>
    24fa:	8f 5f       	subi	r24, 0xFF	; 255
    24fc:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <try_count>
    2500:	90 91 7d 05 	lds	r25, 0x057D	; 0x80057d <servoD+0x3>
    2504:	89 0f       	add	r24, r25
    2506:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    250a:	28 c0       	rjmp	.+80     	; 0x255c <servo_process+0xca>
    250c:	81 50       	subi	r24, 0x01	; 1
    250e:	89 30       	cpi	r24, 0x09	; 9
    2510:	c8 f4       	brcc	.+50     	; 0x2544 <servo_process+0xb2>
    2512:	85 ec       	ldi	r24, 0xC5	; 197
    2514:	93 e0       	ldi	r25, 0x03	; 3
    2516:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	f9 f4       	brne	.+62     	; 0x255c <servo_process+0xca>
    251e:	44 e6       	ldi	r20, 0x64	; 100
    2520:	50 e0       	ldi	r21, 0x00	; 0
    2522:	60 e0       	ldi	r22, 0x00	; 0
    2524:	70 e0       	ldi	r23, 0x00	; 0
    2526:	85 ec       	ldi	r24, 0xC5	; 197
    2528:	93 e0       	ldi	r25, 0x03	; 3
    252a:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    252e:	80 91 cf 03 	lds	r24, 0x03CF	; 0x8003cf <try_count>
    2532:	8f 5f       	subi	r24, 0xFF	; 255
    2534:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <try_count>
    2538:	90 91 7d 05 	lds	r25, 0x057D	; 0x80057d <servoD+0x3>
    253c:	89 0f       	add	r24, r25
    253e:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    2542:	0c c0       	rjmp	.+24     	; 0x255c <servo_process+0xca>
    2544:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <try_count>
    2548:	ca e7       	ldi	r28, 0x7A	; 122
    254a:	d5 e0       	ldi	r29, 0x05	; 5
    254c:	8b 81       	ldd	r24, Y+3	; 0x03
    254e:	0e 94 43 11 	call	0x2286	; 0x2286 <servo_set_pwm_val>
    2552:	89 81       	ldd	r24, Y+1	; 0x01
    2554:	88 83       	st	Y, r24
    2556:	89 85       	ldd	r24, Y+9	; 0x09
    2558:	8f 5f       	subi	r24, 0xFF	; 255
    255a:	89 87       	std	Y+9, r24	; 0x09
    255c:	20 91 7d 05 	lds	r18, 0x057D	; 0x80057d <servoD+0x3>
    2560:	80 91 cf 03 	lds	r24, 0x03CF	; 0x8003cf <try_count>
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	82 0f       	add	r24, r18
    2568:	91 1d       	adc	r25, r1
    256a:	9f 93       	push	r25
    256c:	8f 93       	push	r24
    256e:	8e ec       	ldi	r24, 0xCE	; 206
    2570:	92 e0       	ldi	r25, 0x02	; 2
    2572:	9f 93       	push	r25
    2574:	8f 93       	push	r24
    2576:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    257a:	0f 90       	pop	r0
    257c:	0f 90       	pop	r0
    257e:	0f 90       	pop	r0
    2580:	0f 90       	pop	r0
    2582:	3b c0       	rjmp	.+118    	; 0x25fa <servo_process+0x168>
    2584:	80 ec       	ldi	r24, 0xC0	; 192
    2586:	93 e0       	ldi	r25, 0x03	; 3
    2588:	0e 94 2c 17 	call	0x2e58	; 0x2e58 <evTime_is_stated>
    258c:	89 2b       	or	r24, r25
    258e:	59 f0       	breq	.+22     	; 0x25a6 <servo_process+0x114>
    2590:	80 ec       	ldi	r24, 0xC0	; 192
    2592:	93 e0       	ldi	r25, 0x03	; 3
    2594:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    2598:	01 97       	sbiw	r24, 0x01	; 1
    259a:	79 f5       	brne	.+94     	; 0x25fa <servo_process+0x168>
    259c:	82 e0       	ldi	r24, 0x02	; 2
    259e:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <servoD>
    25a2:	96 9a       	sbi	0x12, 6	; 18
    25a4:	2a c0       	rjmp	.+84     	; 0x25fa <servo_process+0x168>
    25a6:	40 ed       	ldi	r20, 0xD0	; 208
    25a8:	57 e0       	ldi	r21, 0x07	; 7
    25aa:	60 e0       	ldi	r22, 0x00	; 0
    25ac:	70 e0       	ldi	r23, 0x00	; 0
    25ae:	80 ec       	ldi	r24, 0xC0	; 192
    25b0:	93 e0       	ldi	r25, 0x03	; 3
    25b2:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    25b6:	21 c0       	rjmp	.+66     	; 0x25fa <servo_process+0x168>
    25b8:	8b eb       	ldi	r24, 0xBB	; 187
    25ba:	93 e0       	ldi	r25, 0x03	; 3
    25bc:	0e 94 2c 17 	call	0x2e58	; 0x2e58 <evTime_is_stated>
    25c0:	89 2b       	or	r24, r25
    25c2:	71 f0       	breq	.+28     	; 0x25e0 <servo_process+0x14e>
    25c4:	8b eb       	ldi	r24, 0xBB	; 187
    25c6:	93 e0       	ldi	r25, 0x03	; 3
    25c8:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	a9 f4       	brne	.+42     	; 0x25fa <servo_process+0x168>
    25d0:	86 e0       	ldi	r24, 0x06	; 6
    25d2:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <servoD>
    25d6:	8f e1       	ldi	r24, 0x1F	; 31
    25d8:	9e e4       	ldi	r25, 0x4E	; 78
    25da:	9b bd       	out	0x2b, r25	; 43
    25dc:	8a bd       	out	0x2a, r24	; 42
    25de:	0d c0       	rjmp	.+26     	; 0x25fa <servo_process+0x168>
    25e0:	40 ed       	ldi	r20, 0xD0	; 208
    25e2:	57 e0       	ldi	r21, 0x07	; 7
    25e4:	60 e0       	ldi	r22, 0x00	; 0
    25e6:	70 e0       	ldi	r23, 0x00	; 0
    25e8:	8b eb       	ldi	r24, 0xBB	; 187
    25ea:	93 e0       	ldi	r25, 0x03	; 3
    25ec:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    25f0:	04 c0       	rjmp	.+8      	; 0x25fa <servo_process+0x168>
    25f2:	8f e1       	ldi	r24, 0x1F	; 31
    25f4:	9e e4       	ldi	r25, 0x4E	; 78
    25f6:	9b bd       	out	0x2b, r25	; 43
    25f8:	8a bd       	out	0x2a, r24	; 42
    25fa:	8e e7       	ldi	r24, 0x7E	; 126
    25fc:	95 e0       	ldi	r25, 0x05	; 5
    25fe:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    2602:	01 97       	sbiw	r24, 0x01	; 1
    2604:	51 f4       	brne	.+20     	; 0x261a <servo_process+0x188>
    2606:	10 92 83 05 	sts	0x0583, r1	; 0x800583 <servoD+0x9>
    260a:	8c ed       	ldi	r24, 0xDC	; 220
    260c:	92 e0       	ldi	r25, 0x02	; 2
    260e:	9f 93       	push	r25
    2610:	8f 93       	push	r24
    2612:	0e 94 0a 02 	call	0x414	; 0x414 <debug_msg>
    2616:	0f 90       	pop	r0
    2618:	0f 90       	pop	r0
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	08 95       	ret

00002620 <off_button>:
}


void off_button(void)
{
	button1.timer_callback = 0;
    2620:	e5 e1       	ldi	r30, 0x15	; 21
    2622:	f5 e0       	ldi	r31, 0x05	; 5
    2624:	16 86       	std	Z+14, r1	; 0x0e
    2626:	15 86       	std	Z+13, r1	; 0x0d
	button1.rise_callback = 0;
    2628:	12 86       	std	Z+10, r1	; 0x0a
    262a:	11 86       	std	Z+9, r1	; 0x09
	button1.fall_callback = 0;
    262c:	14 86       	std	Z+12, r1	; 0x0c
    262e:	13 86       	std	Z+11, r1	; 0x0b
	
	button2.timer_callback = 0;
    2630:	e8 ee       	ldi	r30, 0xE8	; 232
    2632:	f4 e0       	ldi	r31, 0x04	; 4
    2634:	16 86       	std	Z+14, r1	; 0x0e
    2636:	15 86       	std	Z+13, r1	; 0x0d
	button2.rise_callback = 0;
    2638:	12 86       	std	Z+10, r1	; 0x0a
    263a:	11 86       	std	Z+9, r1	; 0x09
	button2.fall_callback = 0;
    263c:	14 86       	std	Z+12, r1	; 0x0c
    263e:	13 86       	std	Z+11, r1	; 0x0b
	
	button3.fall_callback = 0;
    2640:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <button3+0xc>
    2644:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <button3+0xb>
	
	button5.timer_callback = 0;
    2648:	e6 ec       	ldi	r30, 0xC6	; 198
    264a:	f4 e0       	ldi	r31, 0x04	; 4
    264c:	16 86       	std	Z+14, r1	; 0x0e
    264e:	15 86       	std	Z+13, r1	; 0x0d
	button5.fall_callback = 0;
    2650:	14 86       	std	Z+12, r1	; 0x0c
    2652:	13 86       	std	Z+11, r1	; 0x0b
	button5.rise_callback = 0;
    2654:	12 86       	std	Z+10, r1	; 0x0a
    2656:	11 86       	std	Z+9, r1	; 0x09
	
	button6.timer_callback = 0;
    2658:	e6 e0       	ldi	r30, 0x06	; 6
    265a:	f5 e0       	ldi	r31, 0x05	; 5
    265c:	16 86       	std	Z+14, r1	; 0x0e
    265e:	15 86       	std	Z+13, r1	; 0x0d
	button6.fall_callback = 0;
    2660:	14 86       	std	Z+12, r1	; 0x0c
    2662:	13 86       	std	Z+11, r1	; 0x0b
	button6.rise_callback = 0;
    2664:	12 86       	std	Z+10, r1	; 0x0a
    2666:	11 86       	std	Z+9, r1	; 0x09
	
	button7.fall_callback = 0;
    2668:	10 92 30 05 	sts	0x0530, r1	; 0x800530 <button7+0xc>
    266c:	10 92 2f 05 	sts	0x052F, r1	; 0x80052f <button7+0xb>
	
	button8.fall_callback = 0;
    2670:	e3 e3       	ldi	r30, 0x33	; 51
    2672:	f5 e0       	ldi	r31, 0x05	; 5
    2674:	14 86       	std	Z+12, r1	; 0x0c
    2676:	13 86       	std	Z+11, r1	; 0x0b
	button8.timer_callback = 0;
    2678:	16 86       	std	Z+14, r1	; 0x0e
    267a:	15 86       	std	Z+13, r1	; 0x0d
	button8.rise_callback = 0;
    267c:	12 86       	std	Z+10, r1	; 0x0a
    267e:	11 86       	std	Z+9, r1	; 0x09
	
	button9.fall_callback = 0;
    2680:	e8 ea       	ldi	r30, 0xA8	; 168
    2682:	f4 e0       	ldi	r31, 0x04	; 4
    2684:	14 86       	std	Z+12, r1	; 0x0c
    2686:	13 86       	std	Z+11, r1	; 0x0b
	button9.timer_callback = 0;
    2688:	16 86       	std	Z+14, r1	; 0x0e
    268a:	15 86       	std	Z+13, r1	; 0x0d
	button9.rise_callback = 0;
    268c:	12 86       	std	Z+10, r1	; 0x0a
    268e:	11 86       	std	Z+9, r1	; 0x09
	
	button10.fall_callback = 0;
    2690:	e7 eb       	ldi	r30, 0xB7	; 183
    2692:	f4 e0       	ldi	r31, 0x04	; 4
    2694:	14 86       	std	Z+12, r1	; 0x0c
    2696:	13 86       	std	Z+11, r1	; 0x0b
	button10.timer_callback = 0;
    2698:	16 86       	std	Z+14, r1	; 0x0e
    269a:	15 86       	std	Z+13, r1	; 0x0d
	button10.rise_callback = 0;
    269c:	12 86       	std	Z+10, r1	; 0x0a
    269e:	11 86       	std	Z+9, r1	; 0x09
    26a0:	08 95       	ret

000026a2 <button_motor_sub_timer_cb>:
/////////////////////////////////////////
//MOTOR SUB

void button_motor_sub_timer_cb(void * pv)
{
	if (state_measure_volt != 2)
    26a2:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    26a6:	82 30       	cpi	r24, 0x02	; 2
    26a8:	49 f0       	breq	.+18     	; 0x26bc <button_motor_sub_timer_cb+0x1a>
		SET_PIN(system_events, EV_MOTOR_DISP_FAST_SUB);
    26aa:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    26ae:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    26b2:	98 60       	ori	r25, 0x08	; 8
    26b4:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    26b8:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    26bc:	08 95       	ret

000026be <button_motor_add_timer_cb>:

/////////////////////////////////////////
//MOTOR ADD
void button_motor_add_timer_cb(void * pv)
{
	if (state_measure_volt != 2)
    26be:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    26c2:	82 30       	cpi	r24, 0x02	; 2
    26c4:	49 f0       	breq	.+18     	; 0x26d8 <button_motor_add_timer_cb+0x1a>
		SET_PIN(system_events, EV_MOTOR_DISP_FAST_ADD);
    26c6:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    26ca:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    26ce:	80 68       	ori	r24, 0x80	; 128
    26d0:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    26d4:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    26d8:	08 95       	ret

000026da <b_servo_vibro_sub_timer>:

/////////////////////////////////////////
//SERVO VIBRO SUB
void b_servo_vibro_sub_timer(void * pv)
{
	SET_PIN(system_events, EV_SERVO_DISP_FAST_SUB);
    26da:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    26de:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    26e2:	92 60       	ori	r25, 0x02	; 2
    26e4:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    26e8:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    26ec:	08 95       	ret

000026ee <b_servo_vibro_sub_rise>:
}

void b_servo_vibro_sub_rise(void * pv)
{
	CLEAR_PIN(system_events, EV_SERVO_DISP_FAST_SUB);
	CLEAR_PIN(system_events, EV_SERVO_DISP_VERY_FAST_SUB);
    26ee:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    26f2:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    26f6:	99 7f       	andi	r25, 0xF9	; 249
    26f8:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    26fc:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	counter_very_fast_motor_sub = 0;
    2700:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <counter_very_fast_motor_sub>
    2704:	08 95       	ret

00002706 <b_servo_vibro_add_timer>:

/////////////////////////////////////////
//SERVO VIBRO ADD
void b_servo_vibro_add_timer(void * pv)
{
	SET_PIN(system_events, EV_SERVO_DISP_FAST_ADD);
    2706:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    270a:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    270e:	80 62       	ori	r24, 0x20	; 32
    2710:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2714:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    2718:	08 95       	ret

0000271a <b_servo_vibro_add_rise>:
}

void b_servo_vibro_add_rise(void * pv)
{
	CLEAR_PIN(system_events, EV_SERVO_DISP_FAST_ADD);
	CLEAR_PIN(system_events, EV_SERVO_DISP_VERY_FAST_ADD);
    271a:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    271e:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2722:	8f 79       	andi	r24, 0x9F	; 159
    2724:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2728:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	counter_very_fast_motor_sub = 0;
    272c:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <counter_very_fast_motor_sub>
    2730:	08 95       	ret

00002732 <b_servo_vibro_sub_fall>:
	SET_PIN(system_events, EV_SERVO_DISP_FAST_SUB);
}

void b_servo_vibro_sub_fall(void * pv)
{
	ON_BUZZ_SIGNAL;
    2732:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2736:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    273a:	90 62       	ori	r25, 0x20	; 32
    273c:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2740:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
		dip_set_value(DISP_SERVO, servo_vibro_value);
		disp_set_state(DISP_ALL, SEG_VALUE);
	}
	
	#else
	if (servo_vibro_value > 10)
    2744:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    2748:	8b 30       	cpi	r24, 0x0B	; 11
    274a:	18 f0       	brcs	.+6      	; 0x2752 <b_servo_vibro_sub_fall+0x20>
	servo_vibro_value--;
    274c:	81 50       	subi	r24, 0x01	; 1
    274e:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <servo_vibro_value>
	dip_set_value(DISP_SERVO, servo_vibro_value);
    2752:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2756:	81 e0       	ldi	r24, 0x01	; 1
    2758:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	disp_set_state(DISP_ALL, SEG_VALUE);
    275c:	61 e0       	ldi	r22, 0x01	; 1
    275e:	82 e0       	ldi	r24, 0x02	; 2
    2760:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    2764:	08 95       	ret

00002766 <b_servo_vibro_add_fall>:
	SET_PIN(system_events, EV_SERVO_DISP_FAST_ADD);
}

void b_servo_vibro_add_fall(void * pv)
{
	ON_BUZZ_SIGNAL;
    2766:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    276a:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    276e:	90 62       	ori	r25, 0x20	; 32
    2770:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2774:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
		dip_set_value(DISP_SERVO, servo_vibro_value);
		disp_set_state(DISP_ALL, SEG_VALUE);
	}
	
	#else
	if (servo_vibro_value < 99)
    2778:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    277c:	83 36       	cpi	r24, 0x63	; 99
    277e:	18 f4       	brcc	.+6      	; 0x2786 <b_servo_vibro_add_fall+0x20>
	servo_vibro_value++;
    2780:	8f 5f       	subi	r24, 0xFF	; 255
    2782:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <servo_vibro_value>
	dip_set_value(DISP_SERVO, servo_vibro_value);
    2786:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	disp_set_state(DISP_ALL, SEG_VALUE);
    2790:	61 e0       	ldi	r22, 0x01	; 1
    2792:	82 e0       	ldi	r24, 0x02	; 2
    2794:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    2798:	08 95       	ret

0000279a <button_motor_sub_fall_cb>:
		SET_PIN(system_events, EV_MOTOR_DISP_FAST_SUB);
}

void button_motor_sub_fall_cb(void * pv)
{
	ON_BUZZ_SIGNAL;
    279a:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    279e:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    27a2:	90 62       	ori	r25, 0x20	; 32
    27a4:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    27a8:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	if (motor_value > 10)
    27ac:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <motor_value>
    27b0:	8b 30       	cpi	r24, 0x0B	; 11
    27b2:	18 f0       	brcs	.+6      	; 0x27ba <button_motor_sub_fall_cb+0x20>
		motor_value--;
    27b4:	81 50       	subi	r24, 0x01	; 1
    27b6:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <motor_value>
	dip_set_value(DISP_MOTOR, motor_value);
    27ba:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    27be:	80 e0       	ldi	r24, 0x00	; 0
    27c0:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	if (disp_get_state(DISP_MOTOR) == SEG_ANIMATION)
    27c4:	80 e0       	ldi	r24, 0x00	; 0
    27c6:	0e 94 5e 09 	call	0x12bc	; 0x12bc <disp_get_state>
    27ca:	02 97       	sbiw	r24, 0x02	; 2
    27cc:	29 f4       	brne	.+10     	; 0x27d8 <button_motor_sub_fall_cb+0x3e>
		disp_set_state(DISP_ALL, SEG_VALUE);
    27ce:	61 e0       	ldi	r22, 0x01	; 1
    27d0:	82 e0       	ldi	r24, 0x02	; 2
    27d2:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    27d6:	04 c0       	rjmp	.+8      	; 0x27e0 <button_motor_sub_fall_cb+0x46>
	else disp_set_state(DISP_MOTOR, SEG_VALUE);
    27d8:	61 e0       	ldi	r22, 0x01	; 1
    27da:	80 e0       	ldi	r24, 0x00	; 0
    27dc:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
	state_measure_volt++;
    27e0:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    27e4:	8f 5f       	subi	r24, 0xFF	; 255
    27e6:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <state_measure_volt>
	if (state_measure_volt == 2)
    27ea:	82 30       	cpi	r24, 0x02	; 2
    27ec:	19 f4       	brne	.+6      	; 0x27f4 <button_motor_sub_fall_cb+0x5a>
	{
		disp_set_state(DISP_ALL, SEG_VOLTAGE);
    27ee:	66 e0       	ldi	r22, 0x06	; 6
    27f0:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    27f4:	08 95       	ret

000027f6 <button_motor_add_fall_cb>:
		SET_PIN(system_events, EV_MOTOR_DISP_FAST_ADD);
}

void button_motor_add_fall_cb(void * pv)
{
	ON_BUZZ_SIGNAL;
    27f6:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    27fa:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    27fe:	90 62       	ori	r25, 0x20	; 32
    2800:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2804:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	if (motor_value < 99)
    2808:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <motor_value>
    280c:	83 36       	cpi	r24, 0x63	; 99
    280e:	18 f4       	brcc	.+6      	; 0x2816 <button_motor_add_fall_cb+0x20>
		motor_value++;
    2810:	8f 5f       	subi	r24, 0xFF	; 255
    2812:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <motor_value>
	dip_set_value(DISP_MOTOR, motor_value);
    2816:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    281a:	80 e0       	ldi	r24, 0x00	; 0
    281c:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	if (disp_get_state(DISP_MOTOR) == SEG_ANIMATION)
    2820:	80 e0       	ldi	r24, 0x00	; 0
    2822:	0e 94 5e 09 	call	0x12bc	; 0x12bc <disp_get_state>
    2826:	02 97       	sbiw	r24, 0x02	; 2
    2828:	29 f4       	brne	.+10     	; 0x2834 <button_motor_add_fall_cb+0x3e>
	disp_set_state(DISP_ALL, SEG_VALUE);
    282a:	61 e0       	ldi	r22, 0x01	; 1
    282c:	82 e0       	ldi	r24, 0x02	; 2
    282e:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    2832:	04 c0       	rjmp	.+8      	; 0x283c <button_motor_add_fall_cb+0x46>
	else disp_set_state(DISP_MOTOR, SEG_VALUE);
    2834:	61 e0       	ldi	r22, 0x01	; 1
    2836:	80 e0       	ldi	r24, 0x00	; 0
    2838:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
	state_measure_volt++;
    283c:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    2840:	8f 5f       	subi	r24, 0xFF	; 255
    2842:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <state_measure_volt>
	if (state_measure_volt == 2)
    2846:	82 30       	cpi	r24, 0x02	; 2
    2848:	19 f4       	brne	.+6      	; 0x2850 <button_motor_add_fall_cb+0x5a>
	{
		disp_set_state(DISP_ALL, SEG_VOLTAGE);
    284a:	66 e0       	ldi	r22, 0x06	; 6
    284c:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    2850:	08 95       	ret

00002852 <button_motor_sub_rise_cb>:
	}
}

void button_motor_sub_rise_cb(void * pv)
{
	disp_disable_voltage();
    2852:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disp_disable_voltage>
	CLEAR_PIN(system_events, EV_MOTOR_DISP_FAST_SUB);
	CLEAR_PIN(system_events, EV_MOTOR_DISP_VERY_FAST_SUB);
    2856:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    285a:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    285e:	97 7e       	andi	r25, 0xE7	; 231
    2860:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2864:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	counter_very_fast_motor_sub = 0;
    2868:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <counter_very_fast_motor_sub>
	if (state_measure_volt != 0)
    286c:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    2870:	88 23       	and	r24, r24
    2872:	19 f0       	breq	.+6      	; 0x287a <button_motor_sub_rise_cb+0x28>
		state_measure_volt--;
    2874:	81 50       	subi	r24, 0x01	; 1
    2876:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <state_measure_volt>
	if (disp_get_state(DISP_MOTOR) == SEG_ANIMATION)
    287a:	80 e0       	ldi	r24, 0x00	; 0
    287c:	0e 94 5e 09 	call	0x12bc	; 0x12bc <disp_get_state>
    2880:	02 97       	sbiw	r24, 0x02	; 2
    2882:	29 f4       	brne	.+10     	; 0x288e <button_motor_sub_rise_cb+0x3c>
	disp_set_state(DISP_ALL, SEG_VALUE);
    2884:	61 e0       	ldi	r22, 0x01	; 1
    2886:	82 e0       	ldi	r24, 0x02	; 2
    2888:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    288c:	08 95       	ret
	else disp_set_state(DISP_MOTOR, SEG_VALUE);
    288e:	61 e0       	ldi	r22, 0x01	; 1
    2890:	80 e0       	ldi	r24, 0x00	; 0
    2892:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    2896:	08 95       	ret

00002898 <button_motor_add_rise_cb>:
	}
}

void button_motor_add_rise_cb(void * pv)
{
	disp_disable_voltage();
    2898:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disp_disable_voltage>
	CLEAR_PIN(system_events, EV_MOTOR_DISP_FAST_ADD);
	CLEAR_PIN(system_events, EV_MOTOR_DISP_VERY_FAST_ADD);
    289c:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    28a0:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    28a4:	8f 77       	andi	r24, 0x7F	; 127
    28a6:	9e 7f       	andi	r25, 0xFE	; 254
    28a8:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    28ac:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	counter_very_fast_motor_sub = 0;
    28b0:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <counter_very_fast_motor_sub>
	if (state_measure_volt != 0)
    28b4:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <state_measure_volt>
    28b8:	88 23       	and	r24, r24
    28ba:	19 f0       	breq	.+6      	; 0x28c2 <button_motor_add_rise_cb+0x2a>
		state_measure_volt--;
    28bc:	81 50       	subi	r24, 0x01	; 1
    28be:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <state_measure_volt>
	if (disp_get_state(DISP_MOTOR) == SEG_ANIMATION)
    28c2:	80 e0       	ldi	r24, 0x00	; 0
    28c4:	0e 94 5e 09 	call	0x12bc	; 0x12bc <disp_get_state>
    28c8:	02 97       	sbiw	r24, 0x02	; 2
    28ca:	29 f4       	brne	.+10     	; 0x28d6 <button_motor_add_rise_cb+0x3e>
	disp_set_state(DISP_ALL, SEG_VALUE);
    28cc:	61 e0       	ldi	r22, 0x01	; 1
    28ce:	82 e0       	ldi	r24, 0x02	; 2
    28d0:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    28d4:	08 95       	ret
	else disp_set_state(DISP_MOTOR, SEG_VALUE);
    28d6:	61 e0       	ldi	r22, 0x01	; 1
    28d8:	80 e0       	ldi	r24, 0x00	; 0
    28da:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
    28de:	08 95       	ret

000028e0 <sys_save_display>:
		motor_value = mem_last_save.first_disp_val;
}

static void sys_save_display(void)
{
	mem_save_prog.first_disp_val = motor_value;
    28e0:	e6 e8       	ldi	r30, 0x86	; 134
    28e2:	f5 e0       	ldi	r31, 0x05	; 5
    28e4:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <motor_value>
    28e8:	80 83       	st	Z, r24
	mem_save_prog.second_disp_val = servo_vibro_value;
    28ea:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    28ee:	81 83       	std	Z+1, r24	; 0x01
	mem_save_data(MEM_LAST_DATA, &mem_save_prog);
    28f0:	bf 01       	movw	r22, r30
    28f2:	83 e0       	ldi	r24, 0x03	; 3
    28f4:	0e 94 bb 10 	call	0x2176	; 0x2176 <mem_save_data>
    28f8:	08 95       	ret

000028fa <button_dcmotor_cb>:
}


void button_dcmotor_cb(void * pv)
{
	ON_BUZZ_SIGNAL;
    28fa:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    28fe:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2902:	90 62       	ori	r25, 0x20	; 32
    2904:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2908:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	if (motor_value < 10)
    290c:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <motor_value>
    2910:	8a 30       	cpi	r24, 0x0A	; 10
    2912:	38 f4       	brcc	.+14     	; 0x2922 <button_dcmotor_cb+0x28>
	{
		motor_value = 10;
    2914:	8a e0       	ldi	r24, 0x0A	; 10
    2916:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <motor_value>
		dip_set_value(DISP_MOTOR, motor_value);
    291a:	6a e0       	ldi	r22, 0x0A	; 10
    291c:	80 e0       	ldi	r24, 0x00	; 0
    291e:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	}
	sys_save_display();
    2922:	0e 94 70 14 	call	0x28e0	; 0x28e0 <sys_save_display>
	if(!dcmotor_is_on())
    2926:	0e 94 f7 06 	call	0xdee	; 0xdee <dcmotor_is_on>
    292a:	89 2b       	or	r24, r25
    292c:	39 f4       	brne	.+14     	; 0x293c <button_dcmotor_cb+0x42>
	{ 
		dcmotorpwm_start();
    292e:	0e 94 1a 07 	call	0xe34	; 0xe34 <dcmotorpwm_start>
		#if CONFIG_DEVICE_SIEWNIK
		servo_delayed_open(servo_vibro_value);
    2932:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    2936:	0e 94 b4 11 	call	0x2368	; 0x2368 <servo_delayed_open>
    293a:	08 95       	ret
		#endif
	}
	else 
	{
		dcmotorpwm_stop();
    293c:	0e 94 02 07 	call	0xe04	; 0xe04 <dcmotorpwm_stop>
		#if CONFIG_DEVICE_SIEWNIK
		servo_close();
    2940:	0e 94 df 11 	call	0x23be	; 0x23be <servo_close>
    2944:	08 95       	ret

00002946 <button_on_off_pwm>:
	}
}
#if CONFIG_DEVICE_SIEWNIK
void button_on_off_pwm(void * pv)
{
	ON_BUZZ_SIGNAL;
    2946:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    294a:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    294e:	90 62       	ori	r25, 0x20	; 32
    2950:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2954:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
	if (servo_vibro_value < 10)
    2958:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    295c:	8a 30       	cpi	r24, 0x0A	; 10
    295e:	38 f4       	brcc	.+14     	; 0x296e <button_on_off_pwm+0x28>
	{
		servo_vibro_value = 10;
    2960:	8a e0       	ldi	r24, 0x0A	; 10
    2962:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <servo_vibro_value>
		dip_set_value(DISP_SERVO, servo_vibro_value);
    2966:	6a e0       	ldi	r22, 0x0A	; 10
    2968:	81 e0       	ldi	r24, 0x01	; 1
    296a:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	}
	
	if (servo_is_open()) servo_close();
    296e:	0e 94 a9 11 	call	0x2352	; 0x2352 <servo_is_open>
    2972:	89 2b       	or	r24, r25
    2974:	19 f0       	breq	.+6      	; 0x297c <button_on_off_pwm+0x36>
    2976:	0e 94 df 11 	call	0x23be	; 0x23be <servo_close>
    297a:	08 95       	ret
	else servo_open(servo_vibro_value);
    297c:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <servo_vibro_value>
    2980:	0e 94 1e 12 	call	0x243c	; 0x243c <servo_open>
    2984:	08 95       	ret

00002986 <init_system>:
	mem_save_data(MEM_LAST_DATA, &mem_save_prog);
}

void init_system(void)
{
	button4.rise_callback = button4_toggle_system;
    2986:	8a e6       	ldi	r24, 0x6A	; 106
    2988:	95 e1       	ldi	r25, 0x15	; 21
    298a:	90 93 df 04 	sts	0x04DF, r25	; 0x8004df <button4+0xa>
    298e:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <button4+0x9>
	disp_set_state(DISP_ALL,SEG_OFF);
    2992:	60 e0       	ldi	r22, 0x00	; 0
    2994:	82 e0       	ldi	r24, 0x02	; 2
    2996:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
	disp_off_segments();
    299a:	0e 94 c5 09 	call	0x138a	; 0x138a <disp_off_segments>
mem_program mem_last_save;
mem_program mem_save_prog;

static void sys_read_display(void)
{
	mem_read_data(MEM_LAST_DATA, &mem_last_save);
    299e:	64 e8       	ldi	r22, 0x84	; 132
    29a0:	75 e0       	ldi	r23, 0x05	; 5
    29a2:	83 e0       	ldi	r24, 0x03	; 3
    29a4:	0e 94 ff 10 	call	0x21fe	; 0x21fe <mem_read_data>
	if (mem_last_save.second_disp_val >=10 && mem_last_save.second_disp_val < 100)
    29a8:	80 91 85 05 	lds	r24, 0x0585	; 0x800585 <mem_last_save+0x1>
    29ac:	96 ef       	ldi	r25, 0xF6	; 246
    29ae:	98 0f       	add	r25, r24
    29b0:	9a 35       	cpi	r25, 0x5A	; 90
    29b2:	10 f4       	brcc	.+4      	; 0x29b8 <init_system+0x32>
		servo_vibro_value = mem_last_save.second_disp_val;
    29b4:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <servo_vibro_value>
	if (mem_last_save.first_disp_val >=10 && mem_last_save.first_disp_val < 100)
    29b8:	80 91 84 05 	lds	r24, 0x0584	; 0x800584 <mem_last_save>
    29bc:	96 ef       	ldi	r25, 0xF6	; 246
    29be:	98 0f       	add	r25, r24
    29c0:	9a 35       	cpi	r25, 0x5A	; 90
    29c2:	10 f4       	brcc	.+4      	; 0x29c8 <init_system+0x42>
		motor_value = mem_last_save.first_disp_val;
    29c4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <motor_value>
    29c8:	08 95       	ret

000029ca <on_system>:
}


void on_system(void)
{
	state_measure_volt = 0;
    29ca:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <state_measure_volt>
	on_animation(ANIMATION_TIME_MS, DISP_ALL);
    29ce:	42 e0       	ldi	r20, 0x02	; 2
    29d0:	68 ee       	ldi	r22, 0xE8	; 232
    29d2:	73 e0       	ldi	r23, 0x03	; 3
    29d4:	80 e0       	ldi	r24, 0x00	; 0
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	0e 94 17 0b 	call	0x162e	; 0x162e <on_animation>
	
	#endif
	#if CONFIG_DEVICE_SOLARKA
	vibro_init();
	#endif
	dcmotorpwm_init();
    29dc:	0e 94 dd 06 	call	0xdba	; 0xdba <dcmotorpwm_init>
	#if CONFIG_DEVICE_SIEWNIK
	servo_init(0);
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	0e 94 76 11 	call	0x22ec	; 0x22ec <servo_init>
	#endif
	error_init();
    29e6:	0e 94 df 0b 	call	0x17be	; 0x17be <error_init>
	init_measure();
    29ea:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <init_measure>
	init_buzzer();
    29ee:	0e 94 53 05 	call	0xaa6	; 0xaa6 <init_buzzer>
	system_events = 0;
	SET_PIN(system_events, EV_SYSTEM_STATE);
    29f2:	81 e0       	ldi	r24, 0x01	; 1
    29f4:	90 e0       	ldi	r25, 0x00	; 0
    29f6:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    29fa:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
}


static void on_button(void)
{
 	button1.timer_callback = button_motor_sub_timer_cb;
    29fe:	e5 e1       	ldi	r30, 0x15	; 21
    2a00:	f5 e0       	ldi	r31, 0x05	; 5
    2a02:	81 e5       	ldi	r24, 0x51	; 81
    2a04:	93 e1       	ldi	r25, 0x13	; 19
    2a06:	96 87       	std	Z+14, r25	; 0x0e
    2a08:	85 87       	std	Z+13, r24	; 0x0d
 	button1.fall_callback = button_motor_sub_fall_cb;
    2a0a:	8d ec       	ldi	r24, 0xCD	; 205
    2a0c:	93 e1       	ldi	r25, 0x13	; 19
    2a0e:	94 87       	std	Z+12, r25	; 0x0c
    2a10:	83 87       	std	Z+11, r24	; 0x0b
 	button1.rise_callback = button_motor_sub_rise_cb;
    2a12:	89 e2       	ldi	r24, 0x29	; 41
    2a14:	94 e1       	ldi	r25, 0x14	; 20
    2a16:	92 87       	std	Z+10, r25	; 0x0a
    2a18:	81 87       	std	Z+9, r24	; 0x09
// 	
	button2.timer_callback = button_motor_add_timer_cb;
    2a1a:	e8 ee       	ldi	r30, 0xE8	; 232
    2a1c:	f4 e0       	ldi	r31, 0x04	; 4
    2a1e:	8f e5       	ldi	r24, 0x5F	; 95
    2a20:	93 e1       	ldi	r25, 0x13	; 19
    2a22:	96 87       	std	Z+14, r25	; 0x0e
    2a24:	85 87       	std	Z+13, r24	; 0x0d
	button2.fall_callback = button_motor_add_fall_cb;
    2a26:	8b ef       	ldi	r24, 0xFB	; 251
    2a28:	93 e1       	ldi	r25, 0x13	; 19
    2a2a:	94 87       	std	Z+12, r25	; 0x0c
    2a2c:	83 87       	std	Z+11, r24	; 0x0b
	button2.rise_callback = button_motor_add_rise_cb;
    2a2e:	8c e4       	ldi	r24, 0x4C	; 76
    2a30:	94 e1       	ldi	r25, 0x14	; 20
    2a32:	92 87       	std	Z+10, r25	; 0x0a
    2a34:	81 87       	std	Z+9, r24	; 0x09
// 	
 	button3.fall_callback = button_dcmotor_cb;
    2a36:	8d e7       	ldi	r24, 0x7D	; 125
    2a38:	94 e1       	ldi	r25, 0x14	; 20
    2a3a:	90 93 03 05 	sts	0x0503, r25	; 0x800503 <button3+0xc>
    2a3e:	80 93 02 05 	sts	0x0502, r24	; 0x800502 <button3+0xb>
// 		
	button5.timer_callback = b_servo_vibro_sub_timer;
    2a42:	e6 ec       	ldi	r30, 0xC6	; 198
    2a44:	f4 e0       	ldi	r31, 0x04	; 4
    2a46:	8d e6       	ldi	r24, 0x6D	; 109
    2a48:	93 e1       	ldi	r25, 0x13	; 19
    2a4a:	96 87       	std	Z+14, r25	; 0x0e
    2a4c:	85 87       	std	Z+13, r24	; 0x0d
	button5.rise_callback = b_servo_vibro_sub_rise;
    2a4e:	87 e7       	ldi	r24, 0x77	; 119
    2a50:	93 e1       	ldi	r25, 0x13	; 19
    2a52:	92 87       	std	Z+10, r25	; 0x0a
    2a54:	81 87       	std	Z+9, r24	; 0x09
	button5.fall_callback = b_servo_vibro_sub_fall;
    2a56:	89 e9       	ldi	r24, 0x99	; 153
    2a58:	93 e1       	ldi	r25, 0x13	; 19
    2a5a:	94 87       	std	Z+12, r25	; 0x0c
    2a5c:	83 87       	std	Z+11, r24	; 0x0b
	
	button6.timer_callback = b_servo_vibro_add_timer;
    2a5e:	e6 e0       	ldi	r30, 0x06	; 6
    2a60:	f5 e0       	ldi	r31, 0x05	; 5
    2a62:	83 e8       	ldi	r24, 0x83	; 131
    2a64:	93 e1       	ldi	r25, 0x13	; 19
    2a66:	96 87       	std	Z+14, r25	; 0x0e
    2a68:	85 87       	std	Z+13, r24	; 0x0d
	button6.rise_callback = b_servo_vibro_add_rise;
    2a6a:	8d e8       	ldi	r24, 0x8D	; 141
    2a6c:	93 e1       	ldi	r25, 0x13	; 19
    2a6e:	92 87       	std	Z+10, r25	; 0x0a
    2a70:	81 87       	std	Z+9, r24	; 0x09
	button6.fall_callback = b_servo_vibro_add_fall;
    2a72:	83 eb       	ldi	r24, 0xB3	; 179
    2a74:	93 e1       	ldi	r25, 0x13	; 19
    2a76:	94 87       	std	Z+12, r25	; 0x0c
    2a78:	83 87       	std	Z+11, r24	; 0x0b
// 	
	#if CONFIG_DEVICE_SIEWNIK
 	button7.fall_callback = button_on_off_pwm;
    2a7a:	83 ea       	ldi	r24, 0xA3	; 163
    2a7c:	94 e1       	ldi	r25, 0x14	; 20
    2a7e:	90 93 30 05 	sts	0x0530, r25	; 0x800530 <button7+0xc>
    2a82:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <button7+0xb>
	system_events = 0;
	SET_PIN(system_events, EV_SYSTEM_STATE);
	on_button();
	#if DARK_MENU
	#endif
	dip_set_value(DISP_MOTOR, motor_value);
    2a86:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    2a8a:	80 e0       	ldi	r24, 0x00	; 0
    2a8c:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
	dip_set_value(DISP_SERVO, servo_vibro_value);
    2a90:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2a94:	81 e0       	ldi	r24, 0x01	; 1
    2a96:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
    2a9a:	08 95       	ret

00002a9c <off_system>:
	//debug_msg("SYS: On system\n");
}

void off_system(void)
{
	state_measure_volt = 0;
    2a9c:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <state_measure_volt>
	dcmotorpwm_deinit();
    2aa0:	0e 94 f1 06 	call	0xde2	; 0xde2 <dcmotorpwm_deinit>
	off_button();
    2aa4:	0e 94 10 13 	call	0x2620	; 0x2620 <off_button>
	error_deinit();
    2aa8:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <error_deinit>
	#if CONFIG_DEVICE_SIEWNIK
	servo_close();
    2aac:	0e 94 df 11 	call	0x23be	; 0x23be <servo_close>
	#endif
	#if CONFIG_DEVICE_SOLARKA
	vibro_deInit();
	#endif
	system_events = 0;
    2ab0:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <system_events+0x1>
    2ab4:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <system_events>
	disp_set_state(DISP_ALL,SEG_OFF);
    2ab8:	60 e0       	ldi	r22, 0x00	; 0
    2aba:	82 e0       	ldi	r24, 0x02	; 2
    2abc:	0e 94 7f 09 	call	0x12fe	; 0x12fe <disp_set_state>
	CLEAR_PIN(system_events, EV_SYSTEM_STATE);
    2ac0:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2ac4:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2ac8:	8e 7f       	andi	r24, 0xFE	; 254
    2aca:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2ace:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    2ad2:	08 95       	ret

00002ad4 <button4_toggle_system>:
}
#endif

void button4_toggle_system(void *pv)
{
	sys_save_display();
    2ad4:	0e 94 70 14 	call	0x28e0	; 0x28e0 <sys_save_display>
	if (system_events&(1<<EV_SYSTEM_STATE))
    2ad8:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2adc:	80 ff       	sbrs	r24, 0
    2ade:	03 c0       	rjmp	.+6      	; 0x2ae6 <button4_toggle_system+0x12>
	{
		off_system();
    2ae0:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <off_system>
    2ae4:	02 c0       	rjmp	.+4      	; 0x2aea <button4_toggle_system+0x16>
	}
	else
	{
		on_system();
    2ae6:	0e 94 e5 14 	call	0x29ca	; 0x29ca <on_system>
	}
	ON_BUZZ_SIGNAL;
    2aea:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2aee:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2af2:	90 62       	ori	r25, 0x20	; 32
    2af4:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2af8:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
    2afc:	08 95       	ret

00002afe <disp_fast_process>:


void disp_fast_process(void)
{
	static timer_t disp_fast_timer;
	if (disp_fast_timer < mktime.ms)
    2afe:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    2b02:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    2b06:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    2b0a:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    2b0e:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <disp_fast_timer.2114>
    2b12:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <disp_fast_timer.2114+0x1>
    2b16:	a0 91 d2 03 	lds	r26, 0x03D2	; 0x8003d2 <disp_fast_timer.2114+0x2>
    2b1a:	b0 91 d3 03 	lds	r27, 0x03D3	; 0x8003d3 <disp_fast_timer.2114+0x3>
    2b1e:	84 17       	cp	r24, r20
    2b20:	95 07       	cpc	r25, r21
    2b22:	a6 07       	cpc	r26, r22
    2b24:	b7 07       	cpc	r27, r23
    2b26:	08 f0       	brcs	.+2      	; 0x2b2a <disp_fast_process+0x2c>
    2b28:	9c c0       	rjmp	.+312    	; 0x2c62 <disp_fast_process+0x164>
	{
		if (system_events&(1<<EV_SERVO_DISP_FAST_ADD) && servo_vibro_value < 99)
    2b2a:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2b2e:	85 ff       	sbrs	r24, 5
    2b30:	1d c0       	rjmp	.+58     	; 0x2b6c <disp_fast_process+0x6e>
    2b32:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2b36:	63 36       	cpi	r22, 0x63	; 99
    2b38:	c8 f4       	brcc	.+50     	; 0x2b6c <disp_fast_process+0x6e>
				dip_set_value(DISP_SERVO, servo_vibro_value);
				disp_set_state(DISP_ALL, SEG_VALUE);
			}
			
			#else
			dip_set_value(DISP_SERVO, ++servo_vibro_value);
    2b3a:	6f 5f       	subi	r22, 0xFF	; 255
    2b3c:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <servo_vibro_value>
    2b40:	81 e0       	ldi	r24, 0x01	; 1
    2b42:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			#endif
			counter_very_fast_servo_add++;
    2b46:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <counter_very_fast_servo_add>
    2b4a:	8f 5f       	subi	r24, 0xFF	; 255
    2b4c:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <counter_very_fast_servo_add>
			if (counter_very_fast_servo_add >= VERY_FAST_COUNTER_OVF)
    2b50:	8f 30       	cpi	r24, 0x0F	; 15
    2b52:	60 f0       	brcs	.+24     	; 0x2b6c <disp_fast_process+0x6e>
			{
				SET_PIN(system_events, EV_SERVO_DISP_VERY_FAST_ADD);
				CLEAR_PIN(system_events, EV_SERVO_DISP_FAST_ADD);
    2b54:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2b58:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2b5c:	8f 7d       	andi	r24, 0xDF	; 223
    2b5e:	80 64       	ori	r24, 0x40	; 64
    2b60:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2b64:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
				counter_very_fast_servo_add = 0;
    2b68:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <counter_very_fast_servo_add>
			}
		}
		if (system_events&(1<<EV_SERVO_DISP_FAST_SUB) && servo_vibro_value > 0)
    2b6c:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2b70:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2b74:	91 ff       	sbrs	r25, 1
    2b76:	1d c0       	rjmp	.+58     	; 0x2bb2 <disp_fast_process+0xb4>
    2b78:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2b7c:	66 23       	and	r22, r22
    2b7e:	c9 f0       	breq	.+50     	; 0x2bb2 <disp_fast_process+0xb4>
				dip_set_value(DISP_SERVO, servo_vibro_value);
				disp_set_state(DISP_ALL, SEG_VALUE);
			}
			
			#else
			dip_set_value(DISP_SERVO, --servo_vibro_value);
    2b80:	61 50       	subi	r22, 0x01	; 1
    2b82:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <servo_vibro_value>
    2b86:	81 e0       	ldi	r24, 0x01	; 1
    2b88:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			#endif
			counter_very_fast_servo_sub++;
    2b8c:	80 91 db 03 	lds	r24, 0x03DB	; 0x8003db <counter_very_fast_servo_sub>
    2b90:	8f 5f       	subi	r24, 0xFF	; 255
    2b92:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <counter_very_fast_servo_sub>
			if (counter_very_fast_servo_sub >= VERY_FAST_COUNTER_OVF)
    2b96:	8f 30       	cpi	r24, 0x0F	; 15
    2b98:	60 f0       	brcs	.+24     	; 0x2bb2 <disp_fast_process+0xb4>
			{
				SET_PIN(system_events, EV_SERVO_DISP_VERY_FAST_SUB);
				CLEAR_PIN(system_events, EV_SERVO_DISP_FAST_SUB);
    2b9a:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2b9e:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2ba2:	9d 7f       	andi	r25, 0xFD	; 253
    2ba4:	94 60       	ori	r25, 0x04	; 4
    2ba6:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2baa:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
				counter_very_fast_servo_sub = 0;
    2bae:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <counter_very_fast_servo_sub>
			}
		}
		
		if (system_events&(1<<EV_MOTOR_DISP_FAST_ADD) && motor_value < 99)
    2bb2:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2bb6:	87 ff       	sbrs	r24, 7
    2bb8:	1d c0       	rjmp	.+58     	; 0x2bf4 <disp_fast_process+0xf6>
    2bba:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    2bbe:	63 36       	cpi	r22, 0x63	; 99
    2bc0:	c8 f4       	brcc	.+50     	; 0x2bf4 <disp_fast_process+0xf6>
		{
			///////////////////////////////////////
			/// opoznienie eroru serwa
			dip_set_value(DISP_MOTOR, ++motor_value);
    2bc2:	6f 5f       	subi	r22, 0xFF	; 255
    2bc4:	60 93 66 04 	sts	0x0466, r22	; 0x800466 <motor_value>
    2bc8:	80 e0       	ldi	r24, 0x00	; 0
    2bca:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			counter_very_fast_motor_add++;
    2bce:	80 91 da 03 	lds	r24, 0x03DA	; 0x8003da <counter_very_fast_motor_add>
    2bd2:	8f 5f       	subi	r24, 0xFF	; 255
    2bd4:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <counter_very_fast_motor_add>
			if (counter_very_fast_motor_add >= VERY_FAST_COUNTER_OVF)
    2bd8:	8f 30       	cpi	r24, 0x0F	; 15
    2bda:	60 f0       	brcs	.+24     	; 0x2bf4 <disp_fast_process+0xf6>
			{
				SET_PIN(system_events, EV_MOTOR_DISP_VERY_FAST_ADD);
				CLEAR_PIN(system_events, EV_MOTOR_DISP_FAST_ADD);
    2bdc:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2be0:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2be4:	8f 77       	andi	r24, 0x7F	; 127
    2be6:	91 60       	ori	r25, 0x01	; 1
    2be8:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2bec:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
				counter_very_fast_motor_add = 0;
    2bf0:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <counter_very_fast_motor_add>
			}
		}
		if (system_events&(1<<EV_MOTOR_DISP_FAST_SUB) && motor_value > 10)
    2bf4:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2bf8:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2bfc:	93 ff       	sbrs	r25, 3
    2bfe:	1d c0       	rjmp	.+58     	; 0x2c3a <disp_fast_process+0x13c>
    2c00:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    2c04:	6b 30       	cpi	r22, 0x0B	; 11
    2c06:	c8 f0       	brcs	.+50     	; 0x2c3a <disp_fast_process+0x13c>
		{
			///////////////////////////////////////
			/// opoznienie eroru serwa
			dip_set_value(DISP_MOTOR, --motor_value);
    2c08:	61 50       	subi	r22, 0x01	; 1
    2c0a:	60 93 66 04 	sts	0x0466, r22	; 0x800466 <motor_value>
    2c0e:	80 e0       	ldi	r24, 0x00	; 0
    2c10:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			counter_very_fast_motor_sub++;
    2c14:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <counter_very_fast_motor_sub>
    2c18:	8f 5f       	subi	r24, 0xFF	; 255
    2c1a:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <counter_very_fast_motor_sub>
			if (counter_very_fast_motor_sub >= VERY_FAST_COUNTER_OVF)
    2c1e:	8f 30       	cpi	r24, 0x0F	; 15
    2c20:	60 f0       	brcs	.+24     	; 0x2c3a <disp_fast_process+0x13c>
			{
				SET_PIN(system_events, EV_MOTOR_DISP_VERY_FAST_SUB);
				CLEAR_PIN(system_events, EV_MOTOR_DISP_FAST_SUB);
    2c22:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2c26:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2c2a:	97 7f       	andi	r25, 0xF7	; 247
    2c2c:	90 61       	ori	r25, 0x10	; 16
    2c2e:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <system_events+0x1>
    2c32:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <system_events>
				counter_very_fast_motor_sub = 0;
    2c36:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <counter_very_fast_motor_sub>
			}
		}
		disp_fast_timer += 80;
    2c3a:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <disp_fast_timer.2114>
    2c3e:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <disp_fast_timer.2114+0x1>
    2c42:	a0 91 d2 03 	lds	r26, 0x03D2	; 0x8003d2 <disp_fast_timer.2114+0x2>
    2c46:	b0 91 d3 03 	lds	r27, 0x03D3	; 0x8003d3 <disp_fast_timer.2114+0x3>
    2c4a:	80 5b       	subi	r24, 0xB0	; 176
    2c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c4e:	af 4f       	sbci	r26, 0xFF	; 255
    2c50:	bf 4f       	sbci	r27, 0xFF	; 255
    2c52:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <disp_fast_timer.2114>
    2c56:	90 93 d1 03 	sts	0x03D1, r25	; 0x8003d1 <disp_fast_timer.2114+0x1>
    2c5a:	a0 93 d2 03 	sts	0x03D2, r26	; 0x8003d2 <disp_fast_timer.2114+0x2>
    2c5e:	b0 93 d3 03 	sts	0x03D3, r27	; 0x8003d3 <disp_fast_timer.2114+0x3>
    2c62:	08 95       	ret

00002c64 <disp_very_fast_process>:

static timer_t disp_very_fast_timer;

void disp_very_fast_process(void)
{
	if (disp_very_fast_timer < mktime.ms)
    2c64:	40 91 8a 05 	lds	r20, 0x058A	; 0x80058a <mktime+0x2>
    2c68:	50 91 8b 05 	lds	r21, 0x058B	; 0x80058b <mktime+0x3>
    2c6c:	60 91 8c 05 	lds	r22, 0x058C	; 0x80058c <mktime+0x4>
    2c70:	70 91 8d 05 	lds	r23, 0x058D	; 0x80058d <mktime+0x5>
    2c74:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <disp_very_fast_timer>
    2c78:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <disp_very_fast_timer+0x1>
    2c7c:	a0 91 d6 03 	lds	r26, 0x03D6	; 0x8003d6 <disp_very_fast_timer+0x2>
    2c80:	b0 91 d7 03 	lds	r27, 0x03D7	; 0x8003d7 <disp_very_fast_timer+0x3>
    2c84:	84 17       	cp	r24, r20
    2c86:	95 07       	cpc	r25, r21
    2c88:	a6 07       	cpc	r26, r22
    2c8a:	b7 07       	cpc	r27, r23
    2c8c:	08 f0       	brcs	.+2      	; 0x2c90 <disp_very_fast_process+0x2c>
    2c8e:	51 c0       	rjmp	.+162    	; 0x2d32 <disp_very_fast_process+0xce>
	{
		if (servo_vibro_value < 99 && system_events&(1<<EV_SERVO_DISP_VERY_FAST_ADD))
    2c90:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2c94:	63 36       	cpi	r22, 0x63	; 99
    2c96:	50 f4       	brcc	.+20     	; 0x2cac <disp_very_fast_process+0x48>
    2c98:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2c9c:	86 ff       	sbrs	r24, 6
    2c9e:	06 c0       	rjmp	.+12     	; 0x2cac <disp_very_fast_process+0x48>
				dip_set_value(DISP_SERVO, servo_vibro_value);
				disp_set_state(DISP_ALL, SEG_VALUE);
			}
			
			#else
			dip_set_value(DISP_SERVO, ++servo_vibro_value);
    2ca0:	6f 5f       	subi	r22, 0xFF	; 255
    2ca2:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <servo_vibro_value>
    2ca6:	81 e0       	ldi	r24, 0x01	; 1
    2ca8:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			#endif
		}
		if (servo_vibro_value > 0 && system_events&(1<<EV_SERVO_DISP_VERY_FAST_SUB))
    2cac:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <servo_vibro_value>
    2cb0:	66 23       	and	r22, r22
    2cb2:	61 f0       	breq	.+24     	; 0x2ccc <disp_very_fast_process+0x68>
    2cb4:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2cb8:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2cbc:	92 ff       	sbrs	r25, 2
    2cbe:	06 c0       	rjmp	.+12     	; 0x2ccc <disp_very_fast_process+0x68>
				dip_set_value(DISP_SERVO, servo_vibro_value);
				disp_set_state(DISP_ALL, SEG_VALUE);
			}
			
			#else
			dip_set_value(DISP_SERVO, --servo_vibro_value);
    2cc0:	61 50       	subi	r22, 0x01	; 1
    2cc2:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <servo_vibro_value>
    2cc6:	81 e0       	ldi	r24, 0x01	; 1
    2cc8:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
			#endif
		}
		
		if (motor_value < 99 && system_events&(1<<EV_MOTOR_DISP_VERY_FAST_ADD))
    2ccc:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    2cd0:	63 36       	cpi	r22, 0x63	; 99
    2cd2:	60 f4       	brcc	.+24     	; 0x2cec <disp_very_fast_process+0x88>
    2cd4:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2cd8:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2cdc:	90 ff       	sbrs	r25, 0
    2cde:	06 c0       	rjmp	.+12     	; 0x2cec <disp_very_fast_process+0x88>
		{
			//ON_BUZZ_SIGNAL;
			dip_set_value(DISP_MOTOR,++motor_value);
    2ce0:	6f 5f       	subi	r22, 0xFF	; 255
    2ce2:	60 93 66 04 	sts	0x0466, r22	; 0x800466 <motor_value>
    2ce6:	80 e0       	ldi	r24, 0x00	; 0
    2ce8:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
		}
		if (motor_value > 0 && system_events&(1<<EV_MOTOR_DISP_VERY_FAST_SUB))
    2cec:	60 91 66 04 	lds	r22, 0x0466	; 0x800466 <motor_value>
    2cf0:	6b 30       	cpi	r22, 0x0B	; 11
    2cf2:	60 f0       	brcs	.+24     	; 0x2d0c <disp_very_fast_process+0xa8>
    2cf4:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <system_events>
    2cf8:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <system_events+0x1>
    2cfc:	94 ff       	sbrs	r25, 4
    2cfe:	06 c0       	rjmp	.+12     	; 0x2d0c <disp_very_fast_process+0xa8>
		{
			//ON_BUZZ_SIGNAL;
			if (motor_value > 10)
			dip_set_value(DISP_MOTOR,--motor_value);
    2d00:	61 50       	subi	r22, 0x01	; 1
    2d02:	60 93 66 04 	sts	0x0466, r22	; 0x800466 <motor_value>
    2d06:	80 e0       	ldi	r24, 0x00	; 0
    2d08:	0e 94 4d 09 	call	0x129a	; 0x129a <dip_set_value>
		}
		disp_very_fast_timer += 30;
    2d0c:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <disp_very_fast_timer>
    2d10:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <disp_very_fast_timer+0x1>
    2d14:	a0 91 d6 03 	lds	r26, 0x03D6	; 0x8003d6 <disp_very_fast_timer+0x2>
    2d18:	b0 91 d7 03 	lds	r27, 0x03D7	; 0x8003d7 <disp_very_fast_timer+0x3>
    2d1c:	4e 96       	adiw	r24, 0x1e	; 30
    2d1e:	a1 1d       	adc	r26, r1
    2d20:	b1 1d       	adc	r27, r1
    2d22:	80 93 d4 03 	sts	0x03D4, r24	; 0x8003d4 <disp_very_fast_timer>
    2d26:	90 93 d5 03 	sts	0x03D5, r25	; 0x8003d5 <disp_very_fast_timer+0x1>
    2d2a:	a0 93 d6 03 	sts	0x03D6, r26	; 0x8003d6 <disp_very_fast_timer+0x2>
    2d2e:	b0 93 d7 03 	sts	0x03D7, r27	; 0x8003d7 <disp_very_fast_timer+0x3>
    2d32:	08 95       	ret

00002d34 <system_error>:
}


void system_error(void)
{
	off_button();
    2d34:	0e 94 10 13 	call	0x2620	; 0x2620 <off_button>
    2d38:	08 95       	ret

00002d3a <__vector_10>:
    2d3a:	1f 92       	push	r1
    2d3c:	0f 92       	push	r0
    2d3e:	0f b6       	in	r0, 0x3f	; 63
    2d40:	0f 92       	push	r0
    2d42:	11 24       	eor	r1, r1
    2d44:	2f 93       	push	r18
    2d46:	3f 93       	push	r19
    2d48:	4f 93       	push	r20
    2d4a:	5f 93       	push	r21
    2d4c:	6f 93       	push	r22
    2d4e:	7f 93       	push	r23
    2d50:	8f 93       	push	r24
    2d52:	9f 93       	push	r25
    2d54:	af 93       	push	r26
    2d56:	bf 93       	push	r27
    2d58:	ef 93       	push	r30
    2d5a:	ff 93       	push	r31
    2d5c:	e8 e8       	ldi	r30, 0x88	; 136
    2d5e:	f5 e0       	ldi	r31, 0x05	; 5
    2d60:	80 81       	ld	r24, Z
    2d62:	91 81       	ldd	r25, Z+1	; 0x01
    2d64:	c2 96       	adiw	r24, 0x32	; 50
    2d66:	91 83       	std	Z+1, r25	; 0x01
    2d68:	80 83       	st	Z, r24
    2d6a:	80 81       	ld	r24, Z
    2d6c:	91 81       	ldd	r25, Z+1	; 0x01
    2d6e:	88 3e       	cpi	r24, 0xE8	; 232
    2d70:	93 40       	sbci	r25, 0x03	; 3
    2d72:	88 f0       	brcs	.+34     	; 0x2d96 <__vector_10+0x5c>
    2d74:	82 81       	ldd	r24, Z+2	; 0x02
    2d76:	93 81       	ldd	r25, Z+3	; 0x03
    2d78:	a4 81       	ldd	r26, Z+4	; 0x04
    2d7a:	b5 81       	ldd	r27, Z+5	; 0x05
    2d7c:	01 96       	adiw	r24, 0x01	; 1
    2d7e:	a1 1d       	adc	r26, r1
    2d80:	b1 1d       	adc	r27, r1
    2d82:	82 83       	std	Z+2, r24	; 0x02
    2d84:	93 83       	std	Z+3, r25	; 0x03
    2d86:	a4 83       	std	Z+4, r26	; 0x04
    2d88:	b5 83       	std	Z+5, r27	; 0x05
    2d8a:	80 81       	ld	r24, Z
    2d8c:	91 81       	ldd	r25, Z+1	; 0x01
    2d8e:	88 5e       	subi	r24, 0xE8	; 232
    2d90:	93 40       	sbci	r25, 0x03	; 3
    2d92:	91 83       	std	Z+1, r25	; 0x01
    2d94:	80 83       	st	Z, r24
    2d96:	8d ed       	ldi	r24, 0xDD	; 221
    2d98:	93 e0       	ldi	r25, 0x03	; 3
    2d9a:	0e 94 dd 08 	call	0x11ba	; 0x11ba <display_process>
    2d9e:	ff 91       	pop	r31
    2da0:	ef 91       	pop	r30
    2da2:	bf 91       	pop	r27
    2da4:	af 91       	pop	r26
    2da6:	9f 91       	pop	r25
    2da8:	8f 91       	pop	r24
    2daa:	7f 91       	pop	r23
    2dac:	6f 91       	pop	r22
    2dae:	5f 91       	pop	r21
    2db0:	4f 91       	pop	r20
    2db2:	3f 91       	pop	r19
    2db4:	2f 91       	pop	r18
    2db6:	0f 90       	pop	r0
    2db8:	0f be       	out	0x3f, r0	; 63
    2dba:	0f 90       	pop	r0
    2dbc:	1f 90       	pop	r1
    2dbe:	18 95       	reti

00002dc0 <timer0_init>:
    2dc0:	93 b7       	in	r25, 0x33	; 51
    2dc2:	98 60       	ori	r25, 0x08	; 8
    2dc4:	93 bf       	out	0x33, r25	; 51
    2dc6:	6c bf       	out	0x3c, r22	; 60
    2dc8:	82 30       	cpi	r24, 0x02	; 2
    2dca:	99 f0       	breq	.+38     	; 0x2df2 <timer0_init+0x32>
    2dcc:	28 f4       	brcc	.+10     	; 0x2dd8 <timer0_init+0x18>
    2dce:	88 23       	and	r24, r24
    2dd0:	41 f0       	breq	.+16     	; 0x2de2 <timer0_init+0x22>
    2dd2:	81 30       	cpi	r24, 0x01	; 1
    2dd4:	51 f0       	breq	.+20     	; 0x2dea <timer0_init+0x2a>
    2dd6:	19 c0       	rjmp	.+50     	; 0x2e0a <timer0_init+0x4a>
    2dd8:	83 30       	cpi	r24, 0x03	; 3
    2dda:	79 f0       	breq	.+30     	; 0x2dfa <timer0_init+0x3a>
    2ddc:	84 30       	cpi	r24, 0x04	; 4
    2dde:	89 f0       	breq	.+34     	; 0x2e02 <timer0_init+0x42>
    2de0:	14 c0       	rjmp	.+40     	; 0x2e0a <timer0_init+0x4a>
    2de2:	83 b7       	in	r24, 0x33	; 51
    2de4:	81 60       	ori	r24, 0x01	; 1
    2de6:	83 bf       	out	0x33, r24	; 51
    2de8:	13 c0       	rjmp	.+38     	; 0x2e10 <timer0_init+0x50>
    2dea:	83 b7       	in	r24, 0x33	; 51
    2dec:	82 60       	ori	r24, 0x02	; 2
    2dee:	83 bf       	out	0x33, r24	; 51
    2df0:	0f c0       	rjmp	.+30     	; 0x2e10 <timer0_init+0x50>
    2df2:	83 b7       	in	r24, 0x33	; 51
    2df4:	83 60       	ori	r24, 0x03	; 3
    2df6:	83 bf       	out	0x33, r24	; 51
    2df8:	0b c0       	rjmp	.+22     	; 0x2e10 <timer0_init+0x50>
    2dfa:	83 b7       	in	r24, 0x33	; 51
    2dfc:	84 60       	ori	r24, 0x04	; 4
    2dfe:	83 bf       	out	0x33, r24	; 51
    2e00:	07 c0       	rjmp	.+14     	; 0x2e10 <timer0_init+0x50>
    2e02:	83 b7       	in	r24, 0x33	; 51
    2e04:	85 60       	ori	r24, 0x05	; 5
    2e06:	83 bf       	out	0x33, r24	; 51
    2e08:	03 c0       	rjmp	.+6      	; 0x2e10 <timer0_init+0x50>
    2e0a:	83 b7       	in	r24, 0x33	; 51
    2e0c:	81 60       	ori	r24, 0x01	; 1
    2e0e:	83 bf       	out	0x33, r24	; 51
    2e10:	89 b7       	in	r24, 0x39	; 57
    2e12:	82 60       	ori	r24, 0x02	; 2
    2e14:	89 bf       	out	0x39, r24	; 57
    2e16:	08 95       	ret

00002e18 <evTime_init>:
    2e18:	23 e0       	ldi	r18, 0x03	; 3
    2e1a:	fc 01       	movw	r30, r24
    2e1c:	24 83       	std	Z+4, r18	; 0x04
    2e1e:	10 82       	st	Z, r1
    2e20:	11 82       	std	Z+1, r1	; 0x01
    2e22:	12 82       	std	Z+2, r1	; 0x02
    2e24:	13 82       	std	Z+3, r1	; 0x03
    2e26:	08 95       	ret

00002e28 <evTime_start>:
    2e28:	0f 93       	push	r16
    2e2a:	1f 93       	push	r17
    2e2c:	21 e0       	ldi	r18, 0x01	; 1
    2e2e:	fc 01       	movw	r30, r24
    2e30:	24 83       	std	Z+4, r18	; 0x04
    2e32:	00 91 8a 05 	lds	r16, 0x058A	; 0x80058a <mktime+0x2>
    2e36:	10 91 8b 05 	lds	r17, 0x058B	; 0x80058b <mktime+0x3>
    2e3a:	20 91 8c 05 	lds	r18, 0x058C	; 0x80058c <mktime+0x4>
    2e3e:	30 91 8d 05 	lds	r19, 0x058D	; 0x80058d <mktime+0x5>
    2e42:	40 0f       	add	r20, r16
    2e44:	51 1f       	adc	r21, r17
    2e46:	62 1f       	adc	r22, r18
    2e48:	73 1f       	adc	r23, r19
    2e4a:	40 83       	st	Z, r20
    2e4c:	51 83       	std	Z+1, r21	; 0x01
    2e4e:	62 83       	std	Z+2, r22	; 0x02
    2e50:	73 83       	std	Z+3, r23	; 0x03
    2e52:	1f 91       	pop	r17
    2e54:	0f 91       	pop	r16
    2e56:	08 95       	ret

00002e58 <evTime_is_stated>:
    2e58:	21 e0       	ldi	r18, 0x01	; 1
    2e5a:	30 e0       	ldi	r19, 0x00	; 0
    2e5c:	fc 01       	movw	r30, r24
    2e5e:	84 81       	ldd	r24, Z+4	; 0x04
    2e60:	81 30       	cpi	r24, 0x01	; 1
    2e62:	11 f0       	breq	.+4      	; 0x2e68 <evTime_is_stated+0x10>
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	30 e0       	ldi	r19, 0x00	; 0
    2e68:	c9 01       	movw	r24, r18
    2e6a:	08 95       	ret

00002e6c <evTime_check>:
    2e6c:	fc 01       	movw	r30, r24
    2e6e:	84 81       	ldd	r24, Z+4	; 0x04
    2e70:	81 30       	cpi	r24, 0x01	; 1
    2e72:	b1 f4       	brne	.+44     	; 0x2ea0 <evTime_check+0x34>
    2e74:	80 91 8a 05 	lds	r24, 0x058A	; 0x80058a <mktime+0x2>
    2e78:	90 91 8b 05 	lds	r25, 0x058B	; 0x80058b <mktime+0x3>
    2e7c:	a0 91 8c 05 	lds	r26, 0x058C	; 0x80058c <mktime+0x4>
    2e80:	b0 91 8d 05 	lds	r27, 0x058D	; 0x80058d <mktime+0x5>
    2e84:	40 81       	ld	r20, Z
    2e86:	51 81       	ldd	r21, Z+1	; 0x01
    2e88:	62 81       	ldd	r22, Z+2	; 0x02
    2e8a:	73 81       	ldd	r23, Z+3	; 0x03
    2e8c:	48 17       	cp	r20, r24
    2e8e:	59 07       	cpc	r21, r25
    2e90:	6a 07       	cpc	r22, r26
    2e92:	7b 07       	cpc	r23, r27
    2e94:	40 f4       	brcc	.+16     	; 0x2ea6 <evTime_check+0x3a>
    2e96:	82 e0       	ldi	r24, 0x02	; 2
    2e98:	84 83       	std	Z+4, r24	; 0x04
    2e9a:	81 e0       	ldi	r24, 0x01	; 1
    2e9c:	90 e0       	ldi	r25, 0x00	; 0
    2e9e:	08 95       	ret
    2ea0:	8f ef       	ldi	r24, 0xFF	; 255
    2ea2:	9f ef       	ldi	r25, 0xFF	; 255
    2ea4:	08 95       	ret
    2ea6:	80 e0       	ldi	r24, 0x00	; 0
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	08 95       	ret

00002eac <evTime_off>:
    2eac:	21 e0       	ldi	r18, 0x01	; 1
    2eae:	30 e0       	ldi	r19, 0x00	; 0
    2eb0:	fc 01       	movw	r30, r24
    2eb2:	84 81       	ldd	r24, Z+4	; 0x04
    2eb4:	83 30       	cpi	r24, 0x03	; 3
    2eb6:	11 f0       	breq	.+4      	; 0x2ebc <evTime_off+0x10>
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	c9 01       	movw	r24, r18
    2ebe:	08 95       	ret

00002ec0 <evTime_process_period>:
    2ec0:	cf 92       	push	r12
    2ec2:	df 92       	push	r13
    2ec4:	ef 92       	push	r14
    2ec6:	ff 92       	push	r15
    2ec8:	0f 93       	push	r16
    2eca:	1f 93       	push	r17
    2ecc:	cf 93       	push	r28
    2ece:	df 93       	push	r29
    2ed0:	ec 01       	movw	r28, r24
    2ed2:	6a 01       	movw	r12, r20
    2ed4:	7b 01       	movw	r14, r22
    2ed6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ed8:	81 11       	cpse	r24, r1
    2eda:	06 c0       	rjmp	.+12     	; 0x2ee8 <evTime_process_period+0x28>
    2edc:	83 e0       	ldi	r24, 0x03	; 3
    2ede:	8c 83       	std	Y+4, r24	; 0x04
    2ee0:	18 82       	st	Y, r1
    2ee2:	19 82       	std	Y+1, r1	; 0x01
    2ee4:	1a 82       	std	Y+2, r1	; 0x02
    2ee6:	1b 82       	std	Y+3, r1	; 0x03
    2ee8:	ce 01       	movw	r24, r28
    2eea:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <evTime_check>
    2eee:	8c 01       	movw	r16, r24
    2ef0:	01 97       	sbiw	r24, 0x01	; 1
    2ef2:	31 f4       	brne	.+12     	; 0x2f00 <evTime_process_period+0x40>
    2ef4:	b7 01       	movw	r22, r14
    2ef6:	a6 01       	movw	r20, r12
    2ef8:	ce 01       	movw	r24, r28
    2efa:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    2efe:	0d c0       	rjmp	.+26     	; 0x2f1a <evTime_process_period+0x5a>
    2f00:	8c 81       	ldd	r24, Y+4	; 0x04
    2f02:	83 30       	cpi	r24, 0x03	; 3
    2f04:	41 f4       	brne	.+16     	; 0x2f16 <evTime_process_period+0x56>
    2f06:	b7 01       	movw	r22, r14
    2f08:	a6 01       	movw	r20, r12
    2f0a:	ce 01       	movw	r24, r28
    2f0c:	0e 94 14 17 	call	0x2e28	; 0x2e28 <evTime_start>
    2f10:	00 e0       	ldi	r16, 0x00	; 0
    2f12:	10 e0       	ldi	r17, 0x00	; 0
    2f14:	02 c0       	rjmp	.+4      	; 0x2f1a <evTime_process_period+0x5a>
    2f16:	00 e0       	ldi	r16, 0x00	; 0
    2f18:	10 e0       	ldi	r17, 0x00	; 0
    2f1a:	c8 01       	movw	r24, r16
    2f1c:	df 91       	pop	r29
    2f1e:	cf 91       	pop	r28
    2f20:	1f 91       	pop	r17
    2f22:	0f 91       	pop	r16
    2f24:	ff 90       	pop	r15
    2f26:	ef 90       	pop	r14
    2f28:	df 90       	pop	r13
    2f2a:	cf 90       	pop	r12
    2f2c:	08 95       	ret

00002f2e <__vector_13>:
    2f2e:	1f 92       	push	r1
    2f30:	0f 92       	push	r0
    2f32:	0f b6       	in	r0, 0x3f	; 63
    2f34:	0f 92       	push	r0
    2f36:	11 24       	eor	r1, r1
    2f38:	2f 93       	push	r18
    2f3a:	3f 93       	push	r19
    2f3c:	4f 93       	push	r20
    2f3e:	5f 93       	push	r21
    2f40:	8f 93       	push	r24
    2f42:	9f 93       	push	r25
    2f44:	ef 93       	push	r30
    2f46:	ff 93       	push	r31
    2f48:	2b b1       	in	r18, 0x0b	; 11
    2f4a:	3c b1       	in	r19, 0x0c	; 12
    2f4c:	28 71       	andi	r18, 0x18	; 24
    2f4e:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <UART_RxHead>
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	01 96       	adiw	r24, 0x01	; 1
    2f56:	40 91 e0 03 	lds	r20, 0x03E0	; 0x8003e0 <UART_RxTail>
    2f5a:	50 e0       	ldi	r21, 0x00	; 0
    2f5c:	84 17       	cp	r24, r20
    2f5e:	95 07       	cpc	r25, r21
    2f60:	39 f0       	breq	.+14     	; 0x2f70 <__vector_13+0x42>
    2f62:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <UART_RxHead>
    2f66:	fc 01       	movw	r30, r24
    2f68:	ec 51       	subi	r30, 0x1C	; 28
    2f6a:	fc 4f       	sbci	r31, 0xFC	; 252
    2f6c:	30 83       	st	Z, r19
    2f6e:	01 c0       	rjmp	.+2      	; 0x2f72 <__vector_13+0x44>
    2f70:	22 e0       	ldi	r18, 0x02	; 2
    2f72:	20 93 df 03 	sts	0x03DF, r18	; 0x8003df <UART_LastRxError>
    2f76:	ff 91       	pop	r31
    2f78:	ef 91       	pop	r30
    2f7a:	9f 91       	pop	r25
    2f7c:	8f 91       	pop	r24
    2f7e:	5f 91       	pop	r21
    2f80:	4f 91       	pop	r20
    2f82:	3f 91       	pop	r19
    2f84:	2f 91       	pop	r18
    2f86:	0f 90       	pop	r0
    2f88:	0f be       	out	0x3f, r0	; 63
    2f8a:	0f 90       	pop	r0
    2f8c:	1f 90       	pop	r1
    2f8e:	18 95       	reti

00002f90 <__vector_14>:
    2f90:	1f 92       	push	r1
    2f92:	0f 92       	push	r0
    2f94:	0f b6       	in	r0, 0x3f	; 63
    2f96:	0f 92       	push	r0
    2f98:	11 24       	eor	r1, r1
    2f9a:	8f 93       	push	r24
    2f9c:	9f 93       	push	r25
    2f9e:	ef 93       	push	r30
    2fa0:	ff 93       	push	r31
    2fa2:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <UART_TxHead>
    2fa6:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <UART_TxTail>
    2faa:	98 17       	cp	r25, r24
    2fac:	71 f0       	breq	.+28     	; 0x2fca <__vector_14+0x3a>
    2fae:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <UART_TxTail>
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	01 96       	adiw	r24, 0x01	; 1
    2fb6:	8f 77       	andi	r24, 0x7F	; 127
    2fb8:	99 27       	eor	r25, r25
    2fba:	80 93 e2 03 	sts	0x03E2, r24	; 0x8003e2 <UART_TxTail>
    2fbe:	fc 01       	movw	r30, r24
    2fc0:	ec 51       	subi	r30, 0x1C	; 28
    2fc2:	fc 4f       	sbci	r31, 0xFC	; 252
    2fc4:	80 81       	ld	r24, Z
    2fc6:	8c b9       	out	0x0c, r24	; 12
    2fc8:	01 c0       	rjmp	.+2      	; 0x2fcc <__vector_14+0x3c>
    2fca:	55 98       	cbi	0x0a, 5	; 10
    2fcc:	ff 91       	pop	r31
    2fce:	ef 91       	pop	r30
    2fd0:	9f 91       	pop	r25
    2fd2:	8f 91       	pop	r24
    2fd4:	0f 90       	pop	r0
    2fd6:	0f be       	out	0x3f, r0	; 63
    2fd8:	0f 90       	pop	r0
    2fda:	1f 90       	pop	r1
    2fdc:	18 95       	reti

00002fde <uart0_init>:
    2fde:	f8 94       	cli
    2fe0:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <UART_TxHead>
    2fe4:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <UART_TxTail>
    2fe8:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <UART_RxHead>
    2fec:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <UART_RxTail>
    2ff0:	78 94       	sei
    2ff2:	99 23       	and	r25, r25
    2ff4:	1c f4       	brge	.+6      	; 0x2ffc <uart0_init+0x1e>
    2ff6:	22 e0       	ldi	r18, 0x02	; 2
    2ff8:	2b b9       	out	0x0b, r18	; 11
    2ffa:	9f 77       	andi	r25, 0x7F	; 127
    2ffc:	90 bd       	out	0x20, r25	; 32
    2ffe:	89 b9       	out	0x09, r24	; 9
    3000:	88 e9       	ldi	r24, 0x98	; 152
    3002:	8a b9       	out	0x0a, r24	; 10
    3004:	86 e8       	ldi	r24, 0x86	; 134
    3006:	80 bd       	out	0x20, r24	; 32
    3008:	08 95       	ret

0000300a <uart0_putc>:
    300a:	40 91 e3 03 	lds	r20, 0x03E3	; 0x8003e3 <UART_TxHead>
    300e:	50 e0       	ldi	r21, 0x00	; 0
    3010:	4f 5f       	subi	r20, 0xFF	; 255
    3012:	5f 4f       	sbci	r21, 0xFF	; 255
    3014:	4f 77       	andi	r20, 0x7F	; 127
    3016:	55 27       	eor	r21, r21
    3018:	20 91 e2 03 	lds	r18, 0x03E2	; 0x8003e2 <UART_TxTail>
    301c:	30 e0       	ldi	r19, 0x00	; 0
    301e:	42 17       	cp	r20, r18
    3020:	53 07       	cpc	r21, r19
    3022:	d1 f3       	breq	.-12     	; 0x3018 <uart0_putc+0xe>
    3024:	fa 01       	movw	r30, r20
    3026:	ec 51       	subi	r30, 0x1C	; 28
    3028:	fc 4f       	sbci	r31, 0xFC	; 252
    302a:	80 83       	st	Z, r24
    302c:	40 93 e3 03 	sts	0x03E3, r20	; 0x8003e3 <UART_TxHead>
    3030:	55 9a       	sbi	0x0a, 5	; 10
    3032:	08 95       	ret

00003034 <uart0_puts>:
    3034:	cf 93       	push	r28
    3036:	df 93       	push	r29
    3038:	ec 01       	movw	r28, r24
    303a:	88 81       	ld	r24, Y
    303c:	88 23       	and	r24, r24
    303e:	31 f0       	breq	.+12     	; 0x304c <uart0_puts+0x18>
    3040:	21 96       	adiw	r28, 0x01	; 1
    3042:	0e 94 05 18 	call	0x300a	; 0x300a <uart0_putc>
    3046:	89 91       	ld	r24, Y+
    3048:	81 11       	cpse	r24, r1
    304a:	fb cf       	rjmp	.-10     	; 0x3042 <uart0_puts+0xe>
    304c:	df 91       	pop	r29
    304e:	cf 91       	pop	r28
    3050:	08 95       	ret

00003052 <__subsf3>:
    3052:	50 58       	subi	r21, 0x80	; 128

00003054 <__addsf3>:
    3054:	bb 27       	eor	r27, r27
    3056:	aa 27       	eor	r26, r26
    3058:	0e 94 41 18 	call	0x3082	; 0x3082 <__addsf3x>
    305c:	0c 94 b6 19 	jmp	0x336c	; 0x336c <__fp_round>
    3060:	0e 94 a8 19 	call	0x3350	; 0x3350 <__fp_pscA>
    3064:	38 f0       	brcs	.+14     	; 0x3074 <__addsf3+0x20>
    3066:	0e 94 af 19 	call	0x335e	; 0x335e <__fp_pscB>
    306a:	20 f0       	brcs	.+8      	; 0x3074 <__addsf3+0x20>
    306c:	39 f4       	brne	.+14     	; 0x307c <__addsf3+0x28>
    306e:	9f 3f       	cpi	r25, 0xFF	; 255
    3070:	19 f4       	brne	.+6      	; 0x3078 <__addsf3+0x24>
    3072:	26 f4       	brtc	.+8      	; 0x307c <__addsf3+0x28>
    3074:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>
    3078:	0e f4       	brtc	.+2      	; 0x307c <__addsf3+0x28>
    307a:	e0 95       	com	r30
    307c:	e7 fb       	bst	r30, 7
    307e:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>

00003082 <__addsf3x>:
    3082:	e9 2f       	mov	r30, r25
    3084:	0e 94 c7 19 	call	0x338e	; 0x338e <__fp_split3>
    3088:	58 f3       	brcs	.-42     	; 0x3060 <__addsf3+0xc>
    308a:	ba 17       	cp	r27, r26
    308c:	62 07       	cpc	r22, r18
    308e:	73 07       	cpc	r23, r19
    3090:	84 07       	cpc	r24, r20
    3092:	95 07       	cpc	r25, r21
    3094:	20 f0       	brcs	.+8      	; 0x309e <__addsf3x+0x1c>
    3096:	79 f4       	brne	.+30     	; 0x30b6 <__addsf3x+0x34>
    3098:	a6 f5       	brtc	.+104    	; 0x3102 <__addsf3x+0x80>
    309a:	0c 94 e9 19 	jmp	0x33d2	; 0x33d2 <__fp_zero>
    309e:	0e f4       	brtc	.+2      	; 0x30a2 <__addsf3x+0x20>
    30a0:	e0 95       	com	r30
    30a2:	0b 2e       	mov	r0, r27
    30a4:	ba 2f       	mov	r27, r26
    30a6:	a0 2d       	mov	r26, r0
    30a8:	0b 01       	movw	r0, r22
    30aa:	b9 01       	movw	r22, r18
    30ac:	90 01       	movw	r18, r0
    30ae:	0c 01       	movw	r0, r24
    30b0:	ca 01       	movw	r24, r20
    30b2:	a0 01       	movw	r20, r0
    30b4:	11 24       	eor	r1, r1
    30b6:	ff 27       	eor	r31, r31
    30b8:	59 1b       	sub	r21, r25
    30ba:	99 f0       	breq	.+38     	; 0x30e2 <__addsf3x+0x60>
    30bc:	59 3f       	cpi	r21, 0xF9	; 249
    30be:	50 f4       	brcc	.+20     	; 0x30d4 <__addsf3x+0x52>
    30c0:	50 3e       	cpi	r21, 0xE0	; 224
    30c2:	68 f1       	brcs	.+90     	; 0x311e <__addsf3x+0x9c>
    30c4:	1a 16       	cp	r1, r26
    30c6:	f0 40       	sbci	r31, 0x00	; 0
    30c8:	a2 2f       	mov	r26, r18
    30ca:	23 2f       	mov	r18, r19
    30cc:	34 2f       	mov	r19, r20
    30ce:	44 27       	eor	r20, r20
    30d0:	58 5f       	subi	r21, 0xF8	; 248
    30d2:	f3 cf       	rjmp	.-26     	; 0x30ba <__addsf3x+0x38>
    30d4:	46 95       	lsr	r20
    30d6:	37 95       	ror	r19
    30d8:	27 95       	ror	r18
    30da:	a7 95       	ror	r26
    30dc:	f0 40       	sbci	r31, 0x00	; 0
    30de:	53 95       	inc	r21
    30e0:	c9 f7       	brne	.-14     	; 0x30d4 <__addsf3x+0x52>
    30e2:	7e f4       	brtc	.+30     	; 0x3102 <__addsf3x+0x80>
    30e4:	1f 16       	cp	r1, r31
    30e6:	ba 0b       	sbc	r27, r26
    30e8:	62 0b       	sbc	r22, r18
    30ea:	73 0b       	sbc	r23, r19
    30ec:	84 0b       	sbc	r24, r20
    30ee:	ba f0       	brmi	.+46     	; 0x311e <__addsf3x+0x9c>
    30f0:	91 50       	subi	r25, 0x01	; 1
    30f2:	a1 f0       	breq	.+40     	; 0x311c <__addsf3x+0x9a>
    30f4:	ff 0f       	add	r31, r31
    30f6:	bb 1f       	adc	r27, r27
    30f8:	66 1f       	adc	r22, r22
    30fa:	77 1f       	adc	r23, r23
    30fc:	88 1f       	adc	r24, r24
    30fe:	c2 f7       	brpl	.-16     	; 0x30f0 <__addsf3x+0x6e>
    3100:	0e c0       	rjmp	.+28     	; 0x311e <__addsf3x+0x9c>
    3102:	ba 0f       	add	r27, r26
    3104:	62 1f       	adc	r22, r18
    3106:	73 1f       	adc	r23, r19
    3108:	84 1f       	adc	r24, r20
    310a:	48 f4       	brcc	.+18     	; 0x311e <__addsf3x+0x9c>
    310c:	87 95       	ror	r24
    310e:	77 95       	ror	r23
    3110:	67 95       	ror	r22
    3112:	b7 95       	ror	r27
    3114:	f7 95       	ror	r31
    3116:	9e 3f       	cpi	r25, 0xFE	; 254
    3118:	08 f0       	brcs	.+2      	; 0x311c <__addsf3x+0x9a>
    311a:	b0 cf       	rjmp	.-160    	; 0x307c <__addsf3+0x28>
    311c:	93 95       	inc	r25
    311e:	88 0f       	add	r24, r24
    3120:	08 f0       	brcs	.+2      	; 0x3124 <__addsf3x+0xa2>
    3122:	99 27       	eor	r25, r25
    3124:	ee 0f       	add	r30, r30
    3126:	97 95       	ror	r25
    3128:	87 95       	ror	r24
    312a:	08 95       	ret

0000312c <__divsf3>:
    312c:	0e 94 aa 18 	call	0x3154	; 0x3154 <__divsf3x>
    3130:	0c 94 b6 19 	jmp	0x336c	; 0x336c <__fp_round>
    3134:	0e 94 af 19 	call	0x335e	; 0x335e <__fp_pscB>
    3138:	58 f0       	brcs	.+22     	; 0x3150 <__divsf3+0x24>
    313a:	0e 94 a8 19 	call	0x3350	; 0x3350 <__fp_pscA>
    313e:	40 f0       	brcs	.+16     	; 0x3150 <__divsf3+0x24>
    3140:	29 f4       	brne	.+10     	; 0x314c <__divsf3+0x20>
    3142:	5f 3f       	cpi	r21, 0xFF	; 255
    3144:	29 f0       	breq	.+10     	; 0x3150 <__divsf3+0x24>
    3146:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    314a:	51 11       	cpse	r21, r1
    314c:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>
    3150:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>

00003154 <__divsf3x>:
    3154:	0e 94 c7 19 	call	0x338e	; 0x338e <__fp_split3>
    3158:	68 f3       	brcs	.-38     	; 0x3134 <__divsf3+0x8>

0000315a <__divsf3_pse>:
    315a:	99 23       	and	r25, r25
    315c:	b1 f3       	breq	.-20     	; 0x314a <__divsf3+0x1e>
    315e:	55 23       	and	r21, r21
    3160:	91 f3       	breq	.-28     	; 0x3146 <__divsf3+0x1a>
    3162:	95 1b       	sub	r25, r21
    3164:	55 0b       	sbc	r21, r21
    3166:	bb 27       	eor	r27, r27
    3168:	aa 27       	eor	r26, r26
    316a:	62 17       	cp	r22, r18
    316c:	73 07       	cpc	r23, r19
    316e:	84 07       	cpc	r24, r20
    3170:	38 f0       	brcs	.+14     	; 0x3180 <__divsf3_pse+0x26>
    3172:	9f 5f       	subi	r25, 0xFF	; 255
    3174:	5f 4f       	sbci	r21, 0xFF	; 255
    3176:	22 0f       	add	r18, r18
    3178:	33 1f       	adc	r19, r19
    317a:	44 1f       	adc	r20, r20
    317c:	aa 1f       	adc	r26, r26
    317e:	a9 f3       	breq	.-22     	; 0x316a <__divsf3_pse+0x10>
    3180:	35 d0       	rcall	.+106    	; 0x31ec <__divsf3_pse+0x92>
    3182:	0e 2e       	mov	r0, r30
    3184:	3a f0       	brmi	.+14     	; 0x3194 <__divsf3_pse+0x3a>
    3186:	e0 e8       	ldi	r30, 0x80	; 128
    3188:	32 d0       	rcall	.+100    	; 0x31ee <__divsf3_pse+0x94>
    318a:	91 50       	subi	r25, 0x01	; 1
    318c:	50 40       	sbci	r21, 0x00	; 0
    318e:	e6 95       	lsr	r30
    3190:	00 1c       	adc	r0, r0
    3192:	ca f7       	brpl	.-14     	; 0x3186 <__divsf3_pse+0x2c>
    3194:	2b d0       	rcall	.+86     	; 0x31ec <__divsf3_pse+0x92>
    3196:	fe 2f       	mov	r31, r30
    3198:	29 d0       	rcall	.+82     	; 0x31ec <__divsf3_pse+0x92>
    319a:	66 0f       	add	r22, r22
    319c:	77 1f       	adc	r23, r23
    319e:	88 1f       	adc	r24, r24
    31a0:	bb 1f       	adc	r27, r27
    31a2:	26 17       	cp	r18, r22
    31a4:	37 07       	cpc	r19, r23
    31a6:	48 07       	cpc	r20, r24
    31a8:	ab 07       	cpc	r26, r27
    31aa:	b0 e8       	ldi	r27, 0x80	; 128
    31ac:	09 f0       	breq	.+2      	; 0x31b0 <__divsf3_pse+0x56>
    31ae:	bb 0b       	sbc	r27, r27
    31b0:	80 2d       	mov	r24, r0
    31b2:	bf 01       	movw	r22, r30
    31b4:	ff 27       	eor	r31, r31
    31b6:	93 58       	subi	r25, 0x83	; 131
    31b8:	5f 4f       	sbci	r21, 0xFF	; 255
    31ba:	3a f0       	brmi	.+14     	; 0x31ca <__divsf3_pse+0x70>
    31bc:	9e 3f       	cpi	r25, 0xFE	; 254
    31be:	51 05       	cpc	r21, r1
    31c0:	78 f0       	brcs	.+30     	; 0x31e0 <__divsf3_pse+0x86>
    31c2:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    31c6:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>
    31ca:	5f 3f       	cpi	r21, 0xFF	; 255
    31cc:	e4 f3       	brlt	.-8      	; 0x31c6 <__divsf3_pse+0x6c>
    31ce:	98 3e       	cpi	r25, 0xE8	; 232
    31d0:	d4 f3       	brlt	.-12     	; 0x31c6 <__divsf3_pse+0x6c>
    31d2:	86 95       	lsr	r24
    31d4:	77 95       	ror	r23
    31d6:	67 95       	ror	r22
    31d8:	b7 95       	ror	r27
    31da:	f7 95       	ror	r31
    31dc:	9f 5f       	subi	r25, 0xFF	; 255
    31de:	c9 f7       	brne	.-14     	; 0x31d2 <__divsf3_pse+0x78>
    31e0:	88 0f       	add	r24, r24
    31e2:	91 1d       	adc	r25, r1
    31e4:	96 95       	lsr	r25
    31e6:	87 95       	ror	r24
    31e8:	97 f9       	bld	r25, 7
    31ea:	08 95       	ret
    31ec:	e1 e0       	ldi	r30, 0x01	; 1
    31ee:	66 0f       	add	r22, r22
    31f0:	77 1f       	adc	r23, r23
    31f2:	88 1f       	adc	r24, r24
    31f4:	bb 1f       	adc	r27, r27
    31f6:	62 17       	cp	r22, r18
    31f8:	73 07       	cpc	r23, r19
    31fa:	84 07       	cpc	r24, r20
    31fc:	ba 07       	cpc	r27, r26
    31fe:	20 f0       	brcs	.+8      	; 0x3208 <__divsf3_pse+0xae>
    3200:	62 1b       	sub	r22, r18
    3202:	73 0b       	sbc	r23, r19
    3204:	84 0b       	sbc	r24, r20
    3206:	ba 0b       	sbc	r27, r26
    3208:	ee 1f       	adc	r30, r30
    320a:	88 f7       	brcc	.-30     	; 0x31ee <__divsf3_pse+0x94>
    320c:	e0 95       	com	r30
    320e:	08 95       	ret

00003210 <__fixsfsi>:
    3210:	0e 94 0f 19 	call	0x321e	; 0x321e <__fixunssfsi>
    3214:	68 94       	set
    3216:	b1 11       	cpse	r27, r1
    3218:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>
    321c:	08 95       	ret

0000321e <__fixunssfsi>:
    321e:	0e 94 cf 19 	call	0x339e	; 0x339e <__fp_splitA>
    3222:	88 f0       	brcs	.+34     	; 0x3246 <__fixunssfsi+0x28>
    3224:	9f 57       	subi	r25, 0x7F	; 127
    3226:	98 f0       	brcs	.+38     	; 0x324e <__fixunssfsi+0x30>
    3228:	b9 2f       	mov	r27, r25
    322a:	99 27       	eor	r25, r25
    322c:	b7 51       	subi	r27, 0x17	; 23
    322e:	b0 f0       	brcs	.+44     	; 0x325c <__fixunssfsi+0x3e>
    3230:	e1 f0       	breq	.+56     	; 0x326a <__fixunssfsi+0x4c>
    3232:	66 0f       	add	r22, r22
    3234:	77 1f       	adc	r23, r23
    3236:	88 1f       	adc	r24, r24
    3238:	99 1f       	adc	r25, r25
    323a:	1a f0       	brmi	.+6      	; 0x3242 <__fixunssfsi+0x24>
    323c:	ba 95       	dec	r27
    323e:	c9 f7       	brne	.-14     	; 0x3232 <__fixunssfsi+0x14>
    3240:	14 c0       	rjmp	.+40     	; 0x326a <__fixunssfsi+0x4c>
    3242:	b1 30       	cpi	r27, 0x01	; 1
    3244:	91 f0       	breq	.+36     	; 0x326a <__fixunssfsi+0x4c>
    3246:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <__fp_zero>
    324a:	b1 e0       	ldi	r27, 0x01	; 1
    324c:	08 95       	ret
    324e:	0c 94 e9 19 	jmp	0x33d2	; 0x33d2 <__fp_zero>
    3252:	67 2f       	mov	r22, r23
    3254:	78 2f       	mov	r23, r24
    3256:	88 27       	eor	r24, r24
    3258:	b8 5f       	subi	r27, 0xF8	; 248
    325a:	39 f0       	breq	.+14     	; 0x326a <__fixunssfsi+0x4c>
    325c:	b9 3f       	cpi	r27, 0xF9	; 249
    325e:	cc f3       	brlt	.-14     	; 0x3252 <__fixunssfsi+0x34>
    3260:	86 95       	lsr	r24
    3262:	77 95       	ror	r23
    3264:	67 95       	ror	r22
    3266:	b3 95       	inc	r27
    3268:	d9 f7       	brne	.-10     	; 0x3260 <__fixunssfsi+0x42>
    326a:	3e f4       	brtc	.+14     	; 0x327a <__fixunssfsi+0x5c>
    326c:	90 95       	com	r25
    326e:	80 95       	com	r24
    3270:	70 95       	com	r23
    3272:	61 95       	neg	r22
    3274:	7f 4f       	sbci	r23, 0xFF	; 255
    3276:	8f 4f       	sbci	r24, 0xFF	; 255
    3278:	9f 4f       	sbci	r25, 0xFF	; 255
    327a:	08 95       	ret

0000327c <__floatunsisf>:
    327c:	e8 94       	clt
    327e:	09 c0       	rjmp	.+18     	; 0x3292 <__floatsisf+0x12>

00003280 <__floatsisf>:
    3280:	97 fb       	bst	r25, 7
    3282:	3e f4       	brtc	.+14     	; 0x3292 <__floatsisf+0x12>
    3284:	90 95       	com	r25
    3286:	80 95       	com	r24
    3288:	70 95       	com	r23
    328a:	61 95       	neg	r22
    328c:	7f 4f       	sbci	r23, 0xFF	; 255
    328e:	8f 4f       	sbci	r24, 0xFF	; 255
    3290:	9f 4f       	sbci	r25, 0xFF	; 255
    3292:	99 23       	and	r25, r25
    3294:	a9 f0       	breq	.+42     	; 0x32c0 <__floatsisf+0x40>
    3296:	f9 2f       	mov	r31, r25
    3298:	96 e9       	ldi	r25, 0x96	; 150
    329a:	bb 27       	eor	r27, r27
    329c:	93 95       	inc	r25
    329e:	f6 95       	lsr	r31
    32a0:	87 95       	ror	r24
    32a2:	77 95       	ror	r23
    32a4:	67 95       	ror	r22
    32a6:	b7 95       	ror	r27
    32a8:	f1 11       	cpse	r31, r1
    32aa:	f8 cf       	rjmp	.-16     	; 0x329c <__floatsisf+0x1c>
    32ac:	fa f4       	brpl	.+62     	; 0x32ec <__floatsisf+0x6c>
    32ae:	bb 0f       	add	r27, r27
    32b0:	11 f4       	brne	.+4      	; 0x32b6 <__floatsisf+0x36>
    32b2:	60 ff       	sbrs	r22, 0
    32b4:	1b c0       	rjmp	.+54     	; 0x32ec <__floatsisf+0x6c>
    32b6:	6f 5f       	subi	r22, 0xFF	; 255
    32b8:	7f 4f       	sbci	r23, 0xFF	; 255
    32ba:	8f 4f       	sbci	r24, 0xFF	; 255
    32bc:	9f 4f       	sbci	r25, 0xFF	; 255
    32be:	16 c0       	rjmp	.+44     	; 0x32ec <__floatsisf+0x6c>
    32c0:	88 23       	and	r24, r24
    32c2:	11 f0       	breq	.+4      	; 0x32c8 <__floatsisf+0x48>
    32c4:	96 e9       	ldi	r25, 0x96	; 150
    32c6:	11 c0       	rjmp	.+34     	; 0x32ea <__floatsisf+0x6a>
    32c8:	77 23       	and	r23, r23
    32ca:	21 f0       	breq	.+8      	; 0x32d4 <__floatsisf+0x54>
    32cc:	9e e8       	ldi	r25, 0x8E	; 142
    32ce:	87 2f       	mov	r24, r23
    32d0:	76 2f       	mov	r23, r22
    32d2:	05 c0       	rjmp	.+10     	; 0x32de <__floatsisf+0x5e>
    32d4:	66 23       	and	r22, r22
    32d6:	71 f0       	breq	.+28     	; 0x32f4 <__floatsisf+0x74>
    32d8:	96 e8       	ldi	r25, 0x86	; 134
    32da:	86 2f       	mov	r24, r22
    32dc:	70 e0       	ldi	r23, 0x00	; 0
    32de:	60 e0       	ldi	r22, 0x00	; 0
    32e0:	2a f0       	brmi	.+10     	; 0x32ec <__floatsisf+0x6c>
    32e2:	9a 95       	dec	r25
    32e4:	66 0f       	add	r22, r22
    32e6:	77 1f       	adc	r23, r23
    32e8:	88 1f       	adc	r24, r24
    32ea:	da f7       	brpl	.-10     	; 0x32e2 <__floatsisf+0x62>
    32ec:	88 0f       	add	r24, r24
    32ee:	96 95       	lsr	r25
    32f0:	87 95       	ror	r24
    32f2:	97 f9       	bld	r25, 7
    32f4:	08 95       	ret

000032f6 <__fp_cmp>:
    32f6:	99 0f       	add	r25, r25
    32f8:	00 08       	sbc	r0, r0
    32fa:	55 0f       	add	r21, r21
    32fc:	aa 0b       	sbc	r26, r26
    32fe:	e0 e8       	ldi	r30, 0x80	; 128
    3300:	fe ef       	ldi	r31, 0xFE	; 254
    3302:	16 16       	cp	r1, r22
    3304:	17 06       	cpc	r1, r23
    3306:	e8 07       	cpc	r30, r24
    3308:	f9 07       	cpc	r31, r25
    330a:	c0 f0       	brcs	.+48     	; 0x333c <__fp_cmp+0x46>
    330c:	12 16       	cp	r1, r18
    330e:	13 06       	cpc	r1, r19
    3310:	e4 07       	cpc	r30, r20
    3312:	f5 07       	cpc	r31, r21
    3314:	98 f0       	brcs	.+38     	; 0x333c <__fp_cmp+0x46>
    3316:	62 1b       	sub	r22, r18
    3318:	73 0b       	sbc	r23, r19
    331a:	84 0b       	sbc	r24, r20
    331c:	95 0b       	sbc	r25, r21
    331e:	39 f4       	brne	.+14     	; 0x332e <__fp_cmp+0x38>
    3320:	0a 26       	eor	r0, r26
    3322:	61 f0       	breq	.+24     	; 0x333c <__fp_cmp+0x46>
    3324:	23 2b       	or	r18, r19
    3326:	24 2b       	or	r18, r20
    3328:	25 2b       	or	r18, r21
    332a:	21 f4       	brne	.+8      	; 0x3334 <__fp_cmp+0x3e>
    332c:	08 95       	ret
    332e:	0a 26       	eor	r0, r26
    3330:	09 f4       	brne	.+2      	; 0x3334 <__fp_cmp+0x3e>
    3332:	a1 40       	sbci	r26, 0x01	; 1
    3334:	a6 95       	lsr	r26
    3336:	8f ef       	ldi	r24, 0xFF	; 255
    3338:	81 1d       	adc	r24, r1
    333a:	81 1d       	adc	r24, r1
    333c:	08 95       	ret

0000333e <__fp_inf>:
    333e:	97 f9       	bld	r25, 7
    3340:	9f 67       	ori	r25, 0x7F	; 127
    3342:	80 e8       	ldi	r24, 0x80	; 128
    3344:	70 e0       	ldi	r23, 0x00	; 0
    3346:	60 e0       	ldi	r22, 0x00	; 0
    3348:	08 95       	ret

0000334a <__fp_nan>:
    334a:	9f ef       	ldi	r25, 0xFF	; 255
    334c:	80 ec       	ldi	r24, 0xC0	; 192
    334e:	08 95       	ret

00003350 <__fp_pscA>:
    3350:	00 24       	eor	r0, r0
    3352:	0a 94       	dec	r0
    3354:	16 16       	cp	r1, r22
    3356:	17 06       	cpc	r1, r23
    3358:	18 06       	cpc	r1, r24
    335a:	09 06       	cpc	r0, r25
    335c:	08 95       	ret

0000335e <__fp_pscB>:
    335e:	00 24       	eor	r0, r0
    3360:	0a 94       	dec	r0
    3362:	12 16       	cp	r1, r18
    3364:	13 06       	cpc	r1, r19
    3366:	14 06       	cpc	r1, r20
    3368:	05 06       	cpc	r0, r21
    336a:	08 95       	ret

0000336c <__fp_round>:
    336c:	09 2e       	mov	r0, r25
    336e:	03 94       	inc	r0
    3370:	00 0c       	add	r0, r0
    3372:	11 f4       	brne	.+4      	; 0x3378 <__fp_round+0xc>
    3374:	88 23       	and	r24, r24
    3376:	52 f0       	brmi	.+20     	; 0x338c <__fp_round+0x20>
    3378:	bb 0f       	add	r27, r27
    337a:	40 f4       	brcc	.+16     	; 0x338c <__fp_round+0x20>
    337c:	bf 2b       	or	r27, r31
    337e:	11 f4       	brne	.+4      	; 0x3384 <__fp_round+0x18>
    3380:	60 ff       	sbrs	r22, 0
    3382:	04 c0       	rjmp	.+8      	; 0x338c <__fp_round+0x20>
    3384:	6f 5f       	subi	r22, 0xFF	; 255
    3386:	7f 4f       	sbci	r23, 0xFF	; 255
    3388:	8f 4f       	sbci	r24, 0xFF	; 255
    338a:	9f 4f       	sbci	r25, 0xFF	; 255
    338c:	08 95       	ret

0000338e <__fp_split3>:
    338e:	57 fd       	sbrc	r21, 7
    3390:	90 58       	subi	r25, 0x80	; 128
    3392:	44 0f       	add	r20, r20
    3394:	55 1f       	adc	r21, r21
    3396:	59 f0       	breq	.+22     	; 0x33ae <__fp_splitA+0x10>
    3398:	5f 3f       	cpi	r21, 0xFF	; 255
    339a:	71 f0       	breq	.+28     	; 0x33b8 <__fp_splitA+0x1a>
    339c:	47 95       	ror	r20

0000339e <__fp_splitA>:
    339e:	88 0f       	add	r24, r24
    33a0:	97 fb       	bst	r25, 7
    33a2:	99 1f       	adc	r25, r25
    33a4:	61 f0       	breq	.+24     	; 0x33be <__fp_splitA+0x20>
    33a6:	9f 3f       	cpi	r25, 0xFF	; 255
    33a8:	79 f0       	breq	.+30     	; 0x33c8 <__fp_splitA+0x2a>
    33aa:	87 95       	ror	r24
    33ac:	08 95       	ret
    33ae:	12 16       	cp	r1, r18
    33b0:	13 06       	cpc	r1, r19
    33b2:	14 06       	cpc	r1, r20
    33b4:	55 1f       	adc	r21, r21
    33b6:	f2 cf       	rjmp	.-28     	; 0x339c <__fp_split3+0xe>
    33b8:	46 95       	lsr	r20
    33ba:	f1 df       	rcall	.-30     	; 0x339e <__fp_splitA>
    33bc:	08 c0       	rjmp	.+16     	; 0x33ce <__fp_splitA+0x30>
    33be:	16 16       	cp	r1, r22
    33c0:	17 06       	cpc	r1, r23
    33c2:	18 06       	cpc	r1, r24
    33c4:	99 1f       	adc	r25, r25
    33c6:	f1 cf       	rjmp	.-30     	; 0x33aa <__fp_splitA+0xc>
    33c8:	86 95       	lsr	r24
    33ca:	71 05       	cpc	r23, r1
    33cc:	61 05       	cpc	r22, r1
    33ce:	08 94       	sec
    33d0:	08 95       	ret

000033d2 <__fp_zero>:
    33d2:	e8 94       	clt

000033d4 <__fp_szero>:
    33d4:	bb 27       	eor	r27, r27
    33d6:	66 27       	eor	r22, r22
    33d8:	77 27       	eor	r23, r23
    33da:	cb 01       	movw	r24, r22
    33dc:	97 f9       	bld	r25, 7
    33de:	08 95       	ret

000033e0 <__gesf2>:
    33e0:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <__fp_cmp>
    33e4:	08 f4       	brcc	.+2      	; 0x33e8 <__gesf2+0x8>
    33e6:	8f ef       	ldi	r24, 0xFF	; 255
    33e8:	08 95       	ret

000033ea <__mulsf3>:
    33ea:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3x>
    33ee:	0c 94 b6 19 	jmp	0x336c	; 0x336c <__fp_round>
    33f2:	0e 94 a8 19 	call	0x3350	; 0x3350 <__fp_pscA>
    33f6:	38 f0       	brcs	.+14     	; 0x3406 <__mulsf3+0x1c>
    33f8:	0e 94 af 19 	call	0x335e	; 0x335e <__fp_pscB>
    33fc:	20 f0       	brcs	.+8      	; 0x3406 <__mulsf3+0x1c>
    33fe:	95 23       	and	r25, r21
    3400:	11 f0       	breq	.+4      	; 0x3406 <__mulsf3+0x1c>
    3402:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    3406:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>
    340a:	11 24       	eor	r1, r1
    340c:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>

00003410 <__mulsf3x>:
    3410:	0e 94 c7 19 	call	0x338e	; 0x338e <__fp_split3>
    3414:	70 f3       	brcs	.-36     	; 0x33f2 <__mulsf3+0x8>

00003416 <__mulsf3_pse>:
    3416:	95 9f       	mul	r25, r21
    3418:	c1 f3       	breq	.-16     	; 0x340a <__mulsf3+0x20>
    341a:	95 0f       	add	r25, r21
    341c:	50 e0       	ldi	r21, 0x00	; 0
    341e:	55 1f       	adc	r21, r21
    3420:	62 9f       	mul	r22, r18
    3422:	f0 01       	movw	r30, r0
    3424:	72 9f       	mul	r23, r18
    3426:	bb 27       	eor	r27, r27
    3428:	f0 0d       	add	r31, r0
    342a:	b1 1d       	adc	r27, r1
    342c:	63 9f       	mul	r22, r19
    342e:	aa 27       	eor	r26, r26
    3430:	f0 0d       	add	r31, r0
    3432:	b1 1d       	adc	r27, r1
    3434:	aa 1f       	adc	r26, r26
    3436:	64 9f       	mul	r22, r20
    3438:	66 27       	eor	r22, r22
    343a:	b0 0d       	add	r27, r0
    343c:	a1 1d       	adc	r26, r1
    343e:	66 1f       	adc	r22, r22
    3440:	82 9f       	mul	r24, r18
    3442:	22 27       	eor	r18, r18
    3444:	b0 0d       	add	r27, r0
    3446:	a1 1d       	adc	r26, r1
    3448:	62 1f       	adc	r22, r18
    344a:	73 9f       	mul	r23, r19
    344c:	b0 0d       	add	r27, r0
    344e:	a1 1d       	adc	r26, r1
    3450:	62 1f       	adc	r22, r18
    3452:	83 9f       	mul	r24, r19
    3454:	a0 0d       	add	r26, r0
    3456:	61 1d       	adc	r22, r1
    3458:	22 1f       	adc	r18, r18
    345a:	74 9f       	mul	r23, r20
    345c:	33 27       	eor	r19, r19
    345e:	a0 0d       	add	r26, r0
    3460:	61 1d       	adc	r22, r1
    3462:	23 1f       	adc	r18, r19
    3464:	84 9f       	mul	r24, r20
    3466:	60 0d       	add	r22, r0
    3468:	21 1d       	adc	r18, r1
    346a:	82 2f       	mov	r24, r18
    346c:	76 2f       	mov	r23, r22
    346e:	6a 2f       	mov	r22, r26
    3470:	11 24       	eor	r1, r1
    3472:	9f 57       	subi	r25, 0x7F	; 127
    3474:	50 40       	sbci	r21, 0x00	; 0
    3476:	9a f0       	brmi	.+38     	; 0x349e <__mulsf3_pse+0x88>
    3478:	f1 f0       	breq	.+60     	; 0x34b6 <__mulsf3_pse+0xa0>
    347a:	88 23       	and	r24, r24
    347c:	4a f0       	brmi	.+18     	; 0x3490 <__mulsf3_pse+0x7a>
    347e:	ee 0f       	add	r30, r30
    3480:	ff 1f       	adc	r31, r31
    3482:	bb 1f       	adc	r27, r27
    3484:	66 1f       	adc	r22, r22
    3486:	77 1f       	adc	r23, r23
    3488:	88 1f       	adc	r24, r24
    348a:	91 50       	subi	r25, 0x01	; 1
    348c:	50 40       	sbci	r21, 0x00	; 0
    348e:	a9 f7       	brne	.-22     	; 0x347a <__mulsf3_pse+0x64>
    3490:	9e 3f       	cpi	r25, 0xFE	; 254
    3492:	51 05       	cpc	r21, r1
    3494:	80 f0       	brcs	.+32     	; 0x34b6 <__mulsf3_pse+0xa0>
    3496:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    349a:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>
    349e:	5f 3f       	cpi	r21, 0xFF	; 255
    34a0:	e4 f3       	brlt	.-8      	; 0x349a <__mulsf3_pse+0x84>
    34a2:	98 3e       	cpi	r25, 0xE8	; 232
    34a4:	d4 f3       	brlt	.-12     	; 0x349a <__mulsf3_pse+0x84>
    34a6:	86 95       	lsr	r24
    34a8:	77 95       	ror	r23
    34aa:	67 95       	ror	r22
    34ac:	b7 95       	ror	r27
    34ae:	f7 95       	ror	r31
    34b0:	e7 95       	ror	r30
    34b2:	9f 5f       	subi	r25, 0xFF	; 255
    34b4:	c1 f7       	brne	.-16     	; 0x34a6 <__mulsf3_pse+0x90>
    34b6:	fe 2b       	or	r31, r30
    34b8:	88 0f       	add	r24, r24
    34ba:	91 1d       	adc	r25, r1
    34bc:	96 95       	lsr	r25
    34be:	87 95       	ror	r24
    34c0:	97 f9       	bld	r25, 7
    34c2:	08 95       	ret

000034c4 <pow>:
    34c4:	fa 01       	movw	r30, r20
    34c6:	ee 0f       	add	r30, r30
    34c8:	ff 1f       	adc	r31, r31
    34ca:	30 96       	adiw	r30, 0x00	; 0
    34cc:	21 05       	cpc	r18, r1
    34ce:	31 05       	cpc	r19, r1
    34d0:	a1 f1       	breq	.+104    	; 0x353a <pow+0x76>
    34d2:	61 15       	cp	r22, r1
    34d4:	71 05       	cpc	r23, r1
    34d6:	61 f4       	brne	.+24     	; 0x34f0 <pow+0x2c>
    34d8:	80 38       	cpi	r24, 0x80	; 128
    34da:	bf e3       	ldi	r27, 0x3F	; 63
    34dc:	9b 07       	cpc	r25, r27
    34de:	49 f1       	breq	.+82     	; 0x3532 <pow+0x6e>
    34e0:	68 94       	set
    34e2:	90 38       	cpi	r25, 0x80	; 128
    34e4:	81 05       	cpc	r24, r1
    34e6:	61 f0       	breq	.+24     	; 0x3500 <pow+0x3c>
    34e8:	80 38       	cpi	r24, 0x80	; 128
    34ea:	bf ef       	ldi	r27, 0xFF	; 255
    34ec:	9b 07       	cpc	r25, r27
    34ee:	41 f0       	breq	.+16     	; 0x3500 <pow+0x3c>
    34f0:	99 23       	and	r25, r25
    34f2:	4a f5       	brpl	.+82     	; 0x3546 <pow+0x82>
    34f4:	ff 3f       	cpi	r31, 0xFF	; 255
    34f6:	e1 05       	cpc	r30, r1
    34f8:	31 05       	cpc	r19, r1
    34fa:	21 05       	cpc	r18, r1
    34fc:	19 f1       	breq	.+70     	; 0x3544 <pow+0x80>
    34fe:	e8 94       	clt
    3500:	08 94       	sec
    3502:	e7 95       	ror	r30
    3504:	d9 01       	movw	r26, r18
    3506:	aa 23       	and	r26, r26
    3508:	29 f4       	brne	.+10     	; 0x3514 <pow+0x50>
    350a:	ab 2f       	mov	r26, r27
    350c:	be 2f       	mov	r27, r30
    350e:	f8 5f       	subi	r31, 0xF8	; 248
    3510:	d0 f3       	brcs	.-12     	; 0x3506 <pow+0x42>
    3512:	10 c0       	rjmp	.+32     	; 0x3534 <pow+0x70>
    3514:	ff 5f       	subi	r31, 0xFF	; 255
    3516:	70 f4       	brcc	.+28     	; 0x3534 <pow+0x70>
    3518:	a6 95       	lsr	r26
    351a:	e0 f7       	brcc	.-8      	; 0x3514 <pow+0x50>
    351c:	f7 39       	cpi	r31, 0x97	; 151
    351e:	50 f0       	brcs	.+20     	; 0x3534 <pow+0x70>
    3520:	19 f0       	breq	.+6      	; 0x3528 <pow+0x64>
    3522:	ff 3a       	cpi	r31, 0xAF	; 175
    3524:	38 f4       	brcc	.+14     	; 0x3534 <pow+0x70>
    3526:	9f 77       	andi	r25, 0x7F	; 127
    3528:	9f 93       	push	r25
    352a:	0d d0       	rcall	.+26     	; 0x3546 <pow+0x82>
    352c:	0f 90       	pop	r0
    352e:	07 fc       	sbrc	r0, 7
    3530:	90 58       	subi	r25, 0x80	; 128
    3532:	08 95       	ret
    3534:	46 f0       	brts	.+16     	; 0x3546 <pow+0x82>
    3536:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>
    353a:	60 e0       	ldi	r22, 0x00	; 0
    353c:	70 e0       	ldi	r23, 0x00	; 0
    353e:	80 e8       	ldi	r24, 0x80	; 128
    3540:	9f e3       	ldi	r25, 0x3F	; 63
    3542:	08 95       	ret
    3544:	4f e7       	ldi	r20, 0x7F	; 127
    3546:	9f 77       	andi	r25, 0x7F	; 127
    3548:	5f 93       	push	r21
    354a:	4f 93       	push	r20
    354c:	3f 93       	push	r19
    354e:	2f 93       	push	r18
    3550:	0e 94 5d 1b 	call	0x36ba	; 0x36ba <log>
    3554:	2f 91       	pop	r18
    3556:	3f 91       	pop	r19
    3558:	4f 91       	pop	r20
    355a:	5f 91       	pop	r21
    355c:	0e 94 f5 19 	call	0x33ea	; 0x33ea <__mulsf3>
    3560:	0c 94 ba 1a 	jmp	0x3574	; 0x3574 <exp>
    3564:	29 f4       	brne	.+10     	; 0x3570 <pow+0xac>
    3566:	16 f0       	brts	.+4      	; 0x356c <pow+0xa8>
    3568:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    356c:	0c 94 e9 19 	jmp	0x33d2	; 0x33d2 <__fp_zero>
    3570:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>

00003574 <exp>:
    3574:	0e 94 cf 19 	call	0x339e	; 0x339e <__fp_splitA>
    3578:	a8 f3       	brcs	.-22     	; 0x3564 <pow+0xa0>
    357a:	96 38       	cpi	r25, 0x86	; 134
    357c:	a0 f7       	brcc	.-24     	; 0x3566 <pow+0xa2>
    357e:	07 f8       	bld	r0, 7
    3580:	0f 92       	push	r0
    3582:	e8 94       	clt
    3584:	2b e3       	ldi	r18, 0x3B	; 59
    3586:	3a ea       	ldi	r19, 0xAA	; 170
    3588:	48 eb       	ldi	r20, 0xB8	; 184
    358a:	5f e7       	ldi	r21, 0x7F	; 127
    358c:	0e 94 0b 1a 	call	0x3416	; 0x3416 <__mulsf3_pse>
    3590:	0f 92       	push	r0
    3592:	0f 92       	push	r0
    3594:	0f 92       	push	r0
    3596:	4d b7       	in	r20, 0x3d	; 61
    3598:	5e b7       	in	r21, 0x3e	; 62
    359a:	0f 92       	push	r0
    359c:	0e 94 a5 1b 	call	0x374a	; 0x374a <modf>
    35a0:	e2 e5       	ldi	r30, 0x52	; 82
    35a2:	f2 e0       	ldi	r31, 0x02	; 2
    35a4:	0e 94 ec 1a 	call	0x35d8	; 0x35d8 <__fp_powser>
    35a8:	4f 91       	pop	r20
    35aa:	5f 91       	pop	r21
    35ac:	ef 91       	pop	r30
    35ae:	ff 91       	pop	r31
    35b0:	e5 95       	asr	r30
    35b2:	ee 1f       	adc	r30, r30
    35b4:	ff 1f       	adc	r31, r31
    35b6:	49 f0       	breq	.+18     	; 0x35ca <exp+0x56>
    35b8:	fe 57       	subi	r31, 0x7E	; 126
    35ba:	e0 68       	ori	r30, 0x80	; 128
    35bc:	44 27       	eor	r20, r20
    35be:	ee 0f       	add	r30, r30
    35c0:	44 1f       	adc	r20, r20
    35c2:	fa 95       	dec	r31
    35c4:	e1 f7       	brne	.-8      	; 0x35be <exp+0x4a>
    35c6:	41 95       	neg	r20
    35c8:	55 0b       	sbc	r21, r21
    35ca:	0e 94 1f 1b 	call	0x363e	; 0x363e <ldexp>
    35ce:	0f 90       	pop	r0
    35d0:	07 fe       	sbrs	r0, 7
    35d2:	0c 94 13 1b 	jmp	0x3626	; 0x3626 <inverse>
    35d6:	08 95       	ret

000035d8 <__fp_powser>:
    35d8:	df 93       	push	r29
    35da:	cf 93       	push	r28
    35dc:	1f 93       	push	r17
    35de:	0f 93       	push	r16
    35e0:	ff 92       	push	r15
    35e2:	ef 92       	push	r14
    35e4:	df 92       	push	r13
    35e6:	7b 01       	movw	r14, r22
    35e8:	8c 01       	movw	r16, r24
    35ea:	68 94       	set
    35ec:	06 c0       	rjmp	.+12     	; 0x35fa <__fp_powser+0x22>
    35ee:	da 2e       	mov	r13, r26
    35f0:	ef 01       	movw	r28, r30
    35f2:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3x>
    35f6:	fe 01       	movw	r30, r28
    35f8:	e8 94       	clt
    35fa:	a5 91       	lpm	r26, Z+
    35fc:	25 91       	lpm	r18, Z+
    35fe:	35 91       	lpm	r19, Z+
    3600:	45 91       	lpm	r20, Z+
    3602:	55 91       	lpm	r21, Z+
    3604:	a6 f3       	brts	.-24     	; 0x35ee <__fp_powser+0x16>
    3606:	ef 01       	movw	r28, r30
    3608:	0e 94 41 18 	call	0x3082	; 0x3082 <__addsf3x>
    360c:	fe 01       	movw	r30, r28
    360e:	97 01       	movw	r18, r14
    3610:	a8 01       	movw	r20, r16
    3612:	da 94       	dec	r13
    3614:	69 f7       	brne	.-38     	; 0x35f0 <__fp_powser+0x18>
    3616:	df 90       	pop	r13
    3618:	ef 90       	pop	r14
    361a:	ff 90       	pop	r15
    361c:	0f 91       	pop	r16
    361e:	1f 91       	pop	r17
    3620:	cf 91       	pop	r28
    3622:	df 91       	pop	r29
    3624:	08 95       	ret

00003626 <inverse>:
    3626:	9b 01       	movw	r18, r22
    3628:	ac 01       	movw	r20, r24
    362a:	60 e0       	ldi	r22, 0x00	; 0
    362c:	70 e0       	ldi	r23, 0x00	; 0
    362e:	80 e8       	ldi	r24, 0x80	; 128
    3630:	9f e3       	ldi	r25, 0x3F	; 63
    3632:	0c 94 96 18 	jmp	0x312c	; 0x312c <__divsf3>
    3636:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>
    363a:	0c 94 d9 1b 	jmp	0x37b2	; 0x37b2 <__fp_mpack>

0000363e <ldexp>:
    363e:	0e 94 cf 19 	call	0x339e	; 0x339e <__fp_splitA>
    3642:	d8 f3       	brcs	.-10     	; 0x363a <inverse+0x14>
    3644:	99 23       	and	r25, r25
    3646:	c9 f3       	breq	.-14     	; 0x363a <inverse+0x14>
    3648:	94 0f       	add	r25, r20
    364a:	51 1d       	adc	r21, r1
    364c:	a3 f3       	brvs	.-24     	; 0x3636 <inverse+0x10>
    364e:	91 50       	subi	r25, 0x01	; 1
    3650:	50 40       	sbci	r21, 0x00	; 0
    3652:	94 f0       	brlt	.+36     	; 0x3678 <ldexp+0x3a>
    3654:	59 f0       	breq	.+22     	; 0x366c <ldexp+0x2e>
    3656:	88 23       	and	r24, r24
    3658:	32 f0       	brmi	.+12     	; 0x3666 <ldexp+0x28>
    365a:	66 0f       	add	r22, r22
    365c:	77 1f       	adc	r23, r23
    365e:	88 1f       	adc	r24, r24
    3660:	91 50       	subi	r25, 0x01	; 1
    3662:	50 40       	sbci	r21, 0x00	; 0
    3664:	c1 f7       	brne	.-16     	; 0x3656 <ldexp+0x18>
    3666:	9e 3f       	cpi	r25, 0xFE	; 254
    3668:	51 05       	cpc	r21, r1
    366a:	2c f7       	brge	.-54     	; 0x3636 <inverse+0x10>
    366c:	88 0f       	add	r24, r24
    366e:	91 1d       	adc	r25, r1
    3670:	96 95       	lsr	r25
    3672:	87 95       	ror	r24
    3674:	97 f9       	bld	r25, 7
    3676:	08 95       	ret
    3678:	5f 3f       	cpi	r21, 0xFF	; 255
    367a:	ac f0       	brlt	.+42     	; 0x36a6 <ldexp+0x68>
    367c:	98 3e       	cpi	r25, 0xE8	; 232
    367e:	9c f0       	brlt	.+38     	; 0x36a6 <ldexp+0x68>
    3680:	bb 27       	eor	r27, r27
    3682:	86 95       	lsr	r24
    3684:	77 95       	ror	r23
    3686:	67 95       	ror	r22
    3688:	b7 95       	ror	r27
    368a:	08 f4       	brcc	.+2      	; 0x368e <ldexp+0x50>
    368c:	b1 60       	ori	r27, 0x01	; 1
    368e:	93 95       	inc	r25
    3690:	c1 f7       	brne	.-16     	; 0x3682 <ldexp+0x44>
    3692:	bb 0f       	add	r27, r27
    3694:	58 f7       	brcc	.-42     	; 0x366c <ldexp+0x2e>
    3696:	11 f4       	brne	.+4      	; 0x369c <ldexp+0x5e>
    3698:	60 ff       	sbrs	r22, 0
    369a:	e8 cf       	rjmp	.-48     	; 0x366c <ldexp+0x2e>
    369c:	6f 5f       	subi	r22, 0xFF	; 255
    369e:	7f 4f       	sbci	r23, 0xFF	; 255
    36a0:	8f 4f       	sbci	r24, 0xFF	; 255
    36a2:	9f 4f       	sbci	r25, 0xFF	; 255
    36a4:	e3 cf       	rjmp	.-58     	; 0x366c <ldexp+0x2e>
    36a6:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__fp_szero>
    36aa:	16 f0       	brts	.+4      	; 0x36b0 <ldexp+0x72>
    36ac:	0c 94 d9 1b 	jmp	0x37b2	; 0x37b2 <__fp_mpack>
    36b0:	0c 94 a5 19 	jmp	0x334a	; 0x334a <__fp_nan>
    36b4:	68 94       	set
    36b6:	0c 94 9f 19 	jmp	0x333e	; 0x333e <__fp_inf>

000036ba <log>:
    36ba:	0e 94 cf 19 	call	0x339e	; 0x339e <__fp_splitA>
    36be:	a8 f3       	brcs	.-22     	; 0x36aa <ldexp+0x6c>
    36c0:	99 23       	and	r25, r25
    36c2:	c1 f3       	breq	.-16     	; 0x36b4 <ldexp+0x76>
    36c4:	ae f3       	brts	.-22     	; 0x36b0 <ldexp+0x72>
    36c6:	df 93       	push	r29
    36c8:	cf 93       	push	r28
    36ca:	1f 93       	push	r17
    36cc:	0f 93       	push	r16
    36ce:	ff 92       	push	r15
    36d0:	c9 2f       	mov	r28, r25
    36d2:	dd 27       	eor	r29, r29
    36d4:	88 23       	and	r24, r24
    36d6:	2a f0       	brmi	.+10     	; 0x36e2 <log+0x28>
    36d8:	21 97       	sbiw	r28, 0x01	; 1
    36da:	66 0f       	add	r22, r22
    36dc:	77 1f       	adc	r23, r23
    36de:	88 1f       	adc	r24, r24
    36e0:	da f7       	brpl	.-10     	; 0x36d8 <log+0x1e>
    36e2:	20 e0       	ldi	r18, 0x00	; 0
    36e4:	30 e0       	ldi	r19, 0x00	; 0
    36e6:	40 e8       	ldi	r20, 0x80	; 128
    36e8:	5f eb       	ldi	r21, 0xBF	; 191
    36ea:	9f e3       	ldi	r25, 0x3F	; 63
    36ec:	88 39       	cpi	r24, 0x98	; 152
    36ee:	20 f0       	brcs	.+8      	; 0x36f8 <log+0x3e>
    36f0:	80 3e       	cpi	r24, 0xE0	; 224
    36f2:	38 f0       	brcs	.+14     	; 0x3702 <log+0x48>
    36f4:	21 96       	adiw	r28, 0x01	; 1
    36f6:	8f 77       	andi	r24, 0x7F	; 127
    36f8:	0e 94 2a 18 	call	0x3054	; 0x3054 <__addsf3>
    36fc:	ea e7       	ldi	r30, 0x7A	; 122
    36fe:	f2 e0       	ldi	r31, 0x02	; 2
    3700:	04 c0       	rjmp	.+8      	; 0x370a <log+0x50>
    3702:	0e 94 2a 18 	call	0x3054	; 0x3054 <__addsf3>
    3706:	e7 ea       	ldi	r30, 0xA7	; 167
    3708:	f2 e0       	ldi	r31, 0x02	; 2
    370a:	0e 94 ec 1a 	call	0x35d8	; 0x35d8 <__fp_powser>
    370e:	8b 01       	movw	r16, r22
    3710:	be 01       	movw	r22, r28
    3712:	ec 01       	movw	r28, r24
    3714:	fb 2e       	mov	r15, r27
    3716:	6f 57       	subi	r22, 0x7F	; 127
    3718:	71 09       	sbc	r23, r1
    371a:	75 95       	asr	r23
    371c:	77 1f       	adc	r23, r23
    371e:	88 0b       	sbc	r24, r24
    3720:	99 0b       	sbc	r25, r25
    3722:	0e 94 40 19 	call	0x3280	; 0x3280 <__floatsisf>
    3726:	28 e1       	ldi	r18, 0x18	; 24
    3728:	32 e7       	ldi	r19, 0x72	; 114
    372a:	41 e3       	ldi	r20, 0x31	; 49
    372c:	5f e3       	ldi	r21, 0x3F	; 63
    372e:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3x>
    3732:	af 2d       	mov	r26, r15
    3734:	98 01       	movw	r18, r16
    3736:	ae 01       	movw	r20, r28
    3738:	ff 90       	pop	r15
    373a:	0f 91       	pop	r16
    373c:	1f 91       	pop	r17
    373e:	cf 91       	pop	r28
    3740:	df 91       	pop	r29
    3742:	0e 94 41 18 	call	0x3082	; 0x3082 <__addsf3x>
    3746:	0c 94 b6 19 	jmp	0x336c	; 0x336c <__fp_round>

0000374a <modf>:
    374a:	fa 01       	movw	r30, r20
    374c:	dc 01       	movw	r26, r24
    374e:	aa 0f       	add	r26, r26
    3750:	bb 1f       	adc	r27, r27
    3752:	9b 01       	movw	r18, r22
    3754:	ac 01       	movw	r20, r24
    3756:	bf 57       	subi	r27, 0x7F	; 127
    3758:	28 f4       	brcc	.+10     	; 0x3764 <modf+0x1a>
    375a:	22 27       	eor	r18, r18
    375c:	33 27       	eor	r19, r19
    375e:	44 27       	eor	r20, r20
    3760:	50 78       	andi	r21, 0x80	; 128
    3762:	20 c0       	rjmp	.+64     	; 0x37a4 <modf+0x5a>
    3764:	b7 51       	subi	r27, 0x17	; 23
    3766:	90 f4       	brcc	.+36     	; 0x378c <modf+0x42>
    3768:	ab 2f       	mov	r26, r27
    376a:	00 24       	eor	r0, r0
    376c:	46 95       	lsr	r20
    376e:	37 95       	ror	r19
    3770:	27 95       	ror	r18
    3772:	01 1c       	adc	r0, r1
    3774:	a3 95       	inc	r26
    3776:	d2 f3       	brmi	.-12     	; 0x376c <modf+0x22>
    3778:	00 20       	and	r0, r0
    377a:	71 f0       	breq	.+28     	; 0x3798 <modf+0x4e>
    377c:	22 0f       	add	r18, r18
    377e:	33 1f       	adc	r19, r19
    3780:	44 1f       	adc	r20, r20
    3782:	b3 95       	inc	r27
    3784:	da f3       	brmi	.-10     	; 0x377c <modf+0x32>
    3786:	0e d0       	rcall	.+28     	; 0x37a4 <modf+0x5a>
    3788:	0c 94 29 18 	jmp	0x3052	; 0x3052 <__subsf3>
    378c:	61 30       	cpi	r22, 0x01	; 1
    378e:	71 05       	cpc	r23, r1
    3790:	a0 e8       	ldi	r26, 0x80	; 128
    3792:	8a 07       	cpc	r24, r26
    3794:	b9 46       	sbci	r27, 0x69	; 105
    3796:	30 f4       	brcc	.+12     	; 0x37a4 <modf+0x5a>
    3798:	9b 01       	movw	r18, r22
    379a:	ac 01       	movw	r20, r24
    379c:	66 27       	eor	r22, r22
    379e:	77 27       	eor	r23, r23
    37a0:	88 27       	eor	r24, r24
    37a2:	90 78       	andi	r25, 0x80	; 128
    37a4:	30 96       	adiw	r30, 0x00	; 0
    37a6:	21 f0       	breq	.+8      	; 0x37b0 <modf+0x66>
    37a8:	20 83       	st	Z, r18
    37aa:	31 83       	std	Z+1, r19	; 0x01
    37ac:	42 83       	std	Z+2, r20	; 0x02
    37ae:	53 83       	std	Z+3, r21	; 0x03
    37b0:	08 95       	ret

000037b2 <__fp_mpack>:
    37b2:	9f 3f       	cpi	r25, 0xFF	; 255
    37b4:	31 f0       	breq	.+12     	; 0x37c2 <__fp_mpack_finite+0xc>

000037b6 <__fp_mpack_finite>:
    37b6:	91 50       	subi	r25, 0x01	; 1
    37b8:	20 f4       	brcc	.+8      	; 0x37c2 <__fp_mpack_finite+0xc>
    37ba:	87 95       	ror	r24
    37bc:	77 95       	ror	r23
    37be:	67 95       	ror	r22
    37c0:	b7 95       	ror	r27
    37c2:	88 0f       	add	r24, r24
    37c4:	91 1d       	adc	r25, r1
    37c6:	96 95       	lsr	r25
    37c8:	87 95       	ror	r24
    37ca:	97 f9       	bld	r25, 7
    37cc:	08 95       	ret

000037ce <vfprintf>:
    37ce:	a0 e1       	ldi	r26, 0x10	; 16
    37d0:	b0 e0       	ldi	r27, 0x00	; 0
    37d2:	ed ee       	ldi	r30, 0xED	; 237
    37d4:	fb e1       	ldi	r31, 0x1B	; 27
    37d6:	0c 94 af 1f 	jmp	0x3f5e	; 0x3f5e <__prologue_saves__>
    37da:	7c 01       	movw	r14, r24
    37dc:	1b 01       	movw	r2, r22
    37de:	6a 01       	movw	r12, r20
    37e0:	fc 01       	movw	r30, r24
    37e2:	17 82       	std	Z+7, r1	; 0x07
    37e4:	16 82       	std	Z+6, r1	; 0x06
    37e6:	83 81       	ldd	r24, Z+3	; 0x03
    37e8:	81 ff       	sbrs	r24, 1
    37ea:	44 c3       	rjmp	.+1672   	; 0x3e74 <vfprintf+0x6a6>
    37ec:	9e 01       	movw	r18, r28
    37ee:	2f 5f       	subi	r18, 0xFF	; 255
    37f0:	3f 4f       	sbci	r19, 0xFF	; 255
    37f2:	39 01       	movw	r6, r18
    37f4:	f7 01       	movw	r30, r14
    37f6:	93 81       	ldd	r25, Z+3	; 0x03
    37f8:	f1 01       	movw	r30, r2
    37fa:	93 fd       	sbrc	r25, 3
    37fc:	85 91       	lpm	r24, Z+
    37fe:	93 ff       	sbrs	r25, 3
    3800:	81 91       	ld	r24, Z+
    3802:	1f 01       	movw	r2, r30
    3804:	88 23       	and	r24, r24
    3806:	09 f4       	brne	.+2      	; 0x380a <vfprintf+0x3c>
    3808:	31 c3       	rjmp	.+1634   	; 0x3e6c <vfprintf+0x69e>
    380a:	85 32       	cpi	r24, 0x25	; 37
    380c:	39 f4       	brne	.+14     	; 0x381c <vfprintf+0x4e>
    380e:	93 fd       	sbrc	r25, 3
    3810:	85 91       	lpm	r24, Z+
    3812:	93 ff       	sbrs	r25, 3
    3814:	81 91       	ld	r24, Z+
    3816:	1f 01       	movw	r2, r30
    3818:	85 32       	cpi	r24, 0x25	; 37
    381a:	39 f4       	brne	.+14     	; 0x382a <vfprintf+0x5c>
    381c:	b7 01       	movw	r22, r14
    381e:	90 e0       	ldi	r25, 0x00	; 0
    3820:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3824:	56 01       	movw	r10, r12
    3826:	65 01       	movw	r12, r10
    3828:	e5 cf       	rjmp	.-54     	; 0x37f4 <vfprintf+0x26>
    382a:	10 e0       	ldi	r17, 0x00	; 0
    382c:	51 2c       	mov	r5, r1
    382e:	91 2c       	mov	r9, r1
    3830:	ff e1       	ldi	r31, 0x1F	; 31
    3832:	f9 15       	cp	r31, r9
    3834:	d8 f0       	brcs	.+54     	; 0x386c <vfprintf+0x9e>
    3836:	8b 32       	cpi	r24, 0x2B	; 43
    3838:	79 f0       	breq	.+30     	; 0x3858 <vfprintf+0x8a>
    383a:	38 f4       	brcc	.+14     	; 0x384a <vfprintf+0x7c>
    383c:	80 32       	cpi	r24, 0x20	; 32
    383e:	79 f0       	breq	.+30     	; 0x385e <vfprintf+0x90>
    3840:	83 32       	cpi	r24, 0x23	; 35
    3842:	a1 f4       	brne	.+40     	; 0x386c <vfprintf+0x9e>
    3844:	f9 2d       	mov	r31, r9
    3846:	f0 61       	ori	r31, 0x10	; 16
    3848:	2e c0       	rjmp	.+92     	; 0x38a6 <vfprintf+0xd8>
    384a:	8d 32       	cpi	r24, 0x2D	; 45
    384c:	61 f0       	breq	.+24     	; 0x3866 <vfprintf+0x98>
    384e:	80 33       	cpi	r24, 0x30	; 48
    3850:	69 f4       	brne	.+26     	; 0x386c <vfprintf+0x9e>
    3852:	29 2d       	mov	r18, r9
    3854:	21 60       	ori	r18, 0x01	; 1
    3856:	2d c0       	rjmp	.+90     	; 0x38b2 <vfprintf+0xe4>
    3858:	39 2d       	mov	r19, r9
    385a:	32 60       	ori	r19, 0x02	; 2
    385c:	93 2e       	mov	r9, r19
    385e:	89 2d       	mov	r24, r9
    3860:	84 60       	ori	r24, 0x04	; 4
    3862:	98 2e       	mov	r9, r24
    3864:	2a c0       	rjmp	.+84     	; 0x38ba <vfprintf+0xec>
    3866:	e9 2d       	mov	r30, r9
    3868:	e8 60       	ori	r30, 0x08	; 8
    386a:	15 c0       	rjmp	.+42     	; 0x3896 <vfprintf+0xc8>
    386c:	97 fc       	sbrc	r9, 7
    386e:	2d c0       	rjmp	.+90     	; 0x38ca <vfprintf+0xfc>
    3870:	20 ed       	ldi	r18, 0xD0	; 208
    3872:	28 0f       	add	r18, r24
    3874:	2a 30       	cpi	r18, 0x0A	; 10
    3876:	88 f4       	brcc	.+34     	; 0x389a <vfprintf+0xcc>
    3878:	96 fe       	sbrs	r9, 6
    387a:	06 c0       	rjmp	.+12     	; 0x3888 <vfprintf+0xba>
    387c:	3a e0       	ldi	r19, 0x0A	; 10
    387e:	13 9f       	mul	r17, r19
    3880:	20 0d       	add	r18, r0
    3882:	11 24       	eor	r1, r1
    3884:	12 2f       	mov	r17, r18
    3886:	19 c0       	rjmp	.+50     	; 0x38ba <vfprintf+0xec>
    3888:	8a e0       	ldi	r24, 0x0A	; 10
    388a:	58 9e       	mul	r5, r24
    388c:	20 0d       	add	r18, r0
    388e:	11 24       	eor	r1, r1
    3890:	52 2e       	mov	r5, r18
    3892:	e9 2d       	mov	r30, r9
    3894:	e0 62       	ori	r30, 0x20	; 32
    3896:	9e 2e       	mov	r9, r30
    3898:	10 c0       	rjmp	.+32     	; 0x38ba <vfprintf+0xec>
    389a:	8e 32       	cpi	r24, 0x2E	; 46
    389c:	31 f4       	brne	.+12     	; 0x38aa <vfprintf+0xdc>
    389e:	96 fc       	sbrc	r9, 6
    38a0:	e5 c2       	rjmp	.+1482   	; 0x3e6c <vfprintf+0x69e>
    38a2:	f9 2d       	mov	r31, r9
    38a4:	f0 64       	ori	r31, 0x40	; 64
    38a6:	9f 2e       	mov	r9, r31
    38a8:	08 c0       	rjmp	.+16     	; 0x38ba <vfprintf+0xec>
    38aa:	8c 36       	cpi	r24, 0x6C	; 108
    38ac:	21 f4       	brne	.+8      	; 0x38b6 <vfprintf+0xe8>
    38ae:	29 2d       	mov	r18, r9
    38b0:	20 68       	ori	r18, 0x80	; 128
    38b2:	92 2e       	mov	r9, r18
    38b4:	02 c0       	rjmp	.+4      	; 0x38ba <vfprintf+0xec>
    38b6:	88 36       	cpi	r24, 0x68	; 104
    38b8:	41 f4       	brne	.+16     	; 0x38ca <vfprintf+0xfc>
    38ba:	f1 01       	movw	r30, r2
    38bc:	93 fd       	sbrc	r25, 3
    38be:	85 91       	lpm	r24, Z+
    38c0:	93 ff       	sbrs	r25, 3
    38c2:	81 91       	ld	r24, Z+
    38c4:	1f 01       	movw	r2, r30
    38c6:	81 11       	cpse	r24, r1
    38c8:	b3 cf       	rjmp	.-154    	; 0x3830 <vfprintf+0x62>
    38ca:	9b eb       	ldi	r25, 0xBB	; 187
    38cc:	98 0f       	add	r25, r24
    38ce:	93 30       	cpi	r25, 0x03	; 3
    38d0:	20 f4       	brcc	.+8      	; 0x38da <vfprintf+0x10c>
    38d2:	99 2d       	mov	r25, r9
    38d4:	90 61       	ori	r25, 0x10	; 16
    38d6:	80 5e       	subi	r24, 0xE0	; 224
    38d8:	07 c0       	rjmp	.+14     	; 0x38e8 <vfprintf+0x11a>
    38da:	9b e9       	ldi	r25, 0x9B	; 155
    38dc:	98 0f       	add	r25, r24
    38de:	93 30       	cpi	r25, 0x03	; 3
    38e0:	08 f0       	brcs	.+2      	; 0x38e4 <vfprintf+0x116>
    38e2:	66 c1       	rjmp	.+716    	; 0x3bb0 <vfprintf+0x3e2>
    38e4:	99 2d       	mov	r25, r9
    38e6:	9f 7e       	andi	r25, 0xEF	; 239
    38e8:	96 ff       	sbrs	r25, 6
    38ea:	16 e0       	ldi	r17, 0x06	; 6
    38ec:	9f 73       	andi	r25, 0x3F	; 63
    38ee:	99 2e       	mov	r9, r25
    38f0:	85 36       	cpi	r24, 0x65	; 101
    38f2:	19 f4       	brne	.+6      	; 0x38fa <vfprintf+0x12c>
    38f4:	90 64       	ori	r25, 0x40	; 64
    38f6:	99 2e       	mov	r9, r25
    38f8:	08 c0       	rjmp	.+16     	; 0x390a <vfprintf+0x13c>
    38fa:	86 36       	cpi	r24, 0x66	; 102
    38fc:	21 f4       	brne	.+8      	; 0x3906 <vfprintf+0x138>
    38fe:	39 2f       	mov	r19, r25
    3900:	30 68       	ori	r19, 0x80	; 128
    3902:	93 2e       	mov	r9, r19
    3904:	02 c0       	rjmp	.+4      	; 0x390a <vfprintf+0x13c>
    3906:	11 11       	cpse	r17, r1
    3908:	11 50       	subi	r17, 0x01	; 1
    390a:	97 fe       	sbrs	r9, 7
    390c:	07 c0       	rjmp	.+14     	; 0x391c <vfprintf+0x14e>
    390e:	1c 33       	cpi	r17, 0x3C	; 60
    3910:	50 f4       	brcc	.+20     	; 0x3926 <vfprintf+0x158>
    3912:	44 24       	eor	r4, r4
    3914:	43 94       	inc	r4
    3916:	41 0e       	add	r4, r17
    3918:	27 e0       	ldi	r18, 0x07	; 7
    391a:	0b c0       	rjmp	.+22     	; 0x3932 <vfprintf+0x164>
    391c:	18 30       	cpi	r17, 0x08	; 8
    391e:	38 f0       	brcs	.+14     	; 0x392e <vfprintf+0x160>
    3920:	27 e0       	ldi	r18, 0x07	; 7
    3922:	17 e0       	ldi	r17, 0x07	; 7
    3924:	05 c0       	rjmp	.+10     	; 0x3930 <vfprintf+0x162>
    3926:	27 e0       	ldi	r18, 0x07	; 7
    3928:	9c e3       	ldi	r25, 0x3C	; 60
    392a:	49 2e       	mov	r4, r25
    392c:	02 c0       	rjmp	.+4      	; 0x3932 <vfprintf+0x164>
    392e:	21 2f       	mov	r18, r17
    3930:	41 2c       	mov	r4, r1
    3932:	56 01       	movw	r10, r12
    3934:	84 e0       	ldi	r24, 0x04	; 4
    3936:	a8 0e       	add	r10, r24
    3938:	b1 1c       	adc	r11, r1
    393a:	f6 01       	movw	r30, r12
    393c:	60 81       	ld	r22, Z
    393e:	71 81       	ldd	r23, Z+1	; 0x01
    3940:	82 81       	ldd	r24, Z+2	; 0x02
    3942:	93 81       	ldd	r25, Z+3	; 0x03
    3944:	04 2d       	mov	r16, r4
    3946:	a3 01       	movw	r20, r6
    3948:	0e 94 fa 1f 	call	0x3ff4	; 0x3ff4 <__ftoa_engine>
    394c:	6c 01       	movw	r12, r24
    394e:	f9 81       	ldd	r31, Y+1	; 0x01
    3950:	fc 87       	std	Y+12, r31	; 0x0c
    3952:	f0 ff       	sbrs	r31, 0
    3954:	02 c0       	rjmp	.+4      	; 0x395a <vfprintf+0x18c>
    3956:	f3 ff       	sbrs	r31, 3
    3958:	06 c0       	rjmp	.+12     	; 0x3966 <vfprintf+0x198>
    395a:	91 fc       	sbrc	r9, 1
    395c:	06 c0       	rjmp	.+12     	; 0x396a <vfprintf+0x19c>
    395e:	92 fe       	sbrs	r9, 2
    3960:	06 c0       	rjmp	.+12     	; 0x396e <vfprintf+0x1a0>
    3962:	00 e2       	ldi	r16, 0x20	; 32
    3964:	05 c0       	rjmp	.+10     	; 0x3970 <vfprintf+0x1a2>
    3966:	0d e2       	ldi	r16, 0x2D	; 45
    3968:	03 c0       	rjmp	.+6      	; 0x3970 <vfprintf+0x1a2>
    396a:	0b e2       	ldi	r16, 0x2B	; 43
    396c:	01 c0       	rjmp	.+2      	; 0x3970 <vfprintf+0x1a2>
    396e:	00 e0       	ldi	r16, 0x00	; 0
    3970:	8c 85       	ldd	r24, Y+12	; 0x0c
    3972:	8c 70       	andi	r24, 0x0C	; 12
    3974:	19 f0       	breq	.+6      	; 0x397c <vfprintf+0x1ae>
    3976:	01 11       	cpse	r16, r1
    3978:	5a c2       	rjmp	.+1204   	; 0x3e2e <vfprintf+0x660>
    397a:	9b c2       	rjmp	.+1334   	; 0x3eb2 <vfprintf+0x6e4>
    397c:	97 fe       	sbrs	r9, 7
    397e:	10 c0       	rjmp	.+32     	; 0x39a0 <vfprintf+0x1d2>
    3980:	4c 0c       	add	r4, r12
    3982:	fc 85       	ldd	r31, Y+12	; 0x0c
    3984:	f4 ff       	sbrs	r31, 4
    3986:	04 c0       	rjmp	.+8      	; 0x3990 <vfprintf+0x1c2>
    3988:	8a 81       	ldd	r24, Y+2	; 0x02
    398a:	81 33       	cpi	r24, 0x31	; 49
    398c:	09 f4       	brne	.+2      	; 0x3990 <vfprintf+0x1c2>
    398e:	4a 94       	dec	r4
    3990:	14 14       	cp	r1, r4
    3992:	74 f5       	brge	.+92     	; 0x39f0 <vfprintf+0x222>
    3994:	28 e0       	ldi	r18, 0x08	; 8
    3996:	24 15       	cp	r18, r4
    3998:	78 f5       	brcc	.+94     	; 0x39f8 <vfprintf+0x22a>
    399a:	88 e0       	ldi	r24, 0x08	; 8
    399c:	48 2e       	mov	r4, r24
    399e:	2c c0       	rjmp	.+88     	; 0x39f8 <vfprintf+0x22a>
    39a0:	96 fc       	sbrc	r9, 6
    39a2:	2a c0       	rjmp	.+84     	; 0x39f8 <vfprintf+0x22a>
    39a4:	81 2f       	mov	r24, r17
    39a6:	90 e0       	ldi	r25, 0x00	; 0
    39a8:	8c 15       	cp	r24, r12
    39aa:	9d 05       	cpc	r25, r13
    39ac:	9c f0       	brlt	.+38     	; 0x39d4 <vfprintf+0x206>
    39ae:	3c ef       	ldi	r19, 0xFC	; 252
    39b0:	c3 16       	cp	r12, r19
    39b2:	3f ef       	ldi	r19, 0xFF	; 255
    39b4:	d3 06       	cpc	r13, r19
    39b6:	74 f0       	brlt	.+28     	; 0x39d4 <vfprintf+0x206>
    39b8:	89 2d       	mov	r24, r9
    39ba:	80 68       	ori	r24, 0x80	; 128
    39bc:	98 2e       	mov	r9, r24
    39be:	0a c0       	rjmp	.+20     	; 0x39d4 <vfprintf+0x206>
    39c0:	e2 e0       	ldi	r30, 0x02	; 2
    39c2:	f0 e0       	ldi	r31, 0x00	; 0
    39c4:	ec 0f       	add	r30, r28
    39c6:	fd 1f       	adc	r31, r29
    39c8:	e1 0f       	add	r30, r17
    39ca:	f1 1d       	adc	r31, r1
    39cc:	80 81       	ld	r24, Z
    39ce:	80 33       	cpi	r24, 0x30	; 48
    39d0:	19 f4       	brne	.+6      	; 0x39d8 <vfprintf+0x20a>
    39d2:	11 50       	subi	r17, 0x01	; 1
    39d4:	11 11       	cpse	r17, r1
    39d6:	f4 cf       	rjmp	.-24     	; 0x39c0 <vfprintf+0x1f2>
    39d8:	97 fe       	sbrs	r9, 7
    39da:	0e c0       	rjmp	.+28     	; 0x39f8 <vfprintf+0x22a>
    39dc:	44 24       	eor	r4, r4
    39de:	43 94       	inc	r4
    39e0:	41 0e       	add	r4, r17
    39e2:	81 2f       	mov	r24, r17
    39e4:	90 e0       	ldi	r25, 0x00	; 0
    39e6:	c8 16       	cp	r12, r24
    39e8:	d9 06       	cpc	r13, r25
    39ea:	2c f4       	brge	.+10     	; 0x39f6 <vfprintf+0x228>
    39ec:	1c 19       	sub	r17, r12
    39ee:	04 c0       	rjmp	.+8      	; 0x39f8 <vfprintf+0x22a>
    39f0:	44 24       	eor	r4, r4
    39f2:	43 94       	inc	r4
    39f4:	01 c0       	rjmp	.+2      	; 0x39f8 <vfprintf+0x22a>
    39f6:	10 e0       	ldi	r17, 0x00	; 0
    39f8:	97 fe       	sbrs	r9, 7
    39fa:	06 c0       	rjmp	.+12     	; 0x3a08 <vfprintf+0x23a>
    39fc:	1c 14       	cp	r1, r12
    39fe:	1d 04       	cpc	r1, r13
    3a00:	34 f4       	brge	.+12     	; 0x3a0e <vfprintf+0x240>
    3a02:	c6 01       	movw	r24, r12
    3a04:	01 96       	adiw	r24, 0x01	; 1
    3a06:	05 c0       	rjmp	.+10     	; 0x3a12 <vfprintf+0x244>
    3a08:	85 e0       	ldi	r24, 0x05	; 5
    3a0a:	90 e0       	ldi	r25, 0x00	; 0
    3a0c:	02 c0       	rjmp	.+4      	; 0x3a12 <vfprintf+0x244>
    3a0e:	81 e0       	ldi	r24, 0x01	; 1
    3a10:	90 e0       	ldi	r25, 0x00	; 0
    3a12:	01 11       	cpse	r16, r1
    3a14:	01 96       	adiw	r24, 0x01	; 1
    3a16:	11 23       	and	r17, r17
    3a18:	31 f0       	breq	.+12     	; 0x3a26 <vfprintf+0x258>
    3a1a:	21 2f       	mov	r18, r17
    3a1c:	30 e0       	ldi	r19, 0x00	; 0
    3a1e:	2f 5f       	subi	r18, 0xFF	; 255
    3a20:	3f 4f       	sbci	r19, 0xFF	; 255
    3a22:	82 0f       	add	r24, r18
    3a24:	93 1f       	adc	r25, r19
    3a26:	25 2d       	mov	r18, r5
    3a28:	30 e0       	ldi	r19, 0x00	; 0
    3a2a:	82 17       	cp	r24, r18
    3a2c:	93 07       	cpc	r25, r19
    3a2e:	14 f4       	brge	.+4      	; 0x3a34 <vfprintf+0x266>
    3a30:	58 1a       	sub	r5, r24
    3a32:	01 c0       	rjmp	.+2      	; 0x3a36 <vfprintf+0x268>
    3a34:	51 2c       	mov	r5, r1
    3a36:	89 2d       	mov	r24, r9
    3a38:	89 70       	andi	r24, 0x09	; 9
    3a3a:	49 f4       	brne	.+18     	; 0x3a4e <vfprintf+0x280>
    3a3c:	55 20       	and	r5, r5
    3a3e:	39 f0       	breq	.+14     	; 0x3a4e <vfprintf+0x280>
    3a40:	b7 01       	movw	r22, r14
    3a42:	80 e2       	ldi	r24, 0x20	; 32
    3a44:	90 e0       	ldi	r25, 0x00	; 0
    3a46:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3a4a:	5a 94       	dec	r5
    3a4c:	f7 cf       	rjmp	.-18     	; 0x3a3c <vfprintf+0x26e>
    3a4e:	00 23       	and	r16, r16
    3a50:	29 f0       	breq	.+10     	; 0x3a5c <vfprintf+0x28e>
    3a52:	b7 01       	movw	r22, r14
    3a54:	80 2f       	mov	r24, r16
    3a56:	90 e0       	ldi	r25, 0x00	; 0
    3a58:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3a5c:	93 fc       	sbrc	r9, 3
    3a5e:	09 c0       	rjmp	.+18     	; 0x3a72 <vfprintf+0x2a4>
    3a60:	55 20       	and	r5, r5
    3a62:	39 f0       	breq	.+14     	; 0x3a72 <vfprintf+0x2a4>
    3a64:	b7 01       	movw	r22, r14
    3a66:	80 e3       	ldi	r24, 0x30	; 48
    3a68:	90 e0       	ldi	r25, 0x00	; 0
    3a6a:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3a6e:	5a 94       	dec	r5
    3a70:	f7 cf       	rjmp	.-18     	; 0x3a60 <vfprintf+0x292>
    3a72:	97 fe       	sbrs	r9, 7
    3a74:	4c c0       	rjmp	.+152    	; 0x3b0e <vfprintf+0x340>
    3a76:	46 01       	movw	r8, r12
    3a78:	d7 fe       	sbrs	r13, 7
    3a7a:	02 c0       	rjmp	.+4      	; 0x3a80 <vfprintf+0x2b2>
    3a7c:	81 2c       	mov	r8, r1
    3a7e:	91 2c       	mov	r9, r1
    3a80:	c6 01       	movw	r24, r12
    3a82:	88 19       	sub	r24, r8
    3a84:	99 09       	sbc	r25, r9
    3a86:	f3 01       	movw	r30, r6
    3a88:	e8 0f       	add	r30, r24
    3a8a:	f9 1f       	adc	r31, r25
    3a8c:	fe 87       	std	Y+14, r31	; 0x0e
    3a8e:	ed 87       	std	Y+13, r30	; 0x0d
    3a90:	96 01       	movw	r18, r12
    3a92:	24 19       	sub	r18, r4
    3a94:	31 09       	sbc	r19, r1
    3a96:	38 8b       	std	Y+16, r19	; 0x10
    3a98:	2f 87       	std	Y+15, r18	; 0x0f
    3a9a:	01 2f       	mov	r16, r17
    3a9c:	10 e0       	ldi	r17, 0x00	; 0
    3a9e:	11 95       	neg	r17
    3aa0:	01 95       	neg	r16
    3aa2:	11 09       	sbc	r17, r1
    3aa4:	3f ef       	ldi	r19, 0xFF	; 255
    3aa6:	83 16       	cp	r8, r19
    3aa8:	93 06       	cpc	r9, r19
    3aaa:	29 f4       	brne	.+10     	; 0x3ab6 <vfprintf+0x2e8>
    3aac:	b7 01       	movw	r22, r14
    3aae:	8e e2       	ldi	r24, 0x2E	; 46
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3ab6:	c8 14       	cp	r12, r8
    3ab8:	d9 04       	cpc	r13, r9
    3aba:	4c f0       	brlt	.+18     	; 0x3ace <vfprintf+0x300>
    3abc:	8f 85       	ldd	r24, Y+15	; 0x0f
    3abe:	98 89       	ldd	r25, Y+16	; 0x10
    3ac0:	88 15       	cp	r24, r8
    3ac2:	99 05       	cpc	r25, r9
    3ac4:	24 f4       	brge	.+8      	; 0x3ace <vfprintf+0x300>
    3ac6:	ed 85       	ldd	r30, Y+13	; 0x0d
    3ac8:	fe 85       	ldd	r31, Y+14	; 0x0e
    3aca:	81 81       	ldd	r24, Z+1	; 0x01
    3acc:	01 c0       	rjmp	.+2      	; 0x3ad0 <vfprintf+0x302>
    3ace:	80 e3       	ldi	r24, 0x30	; 48
    3ad0:	f1 e0       	ldi	r31, 0x01	; 1
    3ad2:	8f 1a       	sub	r8, r31
    3ad4:	91 08       	sbc	r9, r1
    3ad6:	2d 85       	ldd	r18, Y+13	; 0x0d
    3ad8:	3e 85       	ldd	r19, Y+14	; 0x0e
    3ada:	2f 5f       	subi	r18, 0xFF	; 255
    3adc:	3f 4f       	sbci	r19, 0xFF	; 255
    3ade:	3e 87       	std	Y+14, r19	; 0x0e
    3ae0:	2d 87       	std	Y+13, r18	; 0x0d
    3ae2:	80 16       	cp	r8, r16
    3ae4:	91 06       	cpc	r9, r17
    3ae6:	2c f0       	brlt	.+10     	; 0x3af2 <vfprintf+0x324>
    3ae8:	b7 01       	movw	r22, r14
    3aea:	90 e0       	ldi	r25, 0x00	; 0
    3aec:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3af0:	d9 cf       	rjmp	.-78     	; 0x3aa4 <vfprintf+0x2d6>
    3af2:	c8 14       	cp	r12, r8
    3af4:	d9 04       	cpc	r13, r9
    3af6:	41 f4       	brne	.+16     	; 0x3b08 <vfprintf+0x33a>
    3af8:	9a 81       	ldd	r25, Y+2	; 0x02
    3afa:	96 33       	cpi	r25, 0x36	; 54
    3afc:	20 f4       	brcc	.+8      	; 0x3b06 <vfprintf+0x338>
    3afe:	95 33       	cpi	r25, 0x35	; 53
    3b00:	19 f4       	brne	.+6      	; 0x3b08 <vfprintf+0x33a>
    3b02:	3c 85       	ldd	r19, Y+12	; 0x0c
    3b04:	34 ff       	sbrs	r19, 4
    3b06:	81 e3       	ldi	r24, 0x31	; 49
    3b08:	b7 01       	movw	r22, r14
    3b0a:	90 e0       	ldi	r25, 0x00	; 0
    3b0c:	4e c0       	rjmp	.+156    	; 0x3baa <vfprintf+0x3dc>
    3b0e:	8a 81       	ldd	r24, Y+2	; 0x02
    3b10:	81 33       	cpi	r24, 0x31	; 49
    3b12:	19 f0       	breq	.+6      	; 0x3b1a <vfprintf+0x34c>
    3b14:	9c 85       	ldd	r25, Y+12	; 0x0c
    3b16:	9f 7e       	andi	r25, 0xEF	; 239
    3b18:	9c 87       	std	Y+12, r25	; 0x0c
    3b1a:	b7 01       	movw	r22, r14
    3b1c:	90 e0       	ldi	r25, 0x00	; 0
    3b1e:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3b22:	11 11       	cpse	r17, r1
    3b24:	05 c0       	rjmp	.+10     	; 0x3b30 <vfprintf+0x362>
    3b26:	94 fc       	sbrc	r9, 4
    3b28:	18 c0       	rjmp	.+48     	; 0x3b5a <vfprintf+0x38c>
    3b2a:	85 e6       	ldi	r24, 0x65	; 101
    3b2c:	90 e0       	ldi	r25, 0x00	; 0
    3b2e:	17 c0       	rjmp	.+46     	; 0x3b5e <vfprintf+0x390>
    3b30:	b7 01       	movw	r22, r14
    3b32:	8e e2       	ldi	r24, 0x2E	; 46
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3b3a:	1e 5f       	subi	r17, 0xFE	; 254
    3b3c:	82 e0       	ldi	r24, 0x02	; 2
    3b3e:	01 e0       	ldi	r16, 0x01	; 1
    3b40:	08 0f       	add	r16, r24
    3b42:	f3 01       	movw	r30, r6
    3b44:	e8 0f       	add	r30, r24
    3b46:	f1 1d       	adc	r31, r1
    3b48:	80 81       	ld	r24, Z
    3b4a:	b7 01       	movw	r22, r14
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3b52:	80 2f       	mov	r24, r16
    3b54:	01 13       	cpse	r16, r17
    3b56:	f3 cf       	rjmp	.-26     	; 0x3b3e <vfprintf+0x370>
    3b58:	e6 cf       	rjmp	.-52     	; 0x3b26 <vfprintf+0x358>
    3b5a:	85 e4       	ldi	r24, 0x45	; 69
    3b5c:	90 e0       	ldi	r25, 0x00	; 0
    3b5e:	b7 01       	movw	r22, r14
    3b60:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3b64:	d7 fc       	sbrc	r13, 7
    3b66:	06 c0       	rjmp	.+12     	; 0x3b74 <vfprintf+0x3a6>
    3b68:	c1 14       	cp	r12, r1
    3b6a:	d1 04       	cpc	r13, r1
    3b6c:	41 f4       	brne	.+16     	; 0x3b7e <vfprintf+0x3b0>
    3b6e:	ec 85       	ldd	r30, Y+12	; 0x0c
    3b70:	e4 ff       	sbrs	r30, 4
    3b72:	05 c0       	rjmp	.+10     	; 0x3b7e <vfprintf+0x3b0>
    3b74:	d1 94       	neg	r13
    3b76:	c1 94       	neg	r12
    3b78:	d1 08       	sbc	r13, r1
    3b7a:	8d e2       	ldi	r24, 0x2D	; 45
    3b7c:	01 c0       	rjmp	.+2      	; 0x3b80 <vfprintf+0x3b2>
    3b7e:	8b e2       	ldi	r24, 0x2B	; 43
    3b80:	b7 01       	movw	r22, r14
    3b82:	90 e0       	ldi	r25, 0x00	; 0
    3b84:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3b88:	80 e3       	ldi	r24, 0x30	; 48
    3b8a:	2a e0       	ldi	r18, 0x0A	; 10
    3b8c:	c2 16       	cp	r12, r18
    3b8e:	d1 04       	cpc	r13, r1
    3b90:	2c f0       	brlt	.+10     	; 0x3b9c <vfprintf+0x3ce>
    3b92:	8f 5f       	subi	r24, 0xFF	; 255
    3b94:	fa e0       	ldi	r31, 0x0A	; 10
    3b96:	cf 1a       	sub	r12, r31
    3b98:	d1 08       	sbc	r13, r1
    3b9a:	f7 cf       	rjmp	.-18     	; 0x3b8a <vfprintf+0x3bc>
    3b9c:	b7 01       	movw	r22, r14
    3b9e:	90 e0       	ldi	r25, 0x00	; 0
    3ba0:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3ba4:	b7 01       	movw	r22, r14
    3ba6:	c6 01       	movw	r24, r12
    3ba8:	c0 96       	adiw	r24, 0x30	; 48
    3baa:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3bae:	54 c1       	rjmp	.+680    	; 0x3e58 <vfprintf+0x68a>
    3bb0:	83 36       	cpi	r24, 0x63	; 99
    3bb2:	31 f0       	breq	.+12     	; 0x3bc0 <vfprintf+0x3f2>
    3bb4:	83 37       	cpi	r24, 0x73	; 115
    3bb6:	79 f0       	breq	.+30     	; 0x3bd6 <vfprintf+0x408>
    3bb8:	83 35       	cpi	r24, 0x53	; 83
    3bba:	09 f0       	breq	.+2      	; 0x3bbe <vfprintf+0x3f0>
    3bbc:	56 c0       	rjmp	.+172    	; 0x3c6a <vfprintf+0x49c>
    3bbe:	20 c0       	rjmp	.+64     	; 0x3c00 <vfprintf+0x432>
    3bc0:	56 01       	movw	r10, r12
    3bc2:	32 e0       	ldi	r19, 0x02	; 2
    3bc4:	a3 0e       	add	r10, r19
    3bc6:	b1 1c       	adc	r11, r1
    3bc8:	f6 01       	movw	r30, r12
    3bca:	80 81       	ld	r24, Z
    3bcc:	89 83       	std	Y+1, r24	; 0x01
    3bce:	01 e0       	ldi	r16, 0x01	; 1
    3bd0:	10 e0       	ldi	r17, 0x00	; 0
    3bd2:	63 01       	movw	r12, r6
    3bd4:	12 c0       	rjmp	.+36     	; 0x3bfa <vfprintf+0x42c>
    3bd6:	56 01       	movw	r10, r12
    3bd8:	f2 e0       	ldi	r31, 0x02	; 2
    3bda:	af 0e       	add	r10, r31
    3bdc:	b1 1c       	adc	r11, r1
    3bde:	f6 01       	movw	r30, r12
    3be0:	c0 80       	ld	r12, Z
    3be2:	d1 80       	ldd	r13, Z+1	; 0x01
    3be4:	96 fe       	sbrs	r9, 6
    3be6:	03 c0       	rjmp	.+6      	; 0x3bee <vfprintf+0x420>
    3be8:	61 2f       	mov	r22, r17
    3bea:	70 e0       	ldi	r23, 0x00	; 0
    3bec:	02 c0       	rjmp	.+4      	; 0x3bf2 <vfprintf+0x424>
    3bee:	6f ef       	ldi	r22, 0xFF	; 255
    3bf0:	7f ef       	ldi	r23, 0xFF	; 255
    3bf2:	c6 01       	movw	r24, r12
    3bf4:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <strnlen>
    3bf8:	8c 01       	movw	r16, r24
    3bfa:	f9 2d       	mov	r31, r9
    3bfc:	ff 77       	andi	r31, 0x7F	; 127
    3bfe:	14 c0       	rjmp	.+40     	; 0x3c28 <vfprintf+0x45a>
    3c00:	56 01       	movw	r10, r12
    3c02:	22 e0       	ldi	r18, 0x02	; 2
    3c04:	a2 0e       	add	r10, r18
    3c06:	b1 1c       	adc	r11, r1
    3c08:	f6 01       	movw	r30, r12
    3c0a:	c0 80       	ld	r12, Z
    3c0c:	d1 80       	ldd	r13, Z+1	; 0x01
    3c0e:	96 fe       	sbrs	r9, 6
    3c10:	03 c0       	rjmp	.+6      	; 0x3c18 <vfprintf+0x44a>
    3c12:	61 2f       	mov	r22, r17
    3c14:	70 e0       	ldi	r23, 0x00	; 0
    3c16:	02 c0       	rjmp	.+4      	; 0x3c1c <vfprintf+0x44e>
    3c18:	6f ef       	ldi	r22, 0xFF	; 255
    3c1a:	7f ef       	ldi	r23, 0xFF	; 255
    3c1c:	c6 01       	movw	r24, r12
    3c1e:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <strnlen_P>
    3c22:	8c 01       	movw	r16, r24
    3c24:	f9 2d       	mov	r31, r9
    3c26:	f0 68       	ori	r31, 0x80	; 128
    3c28:	9f 2e       	mov	r9, r31
    3c2a:	f3 fd       	sbrc	r31, 3
    3c2c:	1a c0       	rjmp	.+52     	; 0x3c62 <vfprintf+0x494>
    3c2e:	85 2d       	mov	r24, r5
    3c30:	90 e0       	ldi	r25, 0x00	; 0
    3c32:	08 17       	cp	r16, r24
    3c34:	19 07       	cpc	r17, r25
    3c36:	a8 f4       	brcc	.+42     	; 0x3c62 <vfprintf+0x494>
    3c38:	b7 01       	movw	r22, r14
    3c3a:	80 e2       	ldi	r24, 0x20	; 32
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3c42:	5a 94       	dec	r5
    3c44:	f4 cf       	rjmp	.-24     	; 0x3c2e <vfprintf+0x460>
    3c46:	f6 01       	movw	r30, r12
    3c48:	97 fc       	sbrc	r9, 7
    3c4a:	85 91       	lpm	r24, Z+
    3c4c:	97 fe       	sbrs	r9, 7
    3c4e:	81 91       	ld	r24, Z+
    3c50:	6f 01       	movw	r12, r30
    3c52:	b7 01       	movw	r22, r14
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3c5a:	51 10       	cpse	r5, r1
    3c5c:	5a 94       	dec	r5
    3c5e:	01 50       	subi	r16, 0x01	; 1
    3c60:	11 09       	sbc	r17, r1
    3c62:	01 15       	cp	r16, r1
    3c64:	11 05       	cpc	r17, r1
    3c66:	79 f7       	brne	.-34     	; 0x3c46 <vfprintf+0x478>
    3c68:	f7 c0       	rjmp	.+494    	; 0x3e58 <vfprintf+0x68a>
    3c6a:	84 36       	cpi	r24, 0x64	; 100
    3c6c:	11 f0       	breq	.+4      	; 0x3c72 <vfprintf+0x4a4>
    3c6e:	89 36       	cpi	r24, 0x69	; 105
    3c70:	61 f5       	brne	.+88     	; 0x3cca <vfprintf+0x4fc>
    3c72:	56 01       	movw	r10, r12
    3c74:	97 fe       	sbrs	r9, 7
    3c76:	09 c0       	rjmp	.+18     	; 0x3c8a <vfprintf+0x4bc>
    3c78:	24 e0       	ldi	r18, 0x04	; 4
    3c7a:	a2 0e       	add	r10, r18
    3c7c:	b1 1c       	adc	r11, r1
    3c7e:	f6 01       	movw	r30, r12
    3c80:	60 81       	ld	r22, Z
    3c82:	71 81       	ldd	r23, Z+1	; 0x01
    3c84:	82 81       	ldd	r24, Z+2	; 0x02
    3c86:	93 81       	ldd	r25, Z+3	; 0x03
    3c88:	0a c0       	rjmp	.+20     	; 0x3c9e <vfprintf+0x4d0>
    3c8a:	f2 e0       	ldi	r31, 0x02	; 2
    3c8c:	af 0e       	add	r10, r31
    3c8e:	b1 1c       	adc	r11, r1
    3c90:	f6 01       	movw	r30, r12
    3c92:	60 81       	ld	r22, Z
    3c94:	71 81       	ldd	r23, Z+1	; 0x01
    3c96:	07 2e       	mov	r0, r23
    3c98:	00 0c       	add	r0, r0
    3c9a:	88 0b       	sbc	r24, r24
    3c9c:	99 0b       	sbc	r25, r25
    3c9e:	f9 2d       	mov	r31, r9
    3ca0:	ff 76       	andi	r31, 0x6F	; 111
    3ca2:	9f 2e       	mov	r9, r31
    3ca4:	97 ff       	sbrs	r25, 7
    3ca6:	09 c0       	rjmp	.+18     	; 0x3cba <vfprintf+0x4ec>
    3ca8:	90 95       	com	r25
    3caa:	80 95       	com	r24
    3cac:	70 95       	com	r23
    3cae:	61 95       	neg	r22
    3cb0:	7f 4f       	sbci	r23, 0xFF	; 255
    3cb2:	8f 4f       	sbci	r24, 0xFF	; 255
    3cb4:	9f 4f       	sbci	r25, 0xFF	; 255
    3cb6:	f0 68       	ori	r31, 0x80	; 128
    3cb8:	9f 2e       	mov	r9, r31
    3cba:	2a e0       	ldi	r18, 0x0A	; 10
    3cbc:	30 e0       	ldi	r19, 0x00	; 0
    3cbe:	a3 01       	movw	r20, r6
    3cc0:	0e 94 4d 21 	call	0x429a	; 0x429a <__ultoa_invert>
    3cc4:	c8 2e       	mov	r12, r24
    3cc6:	c6 18       	sub	r12, r6
    3cc8:	3f c0       	rjmp	.+126    	; 0x3d48 <vfprintf+0x57a>
    3cca:	09 2d       	mov	r16, r9
    3ccc:	85 37       	cpi	r24, 0x75	; 117
    3cce:	21 f4       	brne	.+8      	; 0x3cd8 <vfprintf+0x50a>
    3cd0:	0f 7e       	andi	r16, 0xEF	; 239
    3cd2:	2a e0       	ldi	r18, 0x0A	; 10
    3cd4:	30 e0       	ldi	r19, 0x00	; 0
    3cd6:	1d c0       	rjmp	.+58     	; 0x3d12 <vfprintf+0x544>
    3cd8:	09 7f       	andi	r16, 0xF9	; 249
    3cda:	8f 36       	cpi	r24, 0x6F	; 111
    3cdc:	91 f0       	breq	.+36     	; 0x3d02 <vfprintf+0x534>
    3cde:	18 f4       	brcc	.+6      	; 0x3ce6 <vfprintf+0x518>
    3ce0:	88 35       	cpi	r24, 0x58	; 88
    3ce2:	59 f0       	breq	.+22     	; 0x3cfa <vfprintf+0x52c>
    3ce4:	c3 c0       	rjmp	.+390    	; 0x3e6c <vfprintf+0x69e>
    3ce6:	80 37       	cpi	r24, 0x70	; 112
    3ce8:	19 f0       	breq	.+6      	; 0x3cf0 <vfprintf+0x522>
    3cea:	88 37       	cpi	r24, 0x78	; 120
    3cec:	11 f0       	breq	.+4      	; 0x3cf2 <vfprintf+0x524>
    3cee:	be c0       	rjmp	.+380    	; 0x3e6c <vfprintf+0x69e>
    3cf0:	00 61       	ori	r16, 0x10	; 16
    3cf2:	04 ff       	sbrs	r16, 4
    3cf4:	09 c0       	rjmp	.+18     	; 0x3d08 <vfprintf+0x53a>
    3cf6:	04 60       	ori	r16, 0x04	; 4
    3cf8:	07 c0       	rjmp	.+14     	; 0x3d08 <vfprintf+0x53a>
    3cfa:	94 fe       	sbrs	r9, 4
    3cfc:	08 c0       	rjmp	.+16     	; 0x3d0e <vfprintf+0x540>
    3cfe:	06 60       	ori	r16, 0x06	; 6
    3d00:	06 c0       	rjmp	.+12     	; 0x3d0e <vfprintf+0x540>
    3d02:	28 e0       	ldi	r18, 0x08	; 8
    3d04:	30 e0       	ldi	r19, 0x00	; 0
    3d06:	05 c0       	rjmp	.+10     	; 0x3d12 <vfprintf+0x544>
    3d08:	20 e1       	ldi	r18, 0x10	; 16
    3d0a:	30 e0       	ldi	r19, 0x00	; 0
    3d0c:	02 c0       	rjmp	.+4      	; 0x3d12 <vfprintf+0x544>
    3d0e:	20 e1       	ldi	r18, 0x10	; 16
    3d10:	32 e0       	ldi	r19, 0x02	; 2
    3d12:	56 01       	movw	r10, r12
    3d14:	07 ff       	sbrs	r16, 7
    3d16:	09 c0       	rjmp	.+18     	; 0x3d2a <vfprintf+0x55c>
    3d18:	84 e0       	ldi	r24, 0x04	; 4
    3d1a:	a8 0e       	add	r10, r24
    3d1c:	b1 1c       	adc	r11, r1
    3d1e:	f6 01       	movw	r30, r12
    3d20:	60 81       	ld	r22, Z
    3d22:	71 81       	ldd	r23, Z+1	; 0x01
    3d24:	82 81       	ldd	r24, Z+2	; 0x02
    3d26:	93 81       	ldd	r25, Z+3	; 0x03
    3d28:	08 c0       	rjmp	.+16     	; 0x3d3a <vfprintf+0x56c>
    3d2a:	f2 e0       	ldi	r31, 0x02	; 2
    3d2c:	af 0e       	add	r10, r31
    3d2e:	b1 1c       	adc	r11, r1
    3d30:	f6 01       	movw	r30, r12
    3d32:	60 81       	ld	r22, Z
    3d34:	71 81       	ldd	r23, Z+1	; 0x01
    3d36:	80 e0       	ldi	r24, 0x00	; 0
    3d38:	90 e0       	ldi	r25, 0x00	; 0
    3d3a:	a3 01       	movw	r20, r6
    3d3c:	0e 94 4d 21 	call	0x429a	; 0x429a <__ultoa_invert>
    3d40:	c8 2e       	mov	r12, r24
    3d42:	c6 18       	sub	r12, r6
    3d44:	0f 77       	andi	r16, 0x7F	; 127
    3d46:	90 2e       	mov	r9, r16
    3d48:	96 fe       	sbrs	r9, 6
    3d4a:	0b c0       	rjmp	.+22     	; 0x3d62 <vfprintf+0x594>
    3d4c:	09 2d       	mov	r16, r9
    3d4e:	0e 7f       	andi	r16, 0xFE	; 254
    3d50:	c1 16       	cp	r12, r17
    3d52:	50 f4       	brcc	.+20     	; 0x3d68 <vfprintf+0x59a>
    3d54:	94 fe       	sbrs	r9, 4
    3d56:	0a c0       	rjmp	.+20     	; 0x3d6c <vfprintf+0x59e>
    3d58:	92 fc       	sbrc	r9, 2
    3d5a:	08 c0       	rjmp	.+16     	; 0x3d6c <vfprintf+0x59e>
    3d5c:	09 2d       	mov	r16, r9
    3d5e:	0e 7e       	andi	r16, 0xEE	; 238
    3d60:	05 c0       	rjmp	.+10     	; 0x3d6c <vfprintf+0x59e>
    3d62:	dc 2c       	mov	r13, r12
    3d64:	09 2d       	mov	r16, r9
    3d66:	03 c0       	rjmp	.+6      	; 0x3d6e <vfprintf+0x5a0>
    3d68:	dc 2c       	mov	r13, r12
    3d6a:	01 c0       	rjmp	.+2      	; 0x3d6e <vfprintf+0x5a0>
    3d6c:	d1 2e       	mov	r13, r17
    3d6e:	04 ff       	sbrs	r16, 4
    3d70:	0d c0       	rjmp	.+26     	; 0x3d8c <vfprintf+0x5be>
    3d72:	fe 01       	movw	r30, r28
    3d74:	ec 0d       	add	r30, r12
    3d76:	f1 1d       	adc	r31, r1
    3d78:	80 81       	ld	r24, Z
    3d7a:	80 33       	cpi	r24, 0x30	; 48
    3d7c:	11 f4       	brne	.+4      	; 0x3d82 <vfprintf+0x5b4>
    3d7e:	09 7e       	andi	r16, 0xE9	; 233
    3d80:	09 c0       	rjmp	.+18     	; 0x3d94 <vfprintf+0x5c6>
    3d82:	02 ff       	sbrs	r16, 2
    3d84:	06 c0       	rjmp	.+12     	; 0x3d92 <vfprintf+0x5c4>
    3d86:	d3 94       	inc	r13
    3d88:	d3 94       	inc	r13
    3d8a:	04 c0       	rjmp	.+8      	; 0x3d94 <vfprintf+0x5c6>
    3d8c:	80 2f       	mov	r24, r16
    3d8e:	86 78       	andi	r24, 0x86	; 134
    3d90:	09 f0       	breq	.+2      	; 0x3d94 <vfprintf+0x5c6>
    3d92:	d3 94       	inc	r13
    3d94:	03 fd       	sbrc	r16, 3
    3d96:	11 c0       	rjmp	.+34     	; 0x3dba <vfprintf+0x5ec>
    3d98:	00 ff       	sbrs	r16, 0
    3d9a:	06 c0       	rjmp	.+12     	; 0x3da8 <vfprintf+0x5da>
    3d9c:	1c 2d       	mov	r17, r12
    3d9e:	d5 14       	cp	r13, r5
    3da0:	80 f4       	brcc	.+32     	; 0x3dc2 <vfprintf+0x5f4>
    3da2:	15 0d       	add	r17, r5
    3da4:	1d 19       	sub	r17, r13
    3da6:	0d c0       	rjmp	.+26     	; 0x3dc2 <vfprintf+0x5f4>
    3da8:	d5 14       	cp	r13, r5
    3daa:	58 f4       	brcc	.+22     	; 0x3dc2 <vfprintf+0x5f4>
    3dac:	b7 01       	movw	r22, r14
    3dae:	80 e2       	ldi	r24, 0x20	; 32
    3db0:	90 e0       	ldi	r25, 0x00	; 0
    3db2:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3db6:	d3 94       	inc	r13
    3db8:	f7 cf       	rjmp	.-18     	; 0x3da8 <vfprintf+0x5da>
    3dba:	d5 14       	cp	r13, r5
    3dbc:	10 f4       	brcc	.+4      	; 0x3dc2 <vfprintf+0x5f4>
    3dbe:	5d 18       	sub	r5, r13
    3dc0:	01 c0       	rjmp	.+2      	; 0x3dc4 <vfprintf+0x5f6>
    3dc2:	51 2c       	mov	r5, r1
    3dc4:	04 ff       	sbrs	r16, 4
    3dc6:	10 c0       	rjmp	.+32     	; 0x3de8 <vfprintf+0x61a>
    3dc8:	b7 01       	movw	r22, r14
    3dca:	80 e3       	ldi	r24, 0x30	; 48
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3dd2:	02 ff       	sbrs	r16, 2
    3dd4:	17 c0       	rjmp	.+46     	; 0x3e04 <vfprintf+0x636>
    3dd6:	01 fd       	sbrc	r16, 1
    3dd8:	03 c0       	rjmp	.+6      	; 0x3de0 <vfprintf+0x612>
    3dda:	88 e7       	ldi	r24, 0x78	; 120
    3ddc:	90 e0       	ldi	r25, 0x00	; 0
    3dde:	02 c0       	rjmp	.+4      	; 0x3de4 <vfprintf+0x616>
    3de0:	88 e5       	ldi	r24, 0x58	; 88
    3de2:	90 e0       	ldi	r25, 0x00	; 0
    3de4:	b7 01       	movw	r22, r14
    3de6:	0c c0       	rjmp	.+24     	; 0x3e00 <vfprintf+0x632>
    3de8:	80 2f       	mov	r24, r16
    3dea:	86 78       	andi	r24, 0x86	; 134
    3dec:	59 f0       	breq	.+22     	; 0x3e04 <vfprintf+0x636>
    3dee:	01 ff       	sbrs	r16, 1
    3df0:	02 c0       	rjmp	.+4      	; 0x3df6 <vfprintf+0x628>
    3df2:	8b e2       	ldi	r24, 0x2B	; 43
    3df4:	01 c0       	rjmp	.+2      	; 0x3df8 <vfprintf+0x62a>
    3df6:	80 e2       	ldi	r24, 0x20	; 32
    3df8:	07 fd       	sbrc	r16, 7
    3dfa:	8d e2       	ldi	r24, 0x2D	; 45
    3dfc:	b7 01       	movw	r22, r14
    3dfe:	90 e0       	ldi	r25, 0x00	; 0
    3e00:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e04:	c1 16       	cp	r12, r17
    3e06:	38 f4       	brcc	.+14     	; 0x3e16 <vfprintf+0x648>
    3e08:	b7 01       	movw	r22, r14
    3e0a:	80 e3       	ldi	r24, 0x30	; 48
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e12:	11 50       	subi	r17, 0x01	; 1
    3e14:	f7 cf       	rjmp	.-18     	; 0x3e04 <vfprintf+0x636>
    3e16:	ca 94       	dec	r12
    3e18:	f3 01       	movw	r30, r6
    3e1a:	ec 0d       	add	r30, r12
    3e1c:	f1 1d       	adc	r31, r1
    3e1e:	80 81       	ld	r24, Z
    3e20:	b7 01       	movw	r22, r14
    3e22:	90 e0       	ldi	r25, 0x00	; 0
    3e24:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e28:	c1 10       	cpse	r12, r1
    3e2a:	f5 cf       	rjmp	.-22     	; 0x3e16 <vfprintf+0x648>
    3e2c:	15 c0       	rjmp	.+42     	; 0x3e58 <vfprintf+0x68a>
    3e2e:	f4 e0       	ldi	r31, 0x04	; 4
    3e30:	f5 15       	cp	r31, r5
    3e32:	60 f5       	brcc	.+88     	; 0x3e8c <vfprintf+0x6be>
    3e34:	84 e0       	ldi	r24, 0x04	; 4
    3e36:	58 1a       	sub	r5, r24
    3e38:	93 fe       	sbrs	r9, 3
    3e3a:	1f c0       	rjmp	.+62     	; 0x3e7a <vfprintf+0x6ac>
    3e3c:	01 11       	cpse	r16, r1
    3e3e:	27 c0       	rjmp	.+78     	; 0x3e8e <vfprintf+0x6c0>
    3e40:	2c 85       	ldd	r18, Y+12	; 0x0c
    3e42:	23 ff       	sbrs	r18, 3
    3e44:	2a c0       	rjmp	.+84     	; 0x3e9a <vfprintf+0x6cc>
    3e46:	04 ed       	ldi	r16, 0xD4	; 212
    3e48:	12 e0       	ldi	r17, 0x02	; 2
    3e4a:	39 2d       	mov	r19, r9
    3e4c:	30 71       	andi	r19, 0x10	; 16
    3e4e:	93 2e       	mov	r9, r19
    3e50:	f8 01       	movw	r30, r16
    3e52:	84 91       	lpm	r24, Z
    3e54:	81 11       	cpse	r24, r1
    3e56:	24 c0       	rjmp	.+72     	; 0x3ea0 <vfprintf+0x6d2>
    3e58:	55 20       	and	r5, r5
    3e5a:	09 f4       	brne	.+2      	; 0x3e5e <vfprintf+0x690>
    3e5c:	e4 cc       	rjmp	.-1592   	; 0x3826 <vfprintf+0x58>
    3e5e:	b7 01       	movw	r22, r14
    3e60:	80 e2       	ldi	r24, 0x20	; 32
    3e62:	90 e0       	ldi	r25, 0x00	; 0
    3e64:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e68:	5a 94       	dec	r5
    3e6a:	f6 cf       	rjmp	.-20     	; 0x3e58 <vfprintf+0x68a>
    3e6c:	f7 01       	movw	r30, r14
    3e6e:	86 81       	ldd	r24, Z+6	; 0x06
    3e70:	97 81       	ldd	r25, Z+7	; 0x07
    3e72:	26 c0       	rjmp	.+76     	; 0x3ec0 <vfprintf+0x6f2>
    3e74:	8f ef       	ldi	r24, 0xFF	; 255
    3e76:	9f ef       	ldi	r25, 0xFF	; 255
    3e78:	23 c0       	rjmp	.+70     	; 0x3ec0 <vfprintf+0x6f2>
    3e7a:	b7 01       	movw	r22, r14
    3e7c:	80 e2       	ldi	r24, 0x20	; 32
    3e7e:	90 e0       	ldi	r25, 0x00	; 0
    3e80:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e84:	5a 94       	dec	r5
    3e86:	51 10       	cpse	r5, r1
    3e88:	f8 cf       	rjmp	.-16     	; 0x3e7a <vfprintf+0x6ac>
    3e8a:	d8 cf       	rjmp	.-80     	; 0x3e3c <vfprintf+0x66e>
    3e8c:	51 2c       	mov	r5, r1
    3e8e:	b7 01       	movw	r22, r14
    3e90:	80 2f       	mov	r24, r16
    3e92:	90 e0       	ldi	r25, 0x00	; 0
    3e94:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3e98:	d3 cf       	rjmp	.-90     	; 0x3e40 <vfprintf+0x672>
    3e9a:	08 ed       	ldi	r16, 0xD8	; 216
    3e9c:	12 e0       	ldi	r17, 0x02	; 2
    3e9e:	d5 cf       	rjmp	.-86     	; 0x3e4a <vfprintf+0x67c>
    3ea0:	91 10       	cpse	r9, r1
    3ea2:	80 52       	subi	r24, 0x20	; 32
    3ea4:	b7 01       	movw	r22, r14
    3ea6:	90 e0       	ldi	r25, 0x00	; 0
    3ea8:	0e 94 f5 20 	call	0x41ea	; 0x41ea <fputc>
    3eac:	0f 5f       	subi	r16, 0xFF	; 255
    3eae:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb0:	cf cf       	rjmp	.-98     	; 0x3e50 <vfprintf+0x682>
    3eb2:	23 e0       	ldi	r18, 0x03	; 3
    3eb4:	25 15       	cp	r18, r5
    3eb6:	10 f4       	brcc	.+4      	; 0x3ebc <vfprintf+0x6ee>
    3eb8:	83 e0       	ldi	r24, 0x03	; 3
    3eba:	bd cf       	rjmp	.-134    	; 0x3e36 <vfprintf+0x668>
    3ebc:	51 2c       	mov	r5, r1
    3ebe:	c0 cf       	rjmp	.-128    	; 0x3e40 <vfprintf+0x672>
    3ec0:	60 96       	adiw	r28, 0x10	; 16
    3ec2:	e2 e1       	ldi	r30, 0x12	; 18
    3ec4:	0c 94 cb 1f 	jmp	0x3f96	; 0x3f96 <__epilogue_restores__>

00003ec8 <__divmodhi4>:
    3ec8:	97 fb       	bst	r25, 7
    3eca:	07 2e       	mov	r0, r23
    3ecc:	16 f4       	brtc	.+4      	; 0x3ed2 <__divmodhi4+0xa>
    3ece:	00 94       	com	r0
    3ed0:	07 d0       	rcall	.+14     	; 0x3ee0 <__divmodhi4_neg1>
    3ed2:	77 fd       	sbrc	r23, 7
    3ed4:	09 d0       	rcall	.+18     	; 0x3ee8 <__divmodhi4_neg2>
    3ed6:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <__udivmodhi4>
    3eda:	07 fc       	sbrc	r0, 7
    3edc:	05 d0       	rcall	.+10     	; 0x3ee8 <__divmodhi4_neg2>
    3ede:	3e f4       	brtc	.+14     	; 0x3eee <__divmodhi4_exit>

00003ee0 <__divmodhi4_neg1>:
    3ee0:	90 95       	com	r25
    3ee2:	81 95       	neg	r24
    3ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    3ee6:	08 95       	ret

00003ee8 <__divmodhi4_neg2>:
    3ee8:	70 95       	com	r23
    3eea:	61 95       	neg	r22
    3eec:	7f 4f       	sbci	r23, 0xFF	; 255

00003eee <__divmodhi4_exit>:
    3eee:	08 95       	ret

00003ef0 <__udivmodsi4>:
    3ef0:	a1 e2       	ldi	r26, 0x21	; 33
    3ef2:	1a 2e       	mov	r1, r26
    3ef4:	aa 1b       	sub	r26, r26
    3ef6:	bb 1b       	sub	r27, r27
    3ef8:	fd 01       	movw	r30, r26
    3efa:	0d c0       	rjmp	.+26     	; 0x3f16 <__udivmodsi4_ep>

00003efc <__udivmodsi4_loop>:
    3efc:	aa 1f       	adc	r26, r26
    3efe:	bb 1f       	adc	r27, r27
    3f00:	ee 1f       	adc	r30, r30
    3f02:	ff 1f       	adc	r31, r31
    3f04:	a2 17       	cp	r26, r18
    3f06:	b3 07       	cpc	r27, r19
    3f08:	e4 07       	cpc	r30, r20
    3f0a:	f5 07       	cpc	r31, r21
    3f0c:	20 f0       	brcs	.+8      	; 0x3f16 <__udivmodsi4_ep>
    3f0e:	a2 1b       	sub	r26, r18
    3f10:	b3 0b       	sbc	r27, r19
    3f12:	e4 0b       	sbc	r30, r20
    3f14:	f5 0b       	sbc	r31, r21

00003f16 <__udivmodsi4_ep>:
    3f16:	66 1f       	adc	r22, r22
    3f18:	77 1f       	adc	r23, r23
    3f1a:	88 1f       	adc	r24, r24
    3f1c:	99 1f       	adc	r25, r25
    3f1e:	1a 94       	dec	r1
    3f20:	69 f7       	brne	.-38     	; 0x3efc <__udivmodsi4_loop>
    3f22:	60 95       	com	r22
    3f24:	70 95       	com	r23
    3f26:	80 95       	com	r24
    3f28:	90 95       	com	r25
    3f2a:	9b 01       	movw	r18, r22
    3f2c:	ac 01       	movw	r20, r24
    3f2e:	bd 01       	movw	r22, r26
    3f30:	cf 01       	movw	r24, r30
    3f32:	08 95       	ret

00003f34 <__tablejump2__>:
    3f34:	ee 0f       	add	r30, r30
    3f36:	ff 1f       	adc	r31, r31
    3f38:	05 90       	lpm	r0, Z+
    3f3a:	f4 91       	lpm	r31, Z
    3f3c:	e0 2d       	mov	r30, r0
    3f3e:	09 94       	ijmp

00003f40 <__umulhisi3>:
    3f40:	a2 9f       	mul	r26, r18
    3f42:	b0 01       	movw	r22, r0
    3f44:	b3 9f       	mul	r27, r19
    3f46:	c0 01       	movw	r24, r0
    3f48:	a3 9f       	mul	r26, r19
    3f4a:	70 0d       	add	r23, r0
    3f4c:	81 1d       	adc	r24, r1
    3f4e:	11 24       	eor	r1, r1
    3f50:	91 1d       	adc	r25, r1
    3f52:	b2 9f       	mul	r27, r18
    3f54:	70 0d       	add	r23, r0
    3f56:	81 1d       	adc	r24, r1
    3f58:	11 24       	eor	r1, r1
    3f5a:	91 1d       	adc	r25, r1
    3f5c:	08 95       	ret

00003f5e <__prologue_saves__>:
    3f5e:	2f 92       	push	r2
    3f60:	3f 92       	push	r3
    3f62:	4f 92       	push	r4
    3f64:	5f 92       	push	r5
    3f66:	6f 92       	push	r6
    3f68:	7f 92       	push	r7
    3f6a:	8f 92       	push	r8
    3f6c:	9f 92       	push	r9
    3f6e:	af 92       	push	r10
    3f70:	bf 92       	push	r11
    3f72:	cf 92       	push	r12
    3f74:	df 92       	push	r13
    3f76:	ef 92       	push	r14
    3f78:	ff 92       	push	r15
    3f7a:	0f 93       	push	r16
    3f7c:	1f 93       	push	r17
    3f7e:	cf 93       	push	r28
    3f80:	df 93       	push	r29
    3f82:	cd b7       	in	r28, 0x3d	; 61
    3f84:	de b7       	in	r29, 0x3e	; 62
    3f86:	ca 1b       	sub	r28, r26
    3f88:	db 0b       	sbc	r29, r27
    3f8a:	0f b6       	in	r0, 0x3f	; 63
    3f8c:	f8 94       	cli
    3f8e:	de bf       	out	0x3e, r29	; 62
    3f90:	0f be       	out	0x3f, r0	; 63
    3f92:	cd bf       	out	0x3d, r28	; 61
    3f94:	09 94       	ijmp

00003f96 <__epilogue_restores__>:
    3f96:	2a 88       	ldd	r2, Y+18	; 0x12
    3f98:	39 88       	ldd	r3, Y+17	; 0x11
    3f9a:	48 88       	ldd	r4, Y+16	; 0x10
    3f9c:	5f 84       	ldd	r5, Y+15	; 0x0f
    3f9e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3fa0:	7d 84       	ldd	r7, Y+13	; 0x0d
    3fa2:	8c 84       	ldd	r8, Y+12	; 0x0c
    3fa4:	9b 84       	ldd	r9, Y+11	; 0x0b
    3fa6:	aa 84       	ldd	r10, Y+10	; 0x0a
    3fa8:	b9 84       	ldd	r11, Y+9	; 0x09
    3faa:	c8 84       	ldd	r12, Y+8	; 0x08
    3fac:	df 80       	ldd	r13, Y+7	; 0x07
    3fae:	ee 80       	ldd	r14, Y+6	; 0x06
    3fb0:	fd 80       	ldd	r15, Y+5	; 0x05
    3fb2:	0c 81       	ldd	r16, Y+4	; 0x04
    3fb4:	1b 81       	ldd	r17, Y+3	; 0x03
    3fb6:	aa 81       	ldd	r26, Y+2	; 0x02
    3fb8:	b9 81       	ldd	r27, Y+1	; 0x01
    3fba:	ce 0f       	add	r28, r30
    3fbc:	d1 1d       	adc	r29, r1
    3fbe:	0f b6       	in	r0, 0x3f	; 63
    3fc0:	f8 94       	cli
    3fc2:	de bf       	out	0x3e, r29	; 62
    3fc4:	0f be       	out	0x3f, r0	; 63
    3fc6:	cd bf       	out	0x3d, r28	; 61
    3fc8:	ed 01       	movw	r28, r26
    3fca:	08 95       	ret

00003fcc <__udivmodhi4>:
    3fcc:	aa 1b       	sub	r26, r26
    3fce:	bb 1b       	sub	r27, r27
    3fd0:	51 e1       	ldi	r21, 0x11	; 17
    3fd2:	07 c0       	rjmp	.+14     	; 0x3fe2 <__udivmodhi4_ep>

00003fd4 <__udivmodhi4_loop>:
    3fd4:	aa 1f       	adc	r26, r26
    3fd6:	bb 1f       	adc	r27, r27
    3fd8:	a6 17       	cp	r26, r22
    3fda:	b7 07       	cpc	r27, r23
    3fdc:	10 f0       	brcs	.+4      	; 0x3fe2 <__udivmodhi4_ep>
    3fde:	a6 1b       	sub	r26, r22
    3fe0:	b7 0b       	sbc	r27, r23

00003fe2 <__udivmodhi4_ep>:
    3fe2:	88 1f       	adc	r24, r24
    3fe4:	99 1f       	adc	r25, r25
    3fe6:	5a 95       	dec	r21
    3fe8:	a9 f7       	brne	.-22     	; 0x3fd4 <__udivmodhi4_loop>
    3fea:	80 95       	com	r24
    3fec:	90 95       	com	r25
    3fee:	bc 01       	movw	r22, r24
    3ff0:	cd 01       	movw	r24, r26
    3ff2:	08 95       	ret

00003ff4 <__ftoa_engine>:
    3ff4:	28 30       	cpi	r18, 0x08	; 8
    3ff6:	08 f0       	brcs	.+2      	; 0x3ffa <__ftoa_engine+0x6>
    3ff8:	27 e0       	ldi	r18, 0x07	; 7
    3ffa:	33 27       	eor	r19, r19
    3ffc:	da 01       	movw	r26, r20
    3ffe:	99 0f       	add	r25, r25
    4000:	31 1d       	adc	r19, r1
    4002:	87 fd       	sbrc	r24, 7
    4004:	91 60       	ori	r25, 0x01	; 1
    4006:	00 96       	adiw	r24, 0x00	; 0
    4008:	61 05       	cpc	r22, r1
    400a:	71 05       	cpc	r23, r1
    400c:	39 f4       	brne	.+14     	; 0x401c <__ftoa_engine+0x28>
    400e:	32 60       	ori	r19, 0x02	; 2
    4010:	2e 5f       	subi	r18, 0xFE	; 254
    4012:	3d 93       	st	X+, r19
    4014:	30 e3       	ldi	r19, 0x30	; 48
    4016:	2a 95       	dec	r18
    4018:	e1 f7       	brne	.-8      	; 0x4012 <__ftoa_engine+0x1e>
    401a:	08 95       	ret
    401c:	9f 3f       	cpi	r25, 0xFF	; 255
    401e:	30 f0       	brcs	.+12     	; 0x402c <__ftoa_engine+0x38>
    4020:	80 38       	cpi	r24, 0x80	; 128
    4022:	71 05       	cpc	r23, r1
    4024:	61 05       	cpc	r22, r1
    4026:	09 f0       	breq	.+2      	; 0x402a <__ftoa_engine+0x36>
    4028:	3c 5f       	subi	r19, 0xFC	; 252
    402a:	3c 5f       	subi	r19, 0xFC	; 252
    402c:	3d 93       	st	X+, r19
    402e:	91 30       	cpi	r25, 0x01	; 1
    4030:	08 f0       	brcs	.+2      	; 0x4034 <__ftoa_engine+0x40>
    4032:	80 68       	ori	r24, 0x80	; 128
    4034:	91 1d       	adc	r25, r1
    4036:	df 93       	push	r29
    4038:	cf 93       	push	r28
    403a:	1f 93       	push	r17
    403c:	0f 93       	push	r16
    403e:	ff 92       	push	r15
    4040:	ef 92       	push	r14
    4042:	19 2f       	mov	r17, r25
    4044:	98 7f       	andi	r25, 0xF8	; 248
    4046:	96 95       	lsr	r25
    4048:	e9 2f       	mov	r30, r25
    404a:	96 95       	lsr	r25
    404c:	96 95       	lsr	r25
    404e:	e9 0f       	add	r30, r25
    4050:	ff 27       	eor	r31, r31
    4052:	ea 5c       	subi	r30, 0xCA	; 202
    4054:	fc 4f       	sbci	r31, 0xFC	; 252
    4056:	99 27       	eor	r25, r25
    4058:	33 27       	eor	r19, r19
    405a:	ee 24       	eor	r14, r14
    405c:	ff 24       	eor	r15, r15
    405e:	a7 01       	movw	r20, r14
    4060:	e7 01       	movw	r28, r14
    4062:	05 90       	lpm	r0, Z+
    4064:	08 94       	sec
    4066:	07 94       	ror	r0
    4068:	28 f4       	brcc	.+10     	; 0x4074 <__ftoa_engine+0x80>
    406a:	36 0f       	add	r19, r22
    406c:	e7 1e       	adc	r14, r23
    406e:	f8 1e       	adc	r15, r24
    4070:	49 1f       	adc	r20, r25
    4072:	51 1d       	adc	r21, r1
    4074:	66 0f       	add	r22, r22
    4076:	77 1f       	adc	r23, r23
    4078:	88 1f       	adc	r24, r24
    407a:	99 1f       	adc	r25, r25
    407c:	06 94       	lsr	r0
    407e:	a1 f7       	brne	.-24     	; 0x4068 <__ftoa_engine+0x74>
    4080:	05 90       	lpm	r0, Z+
    4082:	07 94       	ror	r0
    4084:	28 f4       	brcc	.+10     	; 0x4090 <__ftoa_engine+0x9c>
    4086:	e7 0e       	add	r14, r23
    4088:	f8 1e       	adc	r15, r24
    408a:	49 1f       	adc	r20, r25
    408c:	56 1f       	adc	r21, r22
    408e:	c1 1d       	adc	r28, r1
    4090:	77 0f       	add	r23, r23
    4092:	88 1f       	adc	r24, r24
    4094:	99 1f       	adc	r25, r25
    4096:	66 1f       	adc	r22, r22
    4098:	06 94       	lsr	r0
    409a:	a1 f7       	brne	.-24     	; 0x4084 <__ftoa_engine+0x90>
    409c:	05 90       	lpm	r0, Z+
    409e:	07 94       	ror	r0
    40a0:	28 f4       	brcc	.+10     	; 0x40ac <__ftoa_engine+0xb8>
    40a2:	f8 0e       	add	r15, r24
    40a4:	49 1f       	adc	r20, r25
    40a6:	56 1f       	adc	r21, r22
    40a8:	c7 1f       	adc	r28, r23
    40aa:	d1 1d       	adc	r29, r1
    40ac:	88 0f       	add	r24, r24
    40ae:	99 1f       	adc	r25, r25
    40b0:	66 1f       	adc	r22, r22
    40b2:	77 1f       	adc	r23, r23
    40b4:	06 94       	lsr	r0
    40b6:	a1 f7       	brne	.-24     	; 0x40a0 <__ftoa_engine+0xac>
    40b8:	05 90       	lpm	r0, Z+
    40ba:	07 94       	ror	r0
    40bc:	20 f4       	brcc	.+8      	; 0x40c6 <__ftoa_engine+0xd2>
    40be:	49 0f       	add	r20, r25
    40c0:	56 1f       	adc	r21, r22
    40c2:	c7 1f       	adc	r28, r23
    40c4:	d8 1f       	adc	r29, r24
    40c6:	99 0f       	add	r25, r25
    40c8:	66 1f       	adc	r22, r22
    40ca:	77 1f       	adc	r23, r23
    40cc:	88 1f       	adc	r24, r24
    40ce:	06 94       	lsr	r0
    40d0:	a9 f7       	brne	.-22     	; 0x40bc <__ftoa_engine+0xc8>
    40d2:	84 91       	lpm	r24, Z
    40d4:	10 95       	com	r17
    40d6:	17 70       	andi	r17, 0x07	; 7
    40d8:	41 f0       	breq	.+16     	; 0x40ea <__ftoa_engine+0xf6>
    40da:	d6 95       	lsr	r29
    40dc:	c7 95       	ror	r28
    40de:	57 95       	ror	r21
    40e0:	47 95       	ror	r20
    40e2:	f7 94       	ror	r15
    40e4:	e7 94       	ror	r14
    40e6:	1a 95       	dec	r17
    40e8:	c1 f7       	brne	.-16     	; 0x40da <__ftoa_engine+0xe6>
    40ea:	ec ed       	ldi	r30, 0xDC	; 220
    40ec:	f2 e0       	ldi	r31, 0x02	; 2
    40ee:	68 94       	set
    40f0:	15 90       	lpm	r1, Z+
    40f2:	15 91       	lpm	r17, Z+
    40f4:	35 91       	lpm	r19, Z+
    40f6:	65 91       	lpm	r22, Z+
    40f8:	95 91       	lpm	r25, Z+
    40fa:	05 90       	lpm	r0, Z+
    40fc:	7f e2       	ldi	r23, 0x2F	; 47
    40fe:	73 95       	inc	r23
    4100:	e1 18       	sub	r14, r1
    4102:	f1 0a       	sbc	r15, r17
    4104:	43 0b       	sbc	r20, r19
    4106:	56 0b       	sbc	r21, r22
    4108:	c9 0b       	sbc	r28, r25
    410a:	d0 09       	sbc	r29, r0
    410c:	c0 f7       	brcc	.-16     	; 0x40fe <__ftoa_engine+0x10a>
    410e:	e1 0c       	add	r14, r1
    4110:	f1 1e       	adc	r15, r17
    4112:	43 1f       	adc	r20, r19
    4114:	56 1f       	adc	r21, r22
    4116:	c9 1f       	adc	r28, r25
    4118:	d0 1d       	adc	r29, r0
    411a:	7e f4       	brtc	.+30     	; 0x413a <__ftoa_engine+0x146>
    411c:	70 33       	cpi	r23, 0x30	; 48
    411e:	11 f4       	brne	.+4      	; 0x4124 <__ftoa_engine+0x130>
    4120:	8a 95       	dec	r24
    4122:	e6 cf       	rjmp	.-52     	; 0x40f0 <__ftoa_engine+0xfc>
    4124:	e8 94       	clt
    4126:	01 50       	subi	r16, 0x01	; 1
    4128:	30 f0       	brcs	.+12     	; 0x4136 <__ftoa_engine+0x142>
    412a:	08 0f       	add	r16, r24
    412c:	0a f4       	brpl	.+2      	; 0x4130 <__ftoa_engine+0x13c>
    412e:	00 27       	eor	r16, r16
    4130:	02 17       	cp	r16, r18
    4132:	08 f4       	brcc	.+2      	; 0x4136 <__ftoa_engine+0x142>
    4134:	20 2f       	mov	r18, r16
    4136:	23 95       	inc	r18
    4138:	02 2f       	mov	r16, r18
    413a:	7a 33       	cpi	r23, 0x3A	; 58
    413c:	28 f0       	brcs	.+10     	; 0x4148 <__ftoa_engine+0x154>
    413e:	79 e3       	ldi	r23, 0x39	; 57
    4140:	7d 93       	st	X+, r23
    4142:	2a 95       	dec	r18
    4144:	e9 f7       	brne	.-6      	; 0x4140 <__ftoa_engine+0x14c>
    4146:	10 c0       	rjmp	.+32     	; 0x4168 <__ftoa_engine+0x174>
    4148:	7d 93       	st	X+, r23
    414a:	2a 95       	dec	r18
    414c:	89 f6       	brne	.-94     	; 0x40f0 <__ftoa_engine+0xfc>
    414e:	06 94       	lsr	r0
    4150:	97 95       	ror	r25
    4152:	67 95       	ror	r22
    4154:	37 95       	ror	r19
    4156:	17 95       	ror	r17
    4158:	17 94       	ror	r1
    415a:	e1 18       	sub	r14, r1
    415c:	f1 0a       	sbc	r15, r17
    415e:	43 0b       	sbc	r20, r19
    4160:	56 0b       	sbc	r21, r22
    4162:	c9 0b       	sbc	r28, r25
    4164:	d0 09       	sbc	r29, r0
    4166:	98 f0       	brcs	.+38     	; 0x418e <__ftoa_engine+0x19a>
    4168:	23 95       	inc	r18
    416a:	7e 91       	ld	r23, -X
    416c:	73 95       	inc	r23
    416e:	7a 33       	cpi	r23, 0x3A	; 58
    4170:	08 f0       	brcs	.+2      	; 0x4174 <__ftoa_engine+0x180>
    4172:	70 e3       	ldi	r23, 0x30	; 48
    4174:	7c 93       	st	X, r23
    4176:	20 13       	cpse	r18, r16
    4178:	b8 f7       	brcc	.-18     	; 0x4168 <__ftoa_engine+0x174>
    417a:	7e 91       	ld	r23, -X
    417c:	70 61       	ori	r23, 0x10	; 16
    417e:	7d 93       	st	X+, r23
    4180:	30 f0       	brcs	.+12     	; 0x418e <__ftoa_engine+0x19a>
    4182:	83 95       	inc	r24
    4184:	71 e3       	ldi	r23, 0x31	; 49
    4186:	7d 93       	st	X+, r23
    4188:	70 e3       	ldi	r23, 0x30	; 48
    418a:	2a 95       	dec	r18
    418c:	e1 f7       	brne	.-8      	; 0x4186 <__ftoa_engine+0x192>
    418e:	11 24       	eor	r1, r1
    4190:	ef 90       	pop	r14
    4192:	ff 90       	pop	r15
    4194:	0f 91       	pop	r16
    4196:	1f 91       	pop	r17
    4198:	cf 91       	pop	r28
    419a:	df 91       	pop	r29
    419c:	99 27       	eor	r25, r25
    419e:	87 fd       	sbrc	r24, 7
    41a0:	90 95       	com	r25
    41a2:	08 95       	ret

000041a4 <strnlen_P>:
    41a4:	fc 01       	movw	r30, r24
    41a6:	05 90       	lpm	r0, Z+
    41a8:	61 50       	subi	r22, 0x01	; 1
    41aa:	70 40       	sbci	r23, 0x00	; 0
    41ac:	01 10       	cpse	r0, r1
    41ae:	d8 f7       	brcc	.-10     	; 0x41a6 <strnlen_P+0x2>
    41b0:	80 95       	com	r24
    41b2:	90 95       	com	r25
    41b4:	8e 0f       	add	r24, r30
    41b6:	9f 1f       	adc	r25, r31
    41b8:	08 95       	ret

000041ba <memcmp>:
    41ba:	fb 01       	movw	r30, r22
    41bc:	dc 01       	movw	r26, r24
    41be:	04 c0       	rjmp	.+8      	; 0x41c8 <memcmp+0xe>
    41c0:	8d 91       	ld	r24, X+
    41c2:	01 90       	ld	r0, Z+
    41c4:	80 19       	sub	r24, r0
    41c6:	21 f4       	brne	.+8      	; 0x41d0 <memcmp+0x16>
    41c8:	41 50       	subi	r20, 0x01	; 1
    41ca:	50 40       	sbci	r21, 0x00	; 0
    41cc:	c8 f7       	brcc	.-14     	; 0x41c0 <memcmp+0x6>
    41ce:	88 1b       	sub	r24, r24
    41d0:	99 0b       	sbc	r25, r25
    41d2:	08 95       	ret

000041d4 <strnlen>:
    41d4:	fc 01       	movw	r30, r24
    41d6:	61 50       	subi	r22, 0x01	; 1
    41d8:	70 40       	sbci	r23, 0x00	; 0
    41da:	01 90       	ld	r0, Z+
    41dc:	01 10       	cpse	r0, r1
    41de:	d8 f7       	brcc	.-10     	; 0x41d6 <strnlen+0x2>
    41e0:	80 95       	com	r24
    41e2:	90 95       	com	r25
    41e4:	8e 0f       	add	r24, r30
    41e6:	9f 1f       	adc	r25, r31
    41e8:	08 95       	ret

000041ea <fputc>:
    41ea:	0f 93       	push	r16
    41ec:	1f 93       	push	r17
    41ee:	cf 93       	push	r28
    41f0:	df 93       	push	r29
    41f2:	fb 01       	movw	r30, r22
    41f4:	23 81       	ldd	r18, Z+3	; 0x03
    41f6:	21 fd       	sbrc	r18, 1
    41f8:	03 c0       	rjmp	.+6      	; 0x4200 <fputc+0x16>
    41fa:	8f ef       	ldi	r24, 0xFF	; 255
    41fc:	9f ef       	ldi	r25, 0xFF	; 255
    41fe:	2c c0       	rjmp	.+88     	; 0x4258 <fputc+0x6e>
    4200:	22 ff       	sbrs	r18, 2
    4202:	16 c0       	rjmp	.+44     	; 0x4230 <fputc+0x46>
    4204:	46 81       	ldd	r20, Z+6	; 0x06
    4206:	57 81       	ldd	r21, Z+7	; 0x07
    4208:	24 81       	ldd	r18, Z+4	; 0x04
    420a:	35 81       	ldd	r19, Z+5	; 0x05
    420c:	42 17       	cp	r20, r18
    420e:	53 07       	cpc	r21, r19
    4210:	44 f4       	brge	.+16     	; 0x4222 <fputc+0x38>
    4212:	a0 81       	ld	r26, Z
    4214:	b1 81       	ldd	r27, Z+1	; 0x01
    4216:	9d 01       	movw	r18, r26
    4218:	2f 5f       	subi	r18, 0xFF	; 255
    421a:	3f 4f       	sbci	r19, 0xFF	; 255
    421c:	31 83       	std	Z+1, r19	; 0x01
    421e:	20 83       	st	Z, r18
    4220:	8c 93       	st	X, r24
    4222:	26 81       	ldd	r18, Z+6	; 0x06
    4224:	37 81       	ldd	r19, Z+7	; 0x07
    4226:	2f 5f       	subi	r18, 0xFF	; 255
    4228:	3f 4f       	sbci	r19, 0xFF	; 255
    422a:	37 83       	std	Z+7, r19	; 0x07
    422c:	26 83       	std	Z+6, r18	; 0x06
    422e:	14 c0       	rjmp	.+40     	; 0x4258 <fputc+0x6e>
    4230:	8b 01       	movw	r16, r22
    4232:	ec 01       	movw	r28, r24
    4234:	fb 01       	movw	r30, r22
    4236:	00 84       	ldd	r0, Z+8	; 0x08
    4238:	f1 85       	ldd	r31, Z+9	; 0x09
    423a:	e0 2d       	mov	r30, r0
    423c:	09 95       	icall
    423e:	89 2b       	or	r24, r25
    4240:	e1 f6       	brne	.-72     	; 0x41fa <fputc+0x10>
    4242:	d8 01       	movw	r26, r16
    4244:	16 96       	adiw	r26, 0x06	; 6
    4246:	8d 91       	ld	r24, X+
    4248:	9c 91       	ld	r25, X
    424a:	17 97       	sbiw	r26, 0x07	; 7
    424c:	01 96       	adiw	r24, 0x01	; 1
    424e:	17 96       	adiw	r26, 0x07	; 7
    4250:	9c 93       	st	X, r25
    4252:	8e 93       	st	-X, r24
    4254:	16 97       	sbiw	r26, 0x06	; 6
    4256:	ce 01       	movw	r24, r28
    4258:	df 91       	pop	r29
    425a:	cf 91       	pop	r28
    425c:	1f 91       	pop	r17
    425e:	0f 91       	pop	r16
    4260:	08 95       	ret

00004262 <vsprintf>:
    4262:	ae e0       	ldi	r26, 0x0E	; 14
    4264:	b0 e0       	ldi	r27, 0x00	; 0
    4266:	e7 e3       	ldi	r30, 0x37	; 55
    4268:	f1 e2       	ldi	r31, 0x21	; 33
    426a:	0c 94 bd 1f 	jmp	0x3f7a	; 0x3f7a <__prologue_saves__+0x1c>
    426e:	8c 01       	movw	r16, r24
    4270:	86 e0       	ldi	r24, 0x06	; 6
    4272:	8c 83       	std	Y+4, r24	; 0x04
    4274:	1a 83       	std	Y+2, r17	; 0x02
    4276:	09 83       	std	Y+1, r16	; 0x01
    4278:	8f ef       	ldi	r24, 0xFF	; 255
    427a:	9f e7       	ldi	r25, 0x7F	; 127
    427c:	9e 83       	std	Y+6, r25	; 0x06
    427e:	8d 83       	std	Y+5, r24	; 0x05
    4280:	ce 01       	movw	r24, r28
    4282:	01 96       	adiw	r24, 0x01	; 1
    4284:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <vfprintf>
    4288:	ef 81       	ldd	r30, Y+7	; 0x07
    428a:	f8 85       	ldd	r31, Y+8	; 0x08
    428c:	e0 0f       	add	r30, r16
    428e:	f1 1f       	adc	r31, r17
    4290:	10 82       	st	Z, r1
    4292:	2e 96       	adiw	r28, 0x0e	; 14
    4294:	e4 e0       	ldi	r30, 0x04	; 4
    4296:	0c 94 d9 1f 	jmp	0x3fb2	; 0x3fb2 <__epilogue_restores__+0x1c>

0000429a <__ultoa_invert>:
    429a:	fa 01       	movw	r30, r20
    429c:	aa 27       	eor	r26, r26
    429e:	28 30       	cpi	r18, 0x08	; 8
    42a0:	51 f1       	breq	.+84     	; 0x42f6 <__ultoa_invert+0x5c>
    42a2:	20 31       	cpi	r18, 0x10	; 16
    42a4:	81 f1       	breq	.+96     	; 0x4306 <__ultoa_invert+0x6c>
    42a6:	e8 94       	clt
    42a8:	6f 93       	push	r22
    42aa:	6e 7f       	andi	r22, 0xFE	; 254
    42ac:	6e 5f       	subi	r22, 0xFE	; 254
    42ae:	7f 4f       	sbci	r23, 0xFF	; 255
    42b0:	8f 4f       	sbci	r24, 0xFF	; 255
    42b2:	9f 4f       	sbci	r25, 0xFF	; 255
    42b4:	af 4f       	sbci	r26, 0xFF	; 255
    42b6:	b1 e0       	ldi	r27, 0x01	; 1
    42b8:	3e d0       	rcall	.+124    	; 0x4336 <__ultoa_invert+0x9c>
    42ba:	b4 e0       	ldi	r27, 0x04	; 4
    42bc:	3c d0       	rcall	.+120    	; 0x4336 <__ultoa_invert+0x9c>
    42be:	67 0f       	add	r22, r23
    42c0:	78 1f       	adc	r23, r24
    42c2:	89 1f       	adc	r24, r25
    42c4:	9a 1f       	adc	r25, r26
    42c6:	a1 1d       	adc	r26, r1
    42c8:	68 0f       	add	r22, r24
    42ca:	79 1f       	adc	r23, r25
    42cc:	8a 1f       	adc	r24, r26
    42ce:	91 1d       	adc	r25, r1
    42d0:	a1 1d       	adc	r26, r1
    42d2:	6a 0f       	add	r22, r26
    42d4:	71 1d       	adc	r23, r1
    42d6:	81 1d       	adc	r24, r1
    42d8:	91 1d       	adc	r25, r1
    42da:	a1 1d       	adc	r26, r1
    42dc:	20 d0       	rcall	.+64     	; 0x431e <__ultoa_invert+0x84>
    42de:	09 f4       	brne	.+2      	; 0x42e2 <__ultoa_invert+0x48>
    42e0:	68 94       	set
    42e2:	3f 91       	pop	r19
    42e4:	2a e0       	ldi	r18, 0x0A	; 10
    42e6:	26 9f       	mul	r18, r22
    42e8:	11 24       	eor	r1, r1
    42ea:	30 19       	sub	r19, r0
    42ec:	30 5d       	subi	r19, 0xD0	; 208
    42ee:	31 93       	st	Z+, r19
    42f0:	de f6       	brtc	.-74     	; 0x42a8 <__ultoa_invert+0xe>
    42f2:	cf 01       	movw	r24, r30
    42f4:	08 95       	ret
    42f6:	46 2f       	mov	r20, r22
    42f8:	47 70       	andi	r20, 0x07	; 7
    42fa:	40 5d       	subi	r20, 0xD0	; 208
    42fc:	41 93       	st	Z+, r20
    42fe:	b3 e0       	ldi	r27, 0x03	; 3
    4300:	0f d0       	rcall	.+30     	; 0x4320 <__ultoa_invert+0x86>
    4302:	c9 f7       	brne	.-14     	; 0x42f6 <__ultoa_invert+0x5c>
    4304:	f6 cf       	rjmp	.-20     	; 0x42f2 <__ultoa_invert+0x58>
    4306:	46 2f       	mov	r20, r22
    4308:	4f 70       	andi	r20, 0x0F	; 15
    430a:	40 5d       	subi	r20, 0xD0	; 208
    430c:	4a 33       	cpi	r20, 0x3A	; 58
    430e:	18 f0       	brcs	.+6      	; 0x4316 <__ultoa_invert+0x7c>
    4310:	49 5d       	subi	r20, 0xD9	; 217
    4312:	31 fd       	sbrc	r19, 1
    4314:	40 52       	subi	r20, 0x20	; 32
    4316:	41 93       	st	Z+, r20
    4318:	02 d0       	rcall	.+4      	; 0x431e <__ultoa_invert+0x84>
    431a:	a9 f7       	brne	.-22     	; 0x4306 <__ultoa_invert+0x6c>
    431c:	ea cf       	rjmp	.-44     	; 0x42f2 <__ultoa_invert+0x58>
    431e:	b4 e0       	ldi	r27, 0x04	; 4
    4320:	a6 95       	lsr	r26
    4322:	97 95       	ror	r25
    4324:	87 95       	ror	r24
    4326:	77 95       	ror	r23
    4328:	67 95       	ror	r22
    432a:	ba 95       	dec	r27
    432c:	c9 f7       	brne	.-14     	; 0x4320 <__ultoa_invert+0x86>
    432e:	00 97       	sbiw	r24, 0x00	; 0
    4330:	61 05       	cpc	r22, r1
    4332:	71 05       	cpc	r23, r1
    4334:	08 95       	ret
    4336:	9b 01       	movw	r18, r22
    4338:	ac 01       	movw	r20, r24
    433a:	0a 2e       	mov	r0, r26
    433c:	06 94       	lsr	r0
    433e:	57 95       	ror	r21
    4340:	47 95       	ror	r20
    4342:	37 95       	ror	r19
    4344:	27 95       	ror	r18
    4346:	ba 95       	dec	r27
    4348:	c9 f7       	brne	.-14     	; 0x433c <__ultoa_invert+0xa2>
    434a:	62 0f       	add	r22, r18
    434c:	73 1f       	adc	r23, r19
    434e:	84 1f       	adc	r24, r20
    4350:	95 1f       	adc	r25, r21
    4352:	a0 1d       	adc	r26, r0
    4354:	08 95       	ret

00004356 <_exit>:
    4356:	f8 94       	cli

00004358 <__stop_program>:
    4358:	ff cf       	rjmp	.-2      	; 0x4358 <__stop_program>
